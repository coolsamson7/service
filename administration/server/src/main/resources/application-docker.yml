keycloak:
  realm: service
  auth-server-url: = http://keycloak:8080/auth
  proxyUrl: http://localhost:8060/auth
  proxy-url: http://localhost:8060/auth
  ssl-required: none
  resource: service-browser
  use-resource-role-mappings: true
  bearer-only: true
spring:
  liquibase:
    change-log: classpath:config/liquibase/master.xml
    enabled: true
  sql:
    init:
      mode: never
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/service
          jwk-set-uri: http://keycloak:8080/realms/service/protocol/openid-connect/certs
  jpa:
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
      defer-datasource-initialization: false
      database: postgresql
      database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    platform: postgres
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driverClassName: org.postgresql.Driver
  cloud:
    consul:
      host: consul
      port: 8500
      discovery:
        prefer-ip-address: true
        health-check-path: ${server.servlet.context-path:}/actuator/health
        health-check-interval: 15s
        health-check-timeout: 90s
        health-check-critical-timeout: 3m
        instanceId: ${spring.application.name}-${server.port}-${spring.cloud.client.ip-address}
