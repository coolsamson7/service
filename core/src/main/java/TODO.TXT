=== TODO

=== LATER

- load balancer
- keyowrds an channel?
- open-api...

=== NOW

irgendetwas mit post? body
componentmanager selber handler??

- applicationexception
    communication
    server
- einbau exceptin manager

=== DENK NACH

ComponenentManager
  -> Proxy -> Method
  -> Channel


Lokal
Client -> Proxy -> Method... ( könnte auch kette sein... )
im proxy behandlung!

Remote Fall:
Client -> Proxy -> Channel
RestCall ( z.B. )  ( kann auch services aufrufen ) -> ExceptionHandler
  -> verpackt exception als AllowedException + return auf client
  -> wenn nicjt, normale behandling


problem. IM serever ist kein service weit und breit...! ( und damit kein handler )

ist doch: interface -> descriptor -> manager!


=== DONE

- channelbuilder LIST!!!
- mvn package
- kotlin
- publish ( github package )
- log delta
- list bodyToFlux(class).toList()
- test mono
- delta alte werte??
- customize... nicht build!
- delta einbauen bzw. logik validieren! -> resolve???
- resolve -> im channelinvhandle sucks -> kein channel name!!!!
- dispatch channel
- delta
- foo.bar
- common serviuce impl
- cluster vs. local
- github action
- initialer test
- channel nicht im componentdescriptor
- customize channel
- watchdog...
- http -> rest!!! URI reicht nicht
- http != https???
- mehrere module
- lib
- channel als meta!
- requestmappig an der klasse...
- consul properties??
- GetMapping erzeugen?
- wie geht jetzt local: initiale bean vs acquire?????
- lifecycle aufschreiben!
- ConsulAutoServiceRegistration
- component registratur ( auto off )
- component health
- component auflösen
- call component http...
- wie geht der actuator??
- component lifecylce
- factor???
- exceptions: build / runtime, local, remote, ..
- DELETE, ...
- methodanalyzer aufräumen
- logging
- injection?
- report
- neue annotation + supports={"http"}
- LocalChannel singleton
- parameter name
- body
- bod response
- localhost?????
- wo annotations
- http channel anfangen & ausprobieren
- add pom...
- homebrew
- consul
- channel?? ( local )
- invocation logic ( local )
- basis injection???
- proxy + factory?
- component descriptor
- service descriptir
- manager registratur
- Service interface + Abstract + Sample + annotation
- Configuration
- Sample REST service
- Property ( application.properties )