[{"name":"DOWN","description":"com.serious.service.ComponentHealth.DOWN","location":"service-core/com.serious.service/-component-health/-d-o-w-n/index.html","searchKeys":["DOWN","DOWN","com.serious.service.ComponentHealth.DOWN"]},{"name":"RUNNING","description":"com.serious.service.ComponentStatus.RUNNING","location":"service-core/com.serious.service/-component-status/-r-u-n-n-i-n-g/index.html","searchKeys":["RUNNING","RUNNING","com.serious.service.ComponentStatus.RUNNING"]},{"name":"STOPPED","description":"com.serious.service.ComponentStatus.STOPPED","location":"service-core/com.serious.service/-component-status/-s-t-o-p-p-e-d/index.html","searchKeys":["STOPPED","STOPPED","com.serious.service.ComponentStatus.STOPPED"]},{"name":"UP","description":"com.serious.service.ComponentHealth.UP","location":"service-core/com.serious.service/-component-health/-u-p/index.html","searchKeys":["UP","UP","com.serious.service.ComponentHealth.UP"]},{"name":"VIRGIN","description":"com.serious.service.ComponentStatus.VIRGIN","location":"service-core/com.serious.service/-component-status/-v-i-r-g-i-n/index.html","searchKeys":["VIRGIN","VIRGIN","com.serious.service.ComponentStatus.VIRGIN"]},{"name":"abstract class AbstractChannel : Channel, InvocationHandler","description":"com.serious.service.channel.AbstractChannel","location":"service-core/com.serious.service.channel/-abstract-channel/index.html","searchKeys":["AbstractChannel","abstract class AbstractChannel : Channel, InvocationHandler","com.serious.service.channel.AbstractChannel"]},{"name":"abstract class AbstractComponent : Component","description":"com.serious.service.AbstractComponent","location":"service-core/com.serious.service/-abstract-component/index.html","searchKeys":["AbstractComponent","abstract class AbstractComponent : Component","com.serious.service.AbstractComponent"]},{"name":"abstract class AbstractExceptionHandler : ExceptionManager.Handler","description":"com.serious.exception.AbstractExceptionHandler","location":"service-core/com.serious.exception/-abstract-exception-handler/index.html","searchKeys":["AbstractExceptionHandler","abstract class AbstractExceptionHandler : ExceptionManager.Handler","com.serious.exception.AbstractExceptionHandler"]},{"name":"abstract class AbstractInjection<Resource, AnnotationType : Annotation, InjectionContext>(var annotationClass: Class<out Annotation>) : Injection<AnnotationType, InjectionContext> ","description":"com.serious.injection.AbstractInjection","location":"service-core/com.serious.injection/-abstract-injection/index.html","searchKeys":["AbstractInjection","abstract class AbstractInjection<Resource, AnnotationType : Annotation, InjectionContext>(var annotationClass: Class<out Annotation>) : Injection<AnnotationType, InjectionContext> ","com.serious.injection.AbstractInjection"]},{"name":"abstract class BaseDescriptor<T : Service>","description":"com.serious.service.BaseDescriptor","location":"service-core/com.serious.service/-base-descriptor/index.html","searchKeys":["BaseDescriptor","abstract class BaseDescriptor<T : Service>","com.serious.service.BaseDescriptor"]},{"name":"abstract fun apply(channel: T)","description":"com.serious.service.channel.ChannelCustomizer.apply","location":"service-core/com.serious.service.channel/-channel-customizer/apply.html","searchKeys":["apply","abstract fun apply(channel: T)","com.serious.service.channel.ChannelCustomizer.apply"]},{"name":"abstract fun channelClass(): Class<out Channel>","description":"com.serious.service.channel.ChannelCustomizer.channelClass","location":"service-core/com.serious.service.channel/-channel-customizer/channel-class.html","searchKeys":["channelClass","abstract fun channelClass(): Class<out Channel>","com.serious.service.channel.ChannelCustomizer.channelClass"]},{"name":"abstract fun getComponentDescriptor(): ComponentDescriptor<out Component>","description":"com.serious.service.BaseDescriptor.getComponentDescriptor","location":"service-core/com.serious.service/-base-descriptor/get-component-descriptor.html","searchKeys":["getComponentDescriptor","abstract fun getComponentDescriptor(): ComponentDescriptor<out Component>","com.serious.service.BaseDescriptor.getComponentDescriptor"]},{"name":"abstract fun getInstances(service: String): List<ServiceInstance>","description":"com.serious.service.ComponentRegistry.getInstances","location":"service-core/com.serious.service/-component-registry/get-instances.html","searchKeys":["getInstances","abstract fun getInstances(service: String): List<ServiceInstance>","com.serious.service.ComponentRegistry.getInstances"]},{"name":"abstract fun getServices(): List<String>","description":"com.serious.service.ComponentRegistry.getServices","location":"service-core/com.serious.service/-component-registry/get-services.html","searchKeys":["getServices","abstract fun getServices(): List<String>","com.serious.service.ComponentRegistry.getServices"]},{"name":"abstract fun inject(targetObject: Any, accessibleObject: AccessibleObject, annotation: AnnotationType, context: InjectionContext)","description":"com.serious.injection.Injection.inject","location":"service-core/com.serious.injection/-injection/inject.html","searchKeys":["inject","abstract fun inject(targetObject: Any, accessibleObject: AccessibleObject, annotation: AnnotationType, context: InjectionContext)","com.serious.injection.Injection.inject"]},{"name":"abstract fun isApplicable(component: Class<out Component>): Boolean","description":"com.serious.service.channel.ChannelCustomizer.isApplicable","location":"service-core/com.serious.service.channel/-channel-customizer/is-applicable.html","searchKeys":["isApplicable","abstract fun isApplicable(component: Class<out Component>): Boolean","com.serious.service.channel.ChannelCustomizer.isApplicable"]},{"name":"abstract fun makeChannel(descriptor: ComponentDescriptor<out Component>, addresses: ServiceAddress): Channel","description":"com.serious.service.ChannelFactory.makeChannel","location":"service-core/com.serious.service/-channel-factory/make-channel.html","searchKeys":["makeChannel","abstract fun makeChannel(descriptor: ComponentDescriptor<out Component>, addresses: ServiceAddress): Channel","com.serious.service.ChannelFactory.makeChannel"]},{"name":"abstract fun setup()","description":"com.serious.service.Channel.setup","location":"service-core/com.serious.service/-channel/setup.html","searchKeys":["setup","abstract fun setup()","com.serious.service.Channel.setup"]},{"name":"abstract fun shutdown()","description":"com.serious.service.Component.shutdown","location":"service-core/com.serious.service/-component/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","com.serious.service.Component.shutdown"]},{"name":"abstract fun shutdown(descriptor: ComponentDescriptor<Component>)","description":"com.serious.service.ComponentRegistry.shutdown","location":"service-core/com.serious.service/-component-registry/shutdown.html","searchKeys":["shutdown","abstract fun shutdown(descriptor: ComponentDescriptor<Component>)","com.serious.service.ComponentRegistry.shutdown"]},{"name":"abstract fun startup()","description":"com.serious.service.Component.startup","location":"service-core/com.serious.service/-component/startup.html","searchKeys":["startup","abstract fun startup()","com.serious.service.Component.startup"]},{"name":"abstract fun startup(descriptor: ComponentDescriptor<Component>)","description":"com.serious.service.ComponentRegistry.startup","location":"service-core/com.serious.service/-component-registry/startup.html","searchKeys":["startup","abstract fun startup(descriptor: ComponentDescriptor<Component>)","com.serious.service.ComponentRegistry.startup"]},{"name":"abstract fun topologyUpdate(newAddress: ServiceAddress)","description":"com.serious.service.Channel.topologyUpdate","location":"service-core/com.serious.service/-channel/topology-update.html","searchKeys":["topologyUpdate","abstract fun topologyUpdate(newAddress: ServiceAddress)","com.serious.service.Channel.topologyUpdate"]},{"name":"abstract val address: ServiceAddress","description":"com.serious.service.Channel.address","location":"service-core/com.serious.service/-channel/address.html","searchKeys":["address","abstract val address: ServiceAddress","com.serious.service.Channel.address"]},{"name":"abstract val addresses: List<ChannelAddress>","description":"com.serious.service.Component.addresses","location":"service-core/com.serious.service/-component/addresses.html","searchKeys":["addresses","abstract val addresses: List<ChannelAddress>","com.serious.service.Component.addresses"]},{"name":"abstract val componentDescriptor: ComponentDescriptor<out Component>","description":"com.serious.service.Channel.componentDescriptor","location":"service-core/com.serious.service/-channel/component-descriptor.html","searchKeys":["componentDescriptor","abstract val componentDescriptor: ComponentDescriptor<out Component>","com.serious.service.Channel.componentDescriptor"]},{"name":"abstract val health: ComponentHealth","description":"com.serious.service.Component.health","location":"service-core/com.serious.service/-component/health.html","searchKeys":["health","abstract val health: ComponentHealth","com.serious.service.Component.health"]},{"name":"abstract val name: String","description":"com.serious.service.Channel.name","location":"service-core/com.serious.service/-channel/name.html","searchKeys":["name","abstract val name: String","com.serious.service.Channel.name"]},{"name":"abstract val status: ComponentStatus","description":"com.serious.service.Component.status","location":"service-core/com.serious.service/-component/status.html","searchKeys":["status","abstract val status: ComponentStatus","com.serious.service.Component.status"]},{"name":"abstract var annotationClass: Class<out Annotation>","description":"com.serious.injection.Injection.annotationClass","location":"service-core/com.serious.injection/-injection/annotation-class.html","searchKeys":["annotationClass","abstract var annotationClass: Class<out Annotation>","com.serious.injection.Injection.annotationClass"]},{"name":"annotation class ComponentHost(val health: String = \"/health\")","description":"com.serious.service.ComponentHost","location":"service-core/com.serious.service/-component-host/index.html","searchKeys":["ComponentHost","annotation class ComponentHost(val health: String = \"/health\")","com.serious.service.ComponentHost"]},{"name":"annotation class ComponentInterface(val name: String = \"\", val description: String = \"\", val services: Array<KClass<out Service>>)","description":"com.serious.service.ComponentInterface","location":"service-core/com.serious.service/-component-interface/index.html","searchKeys":["ComponentInterface","annotation class ComponentInterface(val name: String = \"\", val description: String = \"\", val services: Array<KClass<out Service>>)","com.serious.service.ComponentInterface"]},{"name":"annotation class InjectService(val preferLocal: Boolean = false, val channels: Array<String> = [])","description":"com.serious.service.annotations.InjectService","location":"service-core/com.serious.service.annotations/-inject-service/index.html","searchKeys":["InjectService","annotation class InjectService(val preferLocal: Boolean = false, val channels: Array<String> = [])","com.serious.service.annotations.InjectService"]},{"name":"annotation class RegisterChannel(val value: String)","description":"com.serious.service.RegisterChannel","location":"service-core/com.serious.service/-register-channel/index.html","searchKeys":["RegisterChannel","annotation class RegisterChannel(val value: String)","com.serious.service.RegisterChannel"]},{"name":"annotation class RegisterChannelCustomizer(val channel: KClass<out Channel>)","description":"com.serious.service.channel.RegisterChannelCustomizer","location":"service-core/com.serious.service.channel/-register-channel-customizer/index.html","searchKeys":["RegisterChannelCustomizer","annotation class RegisterChannelCustomizer(val channel: KClass<out Channel>)","com.serious.service.channel.RegisterChannelCustomizer"]},{"name":"annotation class RegisterExceptionHandler","description":"com.serious.exception.RegisterExceptionHandler","location":"service-core/com.serious.exception/-register-exception-handler/index.html","searchKeys":["RegisterExceptionHandler","annotation class RegisterExceptionHandler","com.serious.exception.RegisterExceptionHandler"]},{"name":"annotation class ServiceInterface(val name: String = \"\", val description: String = \"\")","description":"com.serious.service.ServiceInterface","location":"service-core/com.serious.service/-service-interface/index.html","searchKeys":["ServiceInterface","annotation class ServiceInterface(val name: String = \"\", val description: String = \"\")","com.serious.service.ServiceInterface"]},{"name":"class AllowedException(e: Throwable) : RuntimeException","description":"com.serious.exception.AllowedException","location":"service-core/com.serious.exception/-allowed-exception/index.html","searchKeys":["AllowedException","class AllowedException(e: Throwable) : RuntimeException","com.serious.exception.AllowedException"]},{"name":"class ChannelInvocationHandler : InvocationHandler","description":"com.serious.service.ChannelInvocationHandler","location":"service-core/com.serious.service/-channel-invocation-handler/index.html","searchKeys":["ChannelInvocationHandler","class ChannelInvocationHandler : InvocationHandler","com.serious.service.ChannelInvocationHandler"]},{"name":"class ChannelManager : ApplicationContextAware","description":"com.serious.service.ChannelManager","location":"service-core/com.serious.service/-channel-manager/index.html","searchKeys":["ChannelManager","class ChannelManager : ApplicationContextAware","com.serious.service.ChannelManager"]},{"name":"class ChildBeanFactory(parentBeanFactory: ConfigurableApplicationContext) : DefaultListableBeanFactory","description":"com.serious.spring.ChildBeanFactory","location":"service-core/com.serious.spring/-child-bean-factory/index.html","searchKeys":["ChildBeanFactory","class ChildBeanFactory(parentBeanFactory: ConfigurableApplicationContext) : DefaultListableBeanFactory","com.serious.spring.ChildBeanFactory"]},{"name":"class CommunicationException : FatalException","description":"com.serious.exception.CommunicationException","location":"service-core/com.serious.exception/-communication-exception/index.html","searchKeys":["CommunicationException","class CommunicationException : FatalException","com.serious.exception.CommunicationException"]},{"name":"class ComponentDescriptor<T : Component>(componentInterface: Class<T>) : BaseDescriptor<T> ","description":"com.serious.service.ComponentDescriptor","location":"service-core/com.serious.service/-component-descriptor/index.html","searchKeys":["ComponentDescriptor","class ComponentDescriptor<T : Component>(componentInterface: Class<T>) : BaseDescriptor<T> ","com.serious.service.ComponentDescriptor"]},{"name":"class ComponentLocator : BeanFactoryPostProcessor, EnvironmentAware","description":"com.serious.service.ComponentLocator","location":"service-core/com.serious.service/-component-locator/index.html","searchKeys":["ComponentLocator","class ComponentLocator : BeanFactoryPostProcessor, EnvironmentAware","com.serious.service.ComponentLocator"]},{"name":"class DefaultExceptionHandler : AbstractExceptionHandler","description":"com.serious.exception.DefaultExceptionHandler","location":"service-core/com.serious.exception/-default-exception-handler/index.html","searchKeys":["DefaultExceptionHandler","class DefaultExceptionHandler : AbstractExceptionHandler","com.serious.exception.DefaultExceptionHandler"]},{"name":"class ExceptionManager","description":"com.serious.exception.ExceptionManager","location":"service-core/com.serious.exception/-exception-manager/index.html","searchKeys":["ExceptionManager","class ExceptionManager","com.serious.exception.ExceptionManager"]},{"name":"class InjectionException : RuntimeException","description":"com.serious.injection.InjectionException","location":"service-core/com.serious.injection/-injection-exception/index.html","searchKeys":["InjectionException","class InjectionException : RuntimeException","com.serious.injection.InjectionException"]},{"name":"class Injector(injections: Injection<Annotation, Any>) : BeanPostProcessor","description":"com.serious.injection.Injector","location":"service-core/com.serious.injection/-injector/index.html","searchKeys":["Injector","class Injector(injections: Injection<Annotation, Any>) : BeanPostProcessor","com.serious.injection.Injector"]},{"name":"class InjectorFactory(injections: Injection<Annotation, Any>) : FactoryBean<Any> , BeanPostProcessor","description":"com.serious.injection.InjectorFactory","location":"service-core/com.serious.injection/-injector-factory/index.html","searchKeys":["InjectorFactory","class InjectorFactory(injections: Injection<Annotation, Any>) : FactoryBean<Any> , BeanPostProcessor","com.serious.injection.InjectorFactory"]},{"name":"class MethodDispatcher","description":"com.serious.util.MethodDispatcher","location":"service-core/com.serious.util/-method-dispatcher/index.html","searchKeys":["MethodDispatcher","class MethodDispatcher","com.serious.util.MethodDispatcher"]},{"name":"class MissingChannel(channelManager: ChannelManager, val componentDescriptor: ComponentDescriptor<*>) : AbstractChannel","description":"com.serious.service.channel.MissingChannel","location":"service-core/com.serious.service.channel/-missing-channel/index.html","searchKeys":["MissingChannel","class MissingChannel(channelManager: ChannelManager, val componentDescriptor: ComponentDescriptor<*>) : AbstractChannel","com.serious.service.channel.MissingChannel"]},{"name":"class NoApplicableMethodError(clazz: Class<*>) : RuntimeException","description":"com.serious.util.MethodDispatcher.NoApplicableMethodError","location":"service-core/com.serious.util/-method-dispatcher/-no-applicable-method-error/index.html","searchKeys":["NoApplicableMethodError","class NoApplicableMethodError(clazz: Class<*>) : RuntimeException","com.serious.util.MethodDispatcher.NoApplicableMethodError"]},{"name":"class RegisteredMethod","description":"com.serious.util.MethodDispatcher.RegisteredMethod","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/index.html","searchKeys":["RegisteredMethod","class RegisteredMethod","com.serious.util.MethodDispatcher.RegisteredMethod"]},{"name":"class ServiceDescriptor<T : Service>(componentDescriptor: ComponentDescriptor<Component>, serviceInterface: Class<T>) : BaseDescriptor<T> ","description":"com.serious.service.ServiceDescriptor","location":"service-core/com.serious.service/-service-descriptor/index.html","searchKeys":["ServiceDescriptor","class ServiceDescriptor<T : Service>(componentDescriptor: ComponentDescriptor<Component>, serviceInterface: Class<T>) : BaseDescriptor<T> ","com.serious.service.ServiceDescriptor"]},{"name":"class ServiceException : RuntimeException","description":"com.serious.service.ServiceException","location":"service-core/com.serious.service/-service-exception/index.html","searchKeys":["ServiceException","class ServiceException : RuntimeException","com.serious.service.ServiceException"]},{"name":"class ServiceInjection constructor(injectorFactory: InjectorFactory) : AbstractInjection<Service, InjectService, Keywords?> , ApplicationContextAware","description":"com.serious.service.injections.ServiceInjection","location":"service-core/com.serious.service.injections/-service-injection/index.html","searchKeys":["ServiceInjection","class ServiceInjection constructor(injectorFactory: InjectorFactory) : AbstractInjection<Service, InjectService, Keywords?> , ApplicationContextAware","com.serious.service.injections.ServiceInjection"]},{"name":"class ServiceInstanceRegistry","description":"com.serious.service.ServiceInstanceRegistry","location":"service-core/com.serious.service/-service-instance-registry/index.html","searchKeys":["ServiceInstanceRegistry","class ServiceInstanceRegistry","com.serious.service.ServiceInstanceRegistry"]},{"name":"class ServiceManager : ApplicationContextAware","description":"com.serious.service.ServiceManager","location":"service-core/com.serious.service/-service-manager/index.html","searchKeys":["ServiceManager","class ServiceManager : ApplicationContextAware","com.serious.service.ServiceManager"]},{"name":"class ServiceRegistryException : RuntimeException","description":"com.serious.service.exception.ServiceRegistryException","location":"service-core/com.serious.service.exception/-service-registry-exception/index.html","searchKeys":["ServiceRegistryException","class ServiceRegistryException : RuntimeException","com.serious.service.exception.ServiceRegistryException"]},{"name":"class ServiceRuntimeException : RuntimeException","description":"com.serious.service.exception.ServiceRuntimeException","location":"service-core/com.serious.service.exception/-service-runtime-exception/index.html","searchKeys":["ServiceRuntimeException","class ServiceRuntimeException : RuntimeException","com.serious.service.exception.ServiceRuntimeException"]},{"name":"class SimpleMethodInvocation(targetObject: Any?, method: Method, args: Any) : MethodInvocation","description":"com.serious.service.channel.SimpleMethodInvocation","location":"service-core/com.serious.service.channel/-simple-method-invocation/index.html","searchKeys":["SimpleMethodInvocation","class SimpleMethodInvocation(targetObject: Any?, method: Method, args: Any) : MethodInvocation","com.serious.service.channel.SimpleMethodInvocation"]},{"name":"class SpringChannelFactory(var channelManager: ChannelManager, beanDefinition: BeanDefinition) : ChannelFactory","description":"com.serious.service.SpringChannelFactory","location":"service-core/com.serious.service/-spring-channel-factory/index.html","searchKeys":["SpringChannelFactory","class SpringChannelFactory(var channelManager: ChannelManager, beanDefinition: BeanDefinition) : ChannelFactory","com.serious.service.SpringChannelFactory"]},{"name":"constructor()","description":"com.serious.exception.AbstractExceptionHandler.AbstractExceptionHandler","location":"service-core/com.serious.exception/-abstract-exception-handler/-abstract-exception-handler.html","searchKeys":["AbstractExceptionHandler","constructor()","com.serious.exception.AbstractExceptionHandler.AbstractExceptionHandler"]},{"name":"constructor()","description":"com.serious.exception.DefaultExceptionHandler.DefaultExceptionHandler","location":"service-core/com.serious.exception/-default-exception-handler/-default-exception-handler.html","searchKeys":["DefaultExceptionHandler","constructor()","com.serious.exception.DefaultExceptionHandler.DefaultExceptionHandler"]},{"name":"constructor()","description":"com.serious.lang.Keywords.Keywords","location":"service-core/com.serious.lang/-keywords/-keywords.html","searchKeys":["Keywords","constructor()","com.serious.lang.Keywords.Keywords"]},{"name":"constructor()","description":"com.serious.service.AbstractComponent.AbstractComponent","location":"service-core/com.serious.service/-abstract-component/-abstract-component.html","searchKeys":["AbstractComponent","constructor()","com.serious.service.AbstractComponent.AbstractComponent"]},{"name":"constructor()","description":"com.serious.service.ChannelManager.ChannelManager","location":"service-core/com.serious.service/-channel-manager/-channel-manager.html","searchKeys":["ChannelManager","constructor()","com.serious.service.ChannelManager.ChannelManager"]},{"name":"constructor()","description":"com.serious.service.ComponentLocator.ComponentLocator","location":"service-core/com.serious.service/-component-locator/-component-locator.html","searchKeys":["ComponentLocator","constructor()","com.serious.service.ComponentLocator.ComponentLocator"]},{"name":"constructor()","description":"com.serious.service.ServiceConfiguration.ServiceConfiguration","location":"service-core/com.serious.service/-service-configuration/-service-configuration.html","searchKeys":["ServiceConfiguration","constructor()","com.serious.service.ServiceConfiguration.ServiceConfiguration"]},{"name":"constructor()","description":"com.serious.service.ServiceInstanceRegistry.ServiceInstanceRegistry","location":"service-core/com.serious.service/-service-instance-registry/-service-instance-registry.html","searchKeys":["ServiceInstanceRegistry","constructor()","com.serious.service.ServiceInstanceRegistry.ServiceInstanceRegistry"]},{"name":"constructor()","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.TopologyUpdate","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/-topology-update.html","searchKeys":["TopologyUpdate","constructor()","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.TopologyUpdate"]},{"name":"constructor(annotationClass: Class<out Annotation>)","description":"com.serious.injection.AbstractInjection.AbstractInjection","location":"service-core/com.serious.injection/-abstract-injection/-abstract-injection.html","searchKeys":["AbstractInjection","constructor(annotationClass: Class<out Annotation>)","com.serious.injection.AbstractInjection.AbstractInjection"]},{"name":"constructor(channel: String, uri: URI)","description":"com.serious.service.ChannelAddress.ChannelAddress","location":"service-core/com.serious.service/-channel-address/-channel-address.html","searchKeys":["ChannelAddress","constructor(channel: String, uri: URI)","com.serious.service.ChannelAddress.ChannelAddress"]},{"name":"constructor(channelManager: ChannelManager, beanDefinition: BeanDefinition)","description":"com.serious.service.SpringChannelFactory.SpringChannelFactory","location":"service-core/com.serious.service/-spring-channel-factory/-spring-channel-factory.html","searchKeys":["SpringChannelFactory","constructor(channelManager: ChannelManager, beanDefinition: BeanDefinition)","com.serious.service.SpringChannelFactory.SpringChannelFactory"]},{"name":"constructor(channelManager: ChannelManager, componentDescriptor: ComponentDescriptor<*>)","description":"com.serious.service.channel.MissingChannel.MissingChannel","location":"service-core/com.serious.service.channel/-missing-channel/-missing-channel.html","searchKeys":["MissingChannel","constructor(channelManager: ChannelManager, componentDescriptor: ComponentDescriptor<*>)","com.serious.service.channel.MissingChannel.MissingChannel"]},{"name":"constructor(clazz: Class<*>)","description":"com.serious.util.MethodDispatcher.NoApplicableMethodError.NoApplicableMethodError","location":"service-core/com.serious.util/-method-dispatcher/-no-applicable-method-error/-no-applicable-method-error.html","searchKeys":["NoApplicableMethodError","constructor(clazz: Class<*>)","com.serious.util.MethodDispatcher.NoApplicableMethodError.NoApplicableMethodError"]},{"name":"constructor(component: String, channel: String, serviceInstances: List<ServiceInstance>)","description":"com.serious.service.ServiceAddress.ServiceAddress","location":"service-core/com.serious.service/-service-address/-service-address.html","searchKeys":["ServiceAddress","constructor(component: String, channel: String, serviceInstances: List<ServiceInstance>)","com.serious.service.ServiceAddress.ServiceAddress"]},{"name":"constructor(componentDescriptor: ComponentDescriptor<Component>, serviceInterface: Class<T>)","description":"com.serious.service.ServiceDescriptor.ServiceDescriptor","location":"service-core/com.serious.service/-service-descriptor/-service-descriptor.html","searchKeys":["ServiceDescriptor","constructor(componentDescriptor: ComponentDescriptor<Component>, serviceInterface: Class<T>)","com.serious.service.ServiceDescriptor.ServiceDescriptor"]},{"name":"constructor(componentInterface: Class<T>)","description":"com.serious.service.ComponentDescriptor.ComponentDescriptor","location":"service-core/com.serious.service/-component-descriptor/-component-descriptor.html","searchKeys":["ComponentDescriptor","constructor(componentInterface: Class<T>)","com.serious.service.ComponentDescriptor.ComponentDescriptor"]},{"name":"constructor(e: Throwable)","description":"com.serious.exception.AllowedException.AllowedException","location":"service-core/com.serious.exception/-allowed-exception/-allowed-exception.html","searchKeys":["AllowedException","constructor(e: Throwable)","com.serious.exception.AllowedException.AllowedException"]},{"name":"constructor(injectorFactory: InjectorFactory)","description":"com.serious.service.injections.ServiceInjection.ServiceInjection","location":"service-core/com.serious.service.injections/-service-injection/-service-injection.html","searchKeys":["ServiceInjection","constructor(injectorFactory: InjectorFactory)","com.serious.service.injections.ServiceInjection.ServiceInjection"]},{"name":"constructor(instance: Any, methodName: String)","description":"com.serious.util.MethodDispatcher.MethodDispatcher","location":"service-core/com.serious.util/-method-dispatcher/-method-dispatcher.html","searchKeys":["MethodDispatcher","constructor(instance: Any, methodName: String)","com.serious.util.MethodDispatcher.MethodDispatcher"]},{"name":"constructor(message: String)","description":"com.serious.exception.CommunicationException.CommunicationException","location":"service-core/com.serious.exception/-communication-exception/-communication-exception.html","searchKeys":["CommunicationException","constructor(message: String)","com.serious.exception.CommunicationException.CommunicationException"]},{"name":"constructor(message: String)","description":"com.serious.exception.FatalException.FatalException","location":"service-core/com.serious.exception/-fatal-exception/-fatal-exception.html","searchKeys":["FatalException","constructor(message: String)","com.serious.exception.FatalException.FatalException"]},{"name":"constructor(message: String)","description":"com.serious.exception.ServerException.ServerException","location":"service-core/com.serious.exception/-server-exception/-server-exception.html","searchKeys":["ServerException","constructor(message: String)","com.serious.exception.ServerException.ServerException"]},{"name":"constructor(message: String)","description":"com.serious.injection.InjectionException.InjectionException","location":"service-core/com.serious.injection/-injection-exception/-injection-exception.html","searchKeys":["InjectionException","constructor(message: String)","com.serious.injection.InjectionException.InjectionException"]},{"name":"constructor(message: String, cause: Throwable?)","description":"com.serious.injection.InjectionException.InjectionException","location":"service-core/com.serious.injection/-injection-exception/-injection-exception.html","searchKeys":["InjectionException","constructor(message: String, cause: Throwable?)","com.serious.injection.InjectionException.InjectionException"]},{"name":"constructor(message: String, vararg args: Any?)","description":"com.serious.service.exception.ServiceRegistryException.ServiceRegistryException","location":"service-core/com.serious.service.exception/-service-registry-exception/-service-registry-exception.html","searchKeys":["ServiceRegistryException","constructor(message: String, vararg args: Any?)","com.serious.service.exception.ServiceRegistryException.ServiceRegistryException"]},{"name":"constructor(message: String, vararg args: Any?)","description":"com.serious.service.exception.ServiceRuntimeException.ServiceRuntimeException","location":"service-core/com.serious.service.exception/-service-runtime-exception/-service-runtime-exception.html","searchKeys":["ServiceRuntimeException","constructor(message: String, vararg args: Any?)","com.serious.service.exception.ServiceRuntimeException.ServiceRuntimeException"]},{"name":"constructor(message: String?)","description":"com.serious.service.ServiceException.ServiceException","location":"service-core/com.serious.service/-service-exception/-service-exception.html","searchKeys":["ServiceException","constructor(message: String?)","com.serious.service.ServiceException.ServiceException"]},{"name":"constructor(methodName: String)","description":"com.serious.util.MethodDispatcher.MethodDispatcher","location":"service-core/com.serious.util/-method-dispatcher/-method-dispatcher.html","searchKeys":["MethodDispatcher","constructor(methodName: String)","com.serious.util.MethodDispatcher.MethodDispatcher"]},{"name":"constructor(original: ExceptionManager)","description":"com.serious.exception.ExceptionManager.ExceptionManager","location":"service-core/com.serious.exception/-exception-manager/-exception-manager.html","searchKeys":["ExceptionManager","constructor(original: ExceptionManager)","com.serious.exception.ExceptionManager.ExceptionManager"]},{"name":"constructor(original: MethodDispatcher)","description":"com.serious.util.MethodDispatcher.MethodDispatcher","location":"service-core/com.serious.util/-method-dispatcher/-method-dispatcher.html","searchKeys":["MethodDispatcher","constructor(original: MethodDispatcher)","com.serious.util.MethodDispatcher.MethodDispatcher"]},{"name":"constructor(originalKeywords: Keywords, vararg keywords: Any?)","description":"com.serious.lang.Keywords.Keywords","location":"service-core/com.serious.lang/-keywords/-keywords.html","searchKeys":["Keywords","constructor(originalKeywords: Keywords, vararg keywords: Any?)","com.serious.lang.Keywords.Keywords"]},{"name":"constructor(parentBeanFactory: ConfigurableApplicationContext)","description":"com.serious.spring.ChildBeanFactory.ChildBeanFactory","location":"service-core/com.serious.spring/-child-bean-factory/-child-bean-factory.html","searchKeys":["ChildBeanFactory","constructor(parentBeanFactory: ConfigurableApplicationContext)","com.serious.spring.ChildBeanFactory.ChildBeanFactory"]},{"name":"constructor(targetObject: Any?, method: Method, vararg args: Any)","description":"com.serious.service.channel.SimpleMethodInvocation.SimpleMethodInvocation","location":"service-core/com.serious.service.channel/-simple-method-invocation/-simple-method-invocation.html","searchKeys":["SimpleMethodInvocation","constructor(targetObject: Any?, method: Method, vararg args: Any)","com.serious.service.channel.SimpleMethodInvocation.SimpleMethodInvocation"]},{"name":"constructor(throwable: Throwable)","description":"com.serious.exception.CommunicationException.CommunicationException","location":"service-core/com.serious.exception/-communication-exception/-communication-exception.html","searchKeys":["CommunicationException","constructor(throwable: Throwable)","com.serious.exception.CommunicationException.CommunicationException"]},{"name":"constructor(throwable: Throwable)","description":"com.serious.exception.FatalException.FatalException","location":"service-core/com.serious.exception/-fatal-exception/-fatal-exception.html","searchKeys":["FatalException","constructor(throwable: Throwable)","com.serious.exception.FatalException.FatalException"]},{"name":"constructor(throwable: Throwable)","description":"com.serious.exception.ServerException.ServerException","location":"service-core/com.serious.exception/-server-exception/-server-exception.html","searchKeys":["ServerException","constructor(throwable: Throwable)","com.serious.exception.ServerException.ServerException"]},{"name":"constructor(vararg handlers: ExceptionManager.Handler)","description":"com.serious.exception.ExceptionManager.ExceptionManager","location":"service-core/com.serious.exception/-exception-manager/-exception-manager.html","searchKeys":["ExceptionManager","constructor(vararg handlers: ExceptionManager.Handler)","com.serious.exception.ExceptionManager.ExceptionManager"]},{"name":"constructor(vararg injections: Injection<Annotation, Any>)","description":"com.serious.injection.Injector.Injector","location":"service-core/com.serious.injection/-injector/-injector.html","searchKeys":["Injector","constructor(vararg injections: Injection<Annotation, Any>)","com.serious.injection.Injector.Injector"]},{"name":"constructor(vararg injections: Injection<Annotation, Any>)","description":"com.serious.injection.InjectorFactory.InjectorFactory","location":"service-core/com.serious.injection/-injector-factory/-injector-factory.html","searchKeys":["InjectorFactory","constructor(vararg injections: Injection<Annotation, Any>)","com.serious.injection.InjectorFactory.InjectorFactory"]},{"name":"constructor(vararg keywords: Any?)","description":"com.serious.lang.Keywords.Keywords","location":"service-core/com.serious.lang/-keywords/-keywords.html","searchKeys":["Keywords","constructor(vararg keywords: Any?)","com.serious.lang.Keywords.Keywords"]},{"name":"data class ChannelAddress(val channel: String, val uri: URI)","description":"com.serious.service.ChannelAddress","location":"service-core/com.serious.service/-channel-address/index.html","searchKeys":["ChannelAddress","data class ChannelAddress(val channel: String, val uri: URI)","com.serious.service.ChannelAddress"]},{"name":"data class ServiceAddress(var component: String, var channel: String, var serviceInstances: List<ServiceInstance>)","description":"com.serious.service.ServiceAddress","location":"service-core/com.serious.service/-service-address/index.html","searchKeys":["ServiceAddress","data class ServiceAddress(var component: String, var channel: String, var serviceInstances: List<ServiceInstance>)","com.serious.service.ServiceAddress"]},{"name":"enum ComponentHealth : Enum<ComponentHealth> ","description":"com.serious.service.ComponentHealth","location":"service-core/com.serious.service/-component-health/index.html","searchKeys":["ComponentHealth","enum ComponentHealth : Enum<ComponentHealth> ","com.serious.service.ComponentHealth"]},{"name":"enum ComponentStatus : Enum<ComponentStatus> ","description":"com.serious.service.ComponentStatus","location":"service-core/com.serious.service/-component-status/index.html","searchKeys":["ComponentStatus","enum ComponentStatus : Enum<ComponentStatus> ","com.serious.service.ComponentStatus"]},{"name":"fun <T : ChannelCustomizer<out Channel>> getChannelCustomizers(channel: Channel): List<T>","description":"com.serious.service.ChannelManager.getChannelCustomizers","location":"service-core/com.serious.service/-channel-manager/get-channel-customizers.html","searchKeys":["getChannelCustomizers","fun <T : ChannelCustomizer<out Channel>> getChannelCustomizers(channel: Channel): List<T>","com.serious.service.ChannelManager.getChannelCustomizers"]},{"name":"fun <T : Service> acquireLocalService(serviceClass: Class<T>): T","description":"com.serious.service.ServiceManager.acquireLocalService","location":"service-core/com.serious.service/-service-manager/acquire-local-service.html","searchKeys":["acquireLocalService","fun <T : Service> acquireLocalService(serviceClass: Class<T>): T","com.serious.service.ServiceManager.acquireLocalService"]},{"name":"fun <T : Service> acquireService(descriptor: BaseDescriptor<T>, address: ServiceAddress): T","description":"com.serious.service.ServiceManager.acquireService","location":"service-core/com.serious.service/-service-manager/acquire-service.html","searchKeys":["acquireService","fun <T : Service> acquireService(descriptor: BaseDescriptor<T>, address: ServiceAddress): T","com.serious.service.ServiceManager.acquireService"]},{"name":"fun <T : Service> acquireService(serviceClass: Class<T>, vararg channels: String?): T","description":"com.serious.service.ServiceManager.acquireService","location":"service-core/com.serious.service/-service-manager/acquire-service.html","searchKeys":["acquireService","fun <T : Service> acquireService(serviceClass: Class<T>, vararg channels: String?): T","com.serious.service.ServiceManager.acquireService"]},{"name":"fun <T : Service> forService(serviceClass: Class<T>): BaseDescriptor<T>","description":"com.serious.service.BaseDescriptor.Companion.forService","location":"service-core/com.serious.service/-base-descriptor/-companion/for-service.html","searchKeys":["forService","fun <T : Service> forService(serviceClass: Class<T>): BaseDescriptor<T>","com.serious.service.BaseDescriptor.Companion.forService"]},{"name":"fun <T> add2(type: Class<T>, a1: Array<T>, vararg a2: T): Array<T>","description":"com.serious.collections.Arrays.add2","location":"service-core/com.serious.collections/-arrays/add2.html","searchKeys":["add2","fun <T> add2(type: Class<T>, a1: Array<T>, vararg a2: T): Array<T>","com.serious.collections.Arrays.add2"]},{"name":"fun <T> add2(type: Class<T>, array: Array<T>, index: Int, value: T): Array<T>","description":"com.serious.collections.Arrays.add2","location":"service-core/com.serious.collections/-arrays/add2.html","searchKeys":["add2","fun <T> add2(type: Class<T>, array: Array<T>, index: Int, value: T): Array<T>","com.serious.collections.Arrays.add2"]},{"name":"fun <T> contains(array: Array<T>, element: T): Boolean","description":"com.serious.collections.Arrays.contains","location":"service-core/com.serious.collections/-arrays/contains.html","searchKeys":["contains","fun <T> contains(array: Array<T>, element: T): Boolean","com.serious.collections.Arrays.contains"]},{"name":"fun <T> fromJSON(json: String, clazz: Class<T>): T","description":"com.serious.jackson.ThrowableMapper.fromJSON","location":"service-core/com.serious.jackson/-throwable-mapper/from-j-s-o-n.html","searchKeys":["fromJSON","fun <T> fromJSON(json: String, clazz: Class<T>): T","com.serious.jackson.ThrowableMapper.fromJSON"]},{"name":"fun <T> getValue(keyword: String, clazz: Class<T>): T","description":"com.serious.lang.Keywords.getValue","location":"service-core/com.serious.lang/-keywords/get-value.html","searchKeys":["getValue","fun <T> getValue(keyword: String, clazz: Class<T>): T","com.serious.lang.Keywords.getValue"]},{"name":"fun <T> getValue(keyword: String, clazz: Class<T>, defaultValue: T): T","description":"com.serious.lang.Keywords.getValue","location":"service-core/com.serious.lang/-keywords/get-value.html","searchKeys":["getValue","fun <T> getValue(keyword: String, clazz: Class<T>, defaultValue: T): T","com.serious.lang.Keywords.getValue"]},{"name":"fun <T> getValue(keyword: String, defaultValue: T): T","description":"com.serious.lang.Keywords.getValue","location":"service-core/com.serious.lang/-keywords/get-value.html","searchKeys":["getValue","fun <T> getValue(keyword: String, defaultValue: T): T","com.serious.lang.Keywords.getValue"]},{"name":"fun add(keywords: Keywords): Keywords","description":"com.serious.lang.Keywords.add","location":"service-core/com.serious.lang/-keywords/add.html","searchKeys":["add","fun add(keywords: Keywords): Keywords","com.serious.lang.Keywords.add"]},{"name":"fun addMethods(instance: Any, methodName: String)","description":"com.serious.util.MethodDispatcher.addMethods","location":"service-core/com.serious.util/-method-dispatcher/add-methods.html","searchKeys":["addMethods","fun addMethods(instance: Any, methodName: String)","com.serious.util.MethodDispatcher.addMethods"]},{"name":"fun addValue(keyword: String?, value: Any?)","description":"com.serious.lang.Keywords.addValue","location":"service-core/com.serious.lang/-keywords/add-value.html","searchKeys":["addValue","fun addValue(keyword: String?, value: Any?)","com.serious.lang.Keywords.addValue"]},{"name":"fun addedService(service: String, instance: ServiceInstance?)","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.addedService","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/added-service.html","searchKeys":["addedService","fun addedService(service: String, instance: ServiceInstance?)","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.addedService"]},{"name":"fun addedServices(service: String, instances: List<ServiceInstance>)","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.addedServices","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/added-services.html","searchKeys":["addedServices","fun addedServices(service: String, instances: List<ServiceInstance>)","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.addedServices"]},{"name":"fun changeAnnotationValue(annotation: Annotation?, key: String, newValue: Any): Any","description":"com.serious.lang.Annotations.changeAnnotationValue","location":"service-core/com.serious.lang/-annotations/change-annotation-value.html","searchKeys":["changeAnnotationValue","fun changeAnnotationValue(annotation: Annotation?, key: String, newValue: Any): Any","com.serious.lang.Annotations.changeAnnotationValue"]},{"name":"fun clearExternal()","description":"com.serious.exception.ExceptionManager.Companion.clearExternal","location":"service-core/com.serious.exception/-exception-manager/-companion/clear-external.html","searchKeys":["clearExternal","fun clearExternal()","com.serious.exception.ExceptionManager.Companion.clearExternal"]},{"name":"fun createImplementations(applicationContext: ApplicationContext)","description":"com.serious.service.BaseDescriptor.Companion.createImplementations","location":"service-core/com.serious.service/-base-descriptor/-companion/create-implementations.html","searchKeys":["createImplementations","fun createImplementations(applicationContext: ApplicationContext)","com.serious.service.BaseDescriptor.Companion.createImplementations"]},{"name":"fun deletedService(service: String, instance: ServiceInstance?)","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.deletedService","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/deleted-service.html","searchKeys":["deletedService","fun deletedService(service: String, instance: ServiceInstance?)","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.deletedService"]},{"name":"fun deletedServices(service: String, instances: List<ServiceInstance>)","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.deletedServices","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/deleted-services.html","searchKeys":["deletedServices","fun deletedServices(service: String, instances: List<ServiceInstance>)","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.deletedServices"]},{"name":"fun dispatch(vararg args: Any): Any","description":"com.serious.util.MethodDispatcher.dispatch","location":"service-core/com.serious.util/-method-dispatcher/dispatch.html","searchKeys":["dispatch","fun dispatch(vararg args: Any): Any","com.serious.util.MethodDispatcher.dispatch"]},{"name":"fun ensureUniqueMethods(unique: Boolean)","description":"com.serious.util.MethodDispatcher.ensureUniqueMethods","location":"service-core/com.serious.util/-method-dispatcher/ensure-unique-methods.html","searchKeys":["ensureUniqueMethods","fun ensureUniqueMethods(unique: Boolean)","com.serious.util.MethodDispatcher.ensureUniqueMethods"]},{"name":"fun foo()","description":"com.serious.util.MethodDispatcher.foo","location":"service-core/com.serious.util/-method-dispatcher/foo.html","searchKeys":["foo","fun foo()","com.serious.util.MethodDispatcher.foo"]},{"name":"fun forComponent(componentDescriptor: ComponentDescriptor<*>, channel: String, address: ServiceAddress): ChannelInvocationHandler","description":"com.serious.service.ChannelInvocationHandler.Companion.forComponent","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/for-component.html","searchKeys":["forComponent","fun forComponent(componentDescriptor: ComponentDescriptor<*>, channel: String, address: ServiceAddress): ChannelInvocationHandler","com.serious.service.ChannelInvocationHandler.Companion.forComponent"]},{"name":"fun fromJSON(json: String): Throwable","description":"com.serious.jackson.ThrowableMapper.fromJSON","location":"service-core/com.serious.jackson/-throwable-mapper/from-j-s-o-n.html","searchKeys":["fromJSON","fun fromJSON(json: String): Throwable","com.serious.jackson.ThrowableMapper.fromJSON"]},{"name":"fun getAddedInstances(service: String): MutableList<ServiceInstance?>","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getAddedInstances","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/get-added-instances.html","searchKeys":["getAddedInstances","fun getAddedInstances(service: String): MutableList<ServiceInstance?>","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getAddedInstances"]},{"name":"fun getApplicableMethod(clazz: Class<*>): Method","description":"com.serious.util.MethodDispatcher.getApplicableMethod","location":"service-core/com.serious.util/-method-dispatcher/get-applicable-method.html","searchKeys":["getApplicableMethod","fun getApplicableMethod(clazz: Class<*>): Method","com.serious.util.MethodDispatcher.getApplicableMethod"]},{"name":"fun getApplicableMethods(clazz: Class<*>): MethodDispatcher.RegisteredMethod","description":"com.serious.util.MethodDispatcher.getApplicableMethods","location":"service-core/com.serious.util/-method-dispatcher/get-applicable-methods.html","searchKeys":["getApplicableMethods","fun getApplicableMethods(clazz: Class<*>): MethodDispatcher.RegisteredMethod","com.serious.util.MethodDispatcher.getApplicableMethods"]},{"name":"fun getChannel(descriptor: ComponentDescriptor<*>, address: ServiceAddress): Channel","description":"com.serious.service.ServiceManager.getChannel","location":"service-core/com.serious.service/-service-manager/get-channel.html","searchKeys":["getChannel","fun getChannel(descriptor: ComponentDescriptor<*>, address: ServiceAddress): Channel","com.serious.service.ServiceManager.getChannel"]},{"name":"fun getDeletedInstances(service: String): MutableList<ServiceInstance?>","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getDeletedInstances","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/get-deleted-instances.html","searchKeys":["getDeletedInstances","fun getDeletedInstances(service: String): MutableList<ServiceInstance?>","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getDeletedInstances"]},{"name":"fun getGeneralizations(classObject: Class<*>): Set<Class<*>>","description":"com.serious.lang.Classes.getGeneralizations","location":"service-core/com.serious.lang/-classes/get-generalizations.html","searchKeys":["getGeneralizations","fun getGeneralizations(classObject: Class<*>): Set<Class<*>>","com.serious.lang.Classes.getGeneralizations"]},{"name":"fun getServiceAddress(componentDescriptor: ComponentDescriptor<*>, vararg channels: String?): ServiceAddress?","description":"com.serious.service.ServiceManager.getServiceAddress","location":"service-core/com.serious.service/-service-manager/get-service-address.html","searchKeys":["getServiceAddress","fun getServiceAddress(componentDescriptor: ComponentDescriptor<*>, vararg channels: String?): ServiceAddress?","com.serious.service.ServiceManager.getServiceAddress"]},{"name":"fun getServiceAddress(componentDescriptor: ComponentDescriptor<*>, vararg preferredChannels: String?): ServiceAddress?","description":"com.serious.service.ServiceInstanceRegistry.getServiceAddress","location":"service-core/com.serious.service/-service-instance-registry/get-service-address.html","searchKeys":["getServiceAddress","fun getServiceAddress(componentDescriptor: ComponentDescriptor<*>, vararg preferredChannels: String?): ServiceAddress?","com.serious.service.ServiceInstanceRegistry.getServiceAddress"]},{"name":"fun getValue(keyword: String): Any?","description":"com.serious.lang.Keywords.getValue","location":"service-core/com.serious.lang/-keywords/get-value.html","searchKeys":["getValue","fun getValue(keyword: String): Any?","com.serious.lang.Keywords.getValue"]},{"name":"fun handleException(exception: Throwable): Throwable","description":"com.serious.exception.ExceptionManager.handleException","location":"service-core/com.serious.exception/-exception-manager/handle-exception.html","searchKeys":["handleException","fun handleException(exception: Throwable): Throwable","com.serious.exception.ExceptionManager.handleException"]},{"name":"fun handleException(method: Method, e: Throwable): Throwable","description":"com.serious.service.ServiceManager.handleException","location":"service-core/com.serious.service/-service-manager/handle-exception.html","searchKeys":["handleException","fun handleException(method: Method, e: Throwable): Throwable","com.serious.service.ServiceManager.handleException"]},{"name":"fun hasApplicableMethod(clazz: Class<*>): Boolean","description":"com.serious.util.MethodDispatcher.hasApplicableMethod","location":"service-core/com.serious.util/-method-dispatcher/has-applicable-method.html","searchKeys":["hasApplicableMethod","fun hasApplicableMethod(clazz: Class<*>): Boolean","com.serious.util.MethodDispatcher.hasApplicableMethod"]},{"name":"fun hasImplementation(): Boolean","description":"com.serious.service.BaseDescriptor.hasImplementation","location":"service-core/com.serious.service/-base-descriptor/has-implementation.html","searchKeys":["hasImplementation","fun hasImplementation(): Boolean","com.serious.service.BaseDescriptor.hasImplementation"]},{"name":"fun hasValue(keyword: String): Boolean","description":"com.serious.lang.Keywords.hasValue","location":"service-core/com.serious.lang/-keywords/has-value.html","searchKeys":["hasValue","fun hasValue(keyword: String): Boolean","com.serious.lang.Keywords.hasValue"]},{"name":"fun inject(targetObject: Any, context: Any)","description":"com.serious.injection.Injector.inject","location":"service-core/com.serious.injection/-injector/inject.html","searchKeys":["inject","fun inject(targetObject: Any, context: Any)","com.serious.injection.Injector.inject"]},{"name":"fun involvesService(service: String): Boolean","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.involvesService","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/involves-service.html","searchKeys":["involvesService","fun involvesService(service: String): Boolean","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.involvesService"]},{"name":"fun isDeleted(instance: ServiceInstance?): Boolean","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.isDeleted","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/is-deleted.html","searchKeys":["isDeleted","fun isDeleted(instance: ServiceInstance?): Boolean","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.isDeleted"]},{"name":"fun log(e: Throwable)","description":"com.serious.exception.DefaultExceptionHandler.log","location":"service-core/com.serious.exception/-default-exception-handler/log.html","searchKeys":["log","fun log(e: Throwable)","com.serious.exception.DefaultExceptionHandler.log"]},{"name":"fun make(componentDescriptor: ComponentDescriptor<out Component>, address: ServiceAddress): Channel","description":"com.serious.service.ChannelManager.make","location":"service-core/com.serious.service/-channel-manager/make.html","searchKeys":["make","fun make(componentDescriptor: ComponentDescriptor<out Component>, address: ServiceAddress): Channel","com.serious.service.ChannelManager.make"]},{"name":"fun newServiceAddress(componentDescriptor: ComponentDescriptor<*>, vararg preferredChannels: String?): ServiceAddress?","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.newServiceAddress","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/new-service-address.html","searchKeys":["newServiceAddress","fun newServiceAddress(componentDescriptor: ComponentDescriptor<*>, vararg preferredChannels: String?): ServiceAddress?","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.newServiceAddress"]},{"name":"fun popExceptionManager()","description":"com.serious.exception.ExceptionManager.Companion.popExceptionManager","location":"service-core/com.serious.exception/-exception-manager/-companion/pop-exception-manager.html","searchKeys":["popExceptionManager","fun popExceptionManager()","com.serious.exception.ExceptionManager.Companion.popExceptionManager"]},{"name":"fun prexform(e: InvocationTargetException): Throwable","description":"com.serious.exception.DefaultExceptionHandler.prexform","location":"service-core/com.serious.exception/-default-exception-handler/prexform.html","searchKeys":["prexform","fun prexform(e: InvocationTargetException): Throwable","com.serious.exception.DefaultExceptionHandler.prexform"]},{"name":"fun prexform(e: Throwable): Throwable","description":"com.serious.exception.DefaultExceptionHandler.prexform","location":"service-core/com.serious.exception/-default-exception-handler/prexform.html","searchKeys":["prexform","fun prexform(e: Throwable): Throwable","com.serious.exception.DefaultExceptionHandler.prexform"]},{"name":"fun prexform(e: UndeclaredThrowableException): Throwable","description":"com.serious.exception.DefaultExceptionHandler.prexform","location":"service-core/com.serious.exception/-default-exception-handler/prexform.html","searchKeys":["prexform","fun prexform(e: UndeclaredThrowableException): Throwable","com.serious.exception.DefaultExceptionHandler.prexform"]},{"name":"fun proceed(arg: Throwable): Throwable","description":"com.serious.exception.ExceptionManager.Companion.proceed","location":"service-core/com.serious.exception/-exception-manager/-companion/proceed.html","searchKeys":["proceed","fun proceed(arg: Throwable): Throwable","com.serious.exception.ExceptionManager.Companion.proceed"]},{"name":"fun pushExceptionManager(exceptionManager: ExceptionManager?)","description":"com.serious.exception.ExceptionManager.Companion.pushExceptionManager","location":"service-core/com.serious.exception/-exception-manager/-companion/push-exception-manager.html","searchKeys":["pushExceptionManager","fun pushExceptionManager(exceptionManager: ExceptionManager?)","com.serious.exception.ExceptionManager.Companion.pushExceptionManager"]},{"name":"fun register(definition: BeanDefinition)","description":"com.serious.service.ChannelManager.register","location":"service-core/com.serious.service/-channel-manager/register.html","searchKeys":["register","fun register(definition: BeanDefinition)","com.serious.service.ChannelManager.register"]},{"name":"fun register(handler: ExceptionManager.Handler, replace: Boolean = false)","description":"com.serious.exception.ExceptionManager.register","location":"service-core/com.serious.exception/-exception-manager/register.html","searchKeys":["register","fun register(handler: ExceptionManager.Handler, replace: Boolean = false)","com.serious.exception.ExceptionManager.register"]},{"name":"fun registerChannelCustomizer(channelCustomizer: ChannelCustomizer<out Channel>)","description":"com.serious.service.ChannelManager.registerChannelCustomizer","location":"service-core/com.serious.service/-channel-manager/register-channel-customizer.html","searchKeys":["registerChannelCustomizer","fun registerChannelCustomizer(channelCustomizer: ChannelCustomizer<out Channel>)","com.serious.service.ChannelManager.registerChannelCustomizer"]},{"name":"fun registerComponent(interfaceBean: BeanDefinition)","description":"com.serious.service.ComponentLocator.registerComponent","location":"service-core/com.serious.service/-component-locator/register-component.html","searchKeys":["registerComponent","fun registerComponent(interfaceBean: BeanDefinition)","com.serious.service.ComponentLocator.registerComponent"]},{"name":"fun registerInjection(injection: Injection<Annotation, Any>)","description":"com.serious.injection.Injector.registerInjection","location":"service-core/com.serious.injection/-injector/register-injection.html","searchKeys":["registerInjection","fun registerInjection(injection: Injection<Annotation, Any>)","com.serious.injection.Injector.registerInjection"]},{"name":"fun registerInjection(injection: Injection<Annotation, Any>)","description":"com.serious.injection.InjectorFactory.registerInjection","location":"service-core/com.serious.injection/-injector-factory/register-injection.html","searchKeys":["registerInjection","fun registerInjection(injection: Injection<Annotation, Any>)","com.serious.injection.InjectorFactory.registerInjection"]},{"name":"fun rememberImplementation(descriptor: BaseDescriptor<out Service>, bean: BeanDefinition)","description":"com.serious.service.BaseDescriptor.Companion.rememberImplementation","location":"service-core/com.serious.service/-base-descriptor/-companion/remember-implementation.html","searchKeys":["rememberImplementation","fun rememberImplementation(descriptor: BaseDescriptor<out Service>, bean: BeanDefinition)","com.serious.service.BaseDescriptor.Companion.rememberImplementation"]},{"name":"fun removeChannel(channel: Channel)","description":"com.serious.service.ChannelManager.removeChannel","location":"service-core/com.serious.service/-channel-manager/remove-channel.html","searchKeys":["removeChannel","fun removeChannel(channel: Channel)","com.serious.service.ChannelManager.removeChannel"]},{"name":"fun replaceMethods(instance: Any, methodName: String)","description":"com.serious.util.MethodDispatcher.replaceMethods","location":"service-core/com.serious.util/-method-dispatcher/replace-methods.html","searchKeys":["replaceMethods","fun replaceMethods(instance: Any, methodName: String)","com.serious.util.MethodDispatcher.replaceMethods"]},{"name":"fun report()","description":"com.serious.service.ChannelManager.report","location":"service-core/com.serious.service/-channel-manager/report.html","searchKeys":["report","fun report()","com.serious.service.ChannelManager.report"]},{"name":"fun report()","description":"com.serious.service.ServiceInstanceRegistry.report","location":"service-core/com.serious.service/-service-instance-registry/report.html","searchKeys":["report","fun report()","com.serious.service.ServiceInstanceRegistry.report"]},{"name":"fun report(builder: StringBuilder)","description":"com.serious.service.ComponentDescriptor.report","location":"service-core/com.serious.service/-component-descriptor/report.html","searchKeys":["report","fun report(builder: StringBuilder)","com.serious.service.ComponentDescriptor.report"]},{"name":"fun report(builder: StringBuilder)","description":"com.serious.service.ServiceDescriptor.report","location":"service-core/com.serious.service/-service-descriptor/report.html","searchKeys":["report","fun report(builder: StringBuilder)","com.serious.service.ServiceDescriptor.report"]},{"name":"fun resolveChannel(): Channel","description":"com.serious.service.ChannelInvocationHandler.resolveChannel","location":"service-core/com.serious.service/-channel-invocation-handler/resolve-channel.html","searchKeys":["resolveChannel","fun resolveChannel(): Channel","com.serious.service.ChannelInvocationHandler.resolveChannel"]},{"name":"fun scan()","description":"com.serious.service.ChannelManager.scan","location":"service-core/com.serious.service/-channel-manager/scan.html","searchKeys":["scan","fun scan()","com.serious.service.ChannelManager.scan"]},{"name":"fun scan()","description":"com.serious.service.ComponentLocator.scan","location":"service-core/com.serious.service/-component-locator/scan.html","searchKeys":["scan","fun scan()","com.serious.service.ComponentLocator.scan"]},{"name":"fun setExternal()","description":"com.serious.exception.ExceptionManager.Companion.setExternal","location":"service-core/com.serious.exception/-exception-manager/-companion/set-external.html","searchKeys":["setExternal","fun setExternal()","com.serious.exception.ExceptionManager.Companion.setExternal"]},{"name":"fun shutdown()","description":"com.serious.service.ServiceManager.shutdown","location":"service-core/com.serious.service/-service-manager/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.serious.service.ServiceManager.shutdown"]},{"name":"fun startup()","description":"com.serious.service.ServiceInstanceRegistry.startup","location":"service-core/com.serious.service/-service-instance-registry/startup.html","searchKeys":["startup","fun startup()","com.serious.service.ServiceInstanceRegistry.startup"]},{"name":"fun startup(port: Int)","description":"com.serious.service.ServiceManager.startup","location":"service-core/com.serious.service/-service-manager/startup.html","searchKeys":["startup","fun startup(port: Int)","com.serious.service.ServiceManager.startup"]},{"name":"fun toJSON(throwable: Throwable): String","description":"com.serious.jackson.ThrowableMapper.toJSON","location":"service-core/com.serious.jackson/-throwable-mapper/to-j-s-o-n.html","searchKeys":["toJSON","fun toJSON(throwable: Throwable): String","com.serious.jackson.ThrowableMapper.toJSON"]},{"name":"fun update(newMap: MutableMap<String, List<ServiceInstance>>)","description":"com.serious.service.ServiceInstanceRegistry.update","location":"service-core/com.serious.service/-service-instance-registry/update.html","searchKeys":["update","fun update(newMap: MutableMap<String, List<ServiceInstance>>)","com.serious.service.ServiceInstanceRegistry.update"]},{"name":"fun updateTopology(serviceInstanceRegistry: ServiceInstanceRegistry, topologyUpdate: ServiceInstanceRegistry.TopologyUpdate)","description":"com.serious.service.ChannelInvocationHandler.Companion.updateTopology","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/update-topology.html","searchKeys":["updateTopology","fun updateTopology(serviceInstanceRegistry: ServiceInstanceRegistry, topologyUpdate: ServiceInstanceRegistry.TopologyUpdate)","com.serious.service.ChannelInvocationHandler.Companion.updateTopology"]},{"name":"fun valueOf(value: String): ComponentHealth","description":"com.serious.service.ComponentHealth.valueOf","location":"service-core/com.serious.service/-component-health/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ComponentHealth","com.serious.service.ComponentHealth.valueOf"]},{"name":"fun valueOf(value: String): ComponentStatus","description":"com.serious.service.ComponentStatus.valueOf","location":"service-core/com.serious.service/-component-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ComponentStatus","com.serious.service.ComponentStatus.valueOf"]},{"name":"fun values(): Array<ComponentHealth>","description":"com.serious.service.ComponentHealth.values","location":"service-core/com.serious.service/-component-health/values.html","searchKeys":["values","fun values(): Array<ComponentHealth>","com.serious.service.ComponentHealth.values"]},{"name":"fun values(): Array<ComponentStatus>","description":"com.serious.service.ComponentStatus.values","location":"service-core/com.serious.service/-component-status/values.html","searchKeys":["values","fun values(): Array<ComponentStatus>","com.serious.service.ComponentStatus.values"]},{"name":"inner class TopologyUpdate","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/index.html","searchKeys":["TopologyUpdate","inner class TopologyUpdate","com.serious.service.ServiceInstanceRegistry.TopologyUpdate"]},{"name":"interface Channel : MethodInterceptor, InvocationHandler","description":"com.serious.service.Channel","location":"service-core/com.serious.service/-channel/index.html","searchKeys":["Channel","interface Channel : MethodInterceptor, InvocationHandler","com.serious.service.Channel"]},{"name":"interface ChannelCustomizer<T : Channel>","description":"com.serious.service.channel.ChannelCustomizer","location":"service-core/com.serious.service.channel/-channel-customizer/index.html","searchKeys":["ChannelCustomizer","interface ChannelCustomizer<T : Channel>","com.serious.service.channel.ChannelCustomizer"]},{"name":"interface ChannelFactory","description":"com.serious.service.ChannelFactory","location":"service-core/com.serious.service/-channel-factory/index.html","searchKeys":["ChannelFactory","interface ChannelFactory","com.serious.service.ChannelFactory"]},{"name":"interface Component : Service","description":"com.serious.service.Component","location":"service-core/com.serious.service/-component/index.html","searchKeys":["Component","interface Component : Service","com.serious.service.Component"]},{"name":"interface ComponentRegistry","description":"com.serious.service.ComponentRegistry","location":"service-core/com.serious.service/-component-registry/index.html","searchKeys":["ComponentRegistry","interface ComponentRegistry","com.serious.service.ComponentRegistry"]},{"name":"interface Handler","description":"com.serious.exception.ExceptionManager.Handler","location":"service-core/com.serious.exception/-exception-manager/-handler/index.html","searchKeys":["Handler","interface Handler","com.serious.exception.ExceptionManager.Handler"]},{"name":"interface Injection<AnnotationType : Annotation, InjectionContext>","description":"com.serious.injection.Injection","location":"service-core/com.serious.injection/-injection/index.html","searchKeys":["Injection","interface Injection<AnnotationType : Annotation, InjectionContext>","com.serious.injection.Injection"]},{"name":"interface Service","description":"com.serious.service.Service","location":"service-core/com.serious.service/-service/index.html","searchKeys":["Service","interface Service","com.serious.service.Service"]},{"name":"lateinit value var rootPackage: String","description":"com.serious.service.ChannelManager.rootPackage","location":"service-core/com.serious.service/-channel-manager/root-package.html","searchKeys":["rootPackage","lateinit value var rootPackage: String","com.serious.service.ChannelManager.rootPackage"]},{"name":"lateinit var channelManager: ChannelManager","description":"com.serious.service.ServiceInstanceRegistry.channelManager","location":"service-core/com.serious.service/-service-instance-registry/channel-manager.html","searchKeys":["channelManager","lateinit var channelManager: ChannelManager","com.serious.service.ServiceInstanceRegistry.channelManager"]},{"name":"lateinit var componentRegistry: ComponentRegistry","description":"com.serious.service.ServiceInstanceRegistry.componentRegistry","location":"service-core/com.serious.service/-service-instance-registry/component-registry.html","searchKeys":["componentRegistry","lateinit var componentRegistry: ComponentRegistry","com.serious.service.ServiceInstanceRegistry.componentRegistry"]},{"name":"lateinit var exceptionManager: ExceptionManager","description":"com.serious.exception.AbstractExceptionHandler.exceptionManager","location":"service-core/com.serious.exception/-abstract-exception-handler/exception-manager.html","searchKeys":["exceptionManager","lateinit var exceptionManager: ExceptionManager","com.serious.exception.AbstractExceptionHandler.exceptionManager"]},{"name":"lateinit var exceptionManager: ExceptionManager","description":"com.serious.service.ServiceManager.exceptionManager","location":"service-core/com.serious.service/-service-manager/exception-manager.html","searchKeys":["exceptionManager","lateinit var exceptionManager: ExceptionManager","com.serious.service.ServiceManager.exceptionManager"]},{"name":"object Annotations","description":"com.serious.lang.Annotations","location":"service-core/com.serious.lang/-annotations/index.html","searchKeys":["Annotations","object Annotations","com.serious.lang.Annotations"]},{"name":"object Arrays","description":"com.serious.collections.Arrays","location":"service-core/com.serious.collections/-arrays/index.html","searchKeys":["Arrays","object Arrays","com.serious.collections.Arrays"]},{"name":"object Classes","description":"com.serious.lang.Classes","location":"service-core/com.serious.lang/-classes/index.html","searchKeys":["Classes","object Classes","com.serious.lang.Classes"]},{"name":"object Companion","description":"com.serious.exception.ExceptionManager.Companion","location":"service-core/com.serious.exception/-exception-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.exception.ExceptionManager.Companion"]},{"name":"object Companion","description":"com.serious.injection.AbstractInjection.Companion","location":"service-core/com.serious.injection/-abstract-injection/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.injection.AbstractInjection.Companion"]},{"name":"object Companion","description":"com.serious.injection.Injector.Companion","location":"service-core/com.serious.injection/-injector/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.injection.Injector.Companion"]},{"name":"object Companion","description":"com.serious.injection.InjectorFactory.Companion","location":"service-core/com.serious.injection/-injector-factory/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.injection.InjectorFactory.Companion"]},{"name":"object Companion","description":"com.serious.lang.Keywords.Companion","location":"service-core/com.serious.lang/-keywords/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.lang.Keywords.Companion"]},{"name":"object Companion","description":"com.serious.service.AbstractComponent.Companion","location":"service-core/com.serious.service/-abstract-component/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.AbstractComponent.Companion"]},{"name":"object Companion","description":"com.serious.service.BaseDescriptor.Companion","location":"service-core/com.serious.service/-base-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.BaseDescriptor.Companion"]},{"name":"object Companion","description":"com.serious.service.ChannelInvocationHandler.Companion","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ChannelInvocationHandler.Companion"]},{"name":"object Companion","description":"com.serious.service.ChannelManager.Companion","location":"service-core/com.serious.service/-channel-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ChannelManager.Companion"]},{"name":"object Companion","description":"com.serious.service.ComponentDescriptor.Companion","location":"service-core/com.serious.service/-component-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ComponentDescriptor.Companion"]},{"name":"object Companion","description":"com.serious.service.ComponentLocator.Companion","location":"service-core/com.serious.service/-component-locator/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ComponentLocator.Companion"]},{"name":"object Companion","description":"com.serious.service.ServiceAddress.Companion","location":"service-core/com.serious.service/-service-address/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ServiceAddress.Companion"]},{"name":"object Companion","description":"com.serious.service.ServiceInstanceRegistry.Companion","location":"service-core/com.serious.service/-service-instance-registry/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ServiceInstanceRegistry.Companion"]},{"name":"object Companion","description":"com.serious.service.ServiceManager.Companion","location":"service-core/com.serious.service/-service-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ServiceManager.Companion"]},{"name":"object Companion","description":"com.serious.service.SpringChannelFactory.Companion","location":"service-core/com.serious.service/-spring-channel-factory/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.SpringChannelFactory.Companion"]},{"name":"object Companion","description":"com.serious.util.MethodDispatcher.Companion","location":"service-core/com.serious.util/-method-dispatcher/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.util.MethodDispatcher.Companion"]},{"name":"object ThrowableMapper","description":"com.serious.jackson.ThrowableMapper","location":"service-core/com.serious.jackson/-throwable-mapper/index.html","searchKeys":["ThrowableMapper","object ThrowableMapper","com.serious.jackson.ThrowableMapper"]},{"name":"open class AbstractChannelCustomizer<T : Channel> : ChannelCustomizer<T> ","description":"com.serious.service.channel.AbstractChannelCustomizer","location":"service-core/com.serious.service.channel/-abstract-channel-customizer/index.html","searchKeys":["AbstractChannelCustomizer","open class AbstractChannelCustomizer<T : Channel> : ChannelCustomizer<T> ","com.serious.service.channel.AbstractChannelCustomizer"]},{"name":"open class FatalException : RuntimeException","description":"com.serious.exception.FatalException","location":"service-core/com.serious.exception/-fatal-exception/index.html","searchKeys":["FatalException","open class FatalException : RuntimeException","com.serious.exception.FatalException"]},{"name":"open class Keywords : Cloneable, Externalizable","description":"com.serious.lang.Keywords","location":"service-core/com.serious.lang/-keywords/index.html","searchKeys":["Keywords","open class Keywords : Cloneable, Externalizable","com.serious.lang.Keywords"]},{"name":"open class ServerException : FatalException","description":"com.serious.exception.ServerException","location":"service-core/com.serious.exception/-server-exception/index.html","searchKeys":["ServerException","open class ServerException : FatalException","com.serious.exception.ServerException"]},{"name":"open class ServiceConfiguration","description":"com.serious.service.ServiceConfiguration","location":"service-core/com.serious.service/-service-configuration/index.html","searchKeys":["ServiceConfiguration","open class ServiceConfiguration","com.serious.service.ServiceConfiguration"]},{"name":"open fun exceptionManager(): ExceptionManager","description":"com.serious.service.ServiceConfiguration.exceptionManager","location":"service-core/com.serious.service/-service-configuration/exception-manager.html","searchKeys":["exceptionManager","open fun exceptionManager(): ExceptionManager","com.serious.service.ServiceConfiguration.exceptionManager"]},{"name":"open fun injectorFactory(): InjectorFactory","description":"com.serious.service.ServiceConfiguration.injectorFactory","location":"service-core/com.serious.service/-service-configuration/injector-factory.html","searchKeys":["injectorFactory","open fun injectorFactory(): InjectorFactory","com.serious.service.ServiceConfiguration.injectorFactory"]},{"name":"open fun registerBeans(registry: DefaultListableBeanFactory)","description":"com.serious.service.BaseDescriptor.registerBeans","location":"service-core/com.serious.service/-base-descriptor/register-beans.html","searchKeys":["registerBeans","open fun registerBeans(registry: DefaultListableBeanFactory)","com.serious.service.BaseDescriptor.registerBeans"]},{"name":"open fun removeValue(keyword: String?)","description":"com.serious.lang.Keywords.removeValue","location":"service-core/com.serious.lang/-keywords/remove-value.html","searchKeys":["removeValue","open fun removeValue(keyword: String?)","com.serious.lang.Keywords.removeValue"]},{"name":"open fun setValue(keyword: String?, value: Any?)","description":"com.serious.lang.Keywords.setValue","location":"service-core/com.serious.lang/-keywords/set-value.html","searchKeys":["setValue","open fun setValue(keyword: String?, value: Any?)","com.serious.lang.Keywords.setValue"]},{"name":"open operator override fun equals(o: Any?): Boolean","description":"com.serious.service.BaseDescriptor.equals","location":"service-core/com.serious.service/-base-descriptor/equals.html","searchKeys":["equals","open operator override fun equals(o: Any?): Boolean","com.serious.service.BaseDescriptor.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.serious.lang.Keywords.equals","location":"service-core/com.serious.lang/-keywords/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.serious.lang.Keywords.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.serious.util.MethodDispatcher.RegisteredMethod.equals","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.serious.util.MethodDispatcher.RegisteredMethod.equals"]},{"name":"open operator override fun invoke(invocation: MethodInvocation): Any?","description":"com.serious.service.channel.MissingChannel.invoke","location":"service-core/com.serious.service.channel/-missing-channel/invoke.html","searchKeys":["invoke","open operator override fun invoke(invocation: MethodInvocation): Any?","com.serious.service.channel.MissingChannel.invoke"]},{"name":"open operator override fun invoke(proxy: Any, method: Method, args: Array<out Any>?): Any?","description":"com.serious.service.ChannelInvocationHandler.invoke","location":"service-core/com.serious.service/-channel-invocation-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(proxy: Any, method: Method, args: Array<out Any>?): Any?","com.serious.service.ChannelInvocationHandler.invoke"]},{"name":"open operator override fun invoke(target: Any, method: Method, args: Array<Any>): Any?","description":"com.serious.service.channel.AbstractChannel.invoke","location":"service-core/com.serious.service.channel/-abstract-channel/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, method: Method, args: Array<Any>): Any?","com.serious.service.channel.AbstractChannel.invoke"]},{"name":"open override fun apply(channel: T)","description":"com.serious.service.channel.AbstractChannelCustomizer.apply","location":"service-core/com.serious.service.channel/-abstract-channel-customizer/apply.html","searchKeys":["apply","open override fun apply(channel: T)","com.serious.service.channel.AbstractChannelCustomizer.apply"]},{"name":"open override fun channelClass(): Class<out Channel>","description":"com.serious.service.channel.AbstractChannelCustomizer.channelClass","location":"service-core/com.serious.service.channel/-abstract-channel-customizer/channel-class.html","searchKeys":["channelClass","open override fun channelClass(): Class<out Channel>","com.serious.service.channel.AbstractChannelCustomizer.channelClass"]},{"name":"open override fun clone(): Keywords","description":"com.serious.lang.Keywords.clone","location":"service-core/com.serious.lang/-keywords/clone.html","searchKeys":["clone","open override fun clone(): Keywords","com.serious.lang.Keywords.clone"]},{"name":"open override fun getArguments(): Array<Any>","description":"com.serious.service.channel.SimpleMethodInvocation.getArguments","location":"service-core/com.serious.service.channel/-simple-method-invocation/get-arguments.html","searchKeys":["getArguments","open override fun getArguments(): Array<Any>","com.serious.service.channel.SimpleMethodInvocation.getArguments"]},{"name":"open override fun getComponentDescriptor(): ComponentDescriptor<T>","description":"com.serious.service.ComponentDescriptor.getComponentDescriptor","location":"service-core/com.serious.service/-component-descriptor/get-component-descriptor.html","searchKeys":["getComponentDescriptor","open override fun getComponentDescriptor(): ComponentDescriptor<T>","com.serious.service.ComponentDescriptor.getComponentDescriptor"]},{"name":"open override fun getComponentDescriptor(): ComponentDescriptor<out Component>","description":"com.serious.service.ServiceDescriptor.getComponentDescriptor","location":"service-core/com.serious.service/-service-descriptor/get-component-descriptor.html","searchKeys":["getComponentDescriptor","open override fun getComponentDescriptor(): ComponentDescriptor<out Component>","com.serious.service.ServiceDescriptor.getComponentDescriptor"]},{"name":"open override fun getMethod(): Method","description":"com.serious.service.channel.SimpleMethodInvocation.getMethod","location":"service-core/com.serious.service.channel/-simple-method-invocation/get-method.html","searchKeys":["getMethod","open override fun getMethod(): Method","com.serious.service.channel.SimpleMethodInvocation.getMethod"]},{"name":"open override fun getObject(): Any","description":"com.serious.injection.InjectorFactory.getObject","location":"service-core/com.serious.injection/-injector-factory/get-object.html","searchKeys":["getObject","open override fun getObject(): Any","com.serious.injection.InjectorFactory.getObject"]},{"name":"open override fun getObjectType(): Class<*>","description":"com.serious.injection.InjectorFactory.getObjectType","location":"service-core/com.serious.injection/-injector-factory/get-object-type.html","searchKeys":["getObjectType","open override fun getObjectType(): Class<*>","com.serious.injection.InjectorFactory.getObjectType"]},{"name":"open override fun getStaticPart(): AccessibleObject","description":"com.serious.service.channel.SimpleMethodInvocation.getStaticPart","location":"service-core/com.serious.service.channel/-simple-method-invocation/get-static-part.html","searchKeys":["getStaticPart","open override fun getStaticPart(): AccessibleObject","com.serious.service.channel.SimpleMethodInvocation.getStaticPart"]},{"name":"open override fun getThis(): Any?","description":"com.serious.service.channel.SimpleMethodInvocation.getThis","location":"service-core/com.serious.service.channel/-simple-method-invocation/get-this.html","searchKeys":["getThis","open override fun getThis(): Any?","com.serious.service.channel.SimpleMethodInvocation.getThis"]},{"name":"open override fun hashCode(): Int","description":"com.serious.lang.Keywords.hashCode","location":"service-core/com.serious.lang/-keywords/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.serious.lang.Keywords.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.serious.service.BaseDescriptor.hashCode","location":"service-core/com.serious.service/-base-descriptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.serious.service.BaseDescriptor.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.serious.util.MethodDispatcher.RegisteredMethod.hashCode","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.serious.util.MethodDispatcher.RegisteredMethod.hashCode"]},{"name":"open override fun inject(targetObject: Any, accessibleObject: AccessibleObject, annotation: AnnotationType, context: InjectionContext)","description":"com.serious.injection.AbstractInjection.inject","location":"service-core/com.serious.injection/-abstract-injection/inject.html","searchKeys":["inject","open override fun inject(targetObject: Any, accessibleObject: AccessibleObject, annotation: AnnotationType, context: InjectionContext)","com.serious.injection.AbstractInjection.inject"]},{"name":"open override fun isApplicable(component: Class<out Component>): Boolean","description":"com.serious.service.channel.AbstractChannelCustomizer.isApplicable","location":"service-core/com.serious.service.channel/-abstract-channel-customizer/is-applicable.html","searchKeys":["isApplicable","open override fun isApplicable(component: Class<out Component>): Boolean","com.serious.service.channel.AbstractChannelCustomizer.isApplicable"]},{"name":"open override fun isSingleton(): Boolean","description":"com.serious.injection.InjectorFactory.isSingleton","location":"service-core/com.serious.injection/-injector-factory/is-singleton.html","searchKeys":["isSingleton","open override fun isSingleton(): Boolean","com.serious.injection.InjectorFactory.isSingleton"]},{"name":"open override fun makeChannel(descriptor: ComponentDescriptor<out Component>, addresses: ServiceAddress): Channel","description":"com.serious.service.SpringChannelFactory.makeChannel","location":"service-core/com.serious.service/-spring-channel-factory/make-channel.html","searchKeys":["makeChannel","open override fun makeChannel(descriptor: ComponentDescriptor<out Component>, addresses: ServiceAddress): Channel","com.serious.service.SpringChannelFactory.makeChannel"]},{"name":"open override fun postProcessAfterInitialization(bean: Any, beanName: String): Any","description":"com.serious.injection.Injector.postProcessAfterInitialization","location":"service-core/com.serious.injection/-injector/post-process-after-initialization.html","searchKeys":["postProcessAfterInitialization","open override fun postProcessAfterInitialization(bean: Any, beanName: String): Any","com.serious.injection.Injector.postProcessAfterInitialization"]},{"name":"open override fun postProcessAfterInitialization(bean: Any, beanName: String): Any","description":"com.serious.injection.InjectorFactory.postProcessAfterInitialization","location":"service-core/com.serious.injection/-injector-factory/post-process-after-initialization.html","searchKeys":["postProcessAfterInitialization","open override fun postProcessAfterInitialization(bean: Any, beanName: String): Any","com.serious.injection.InjectorFactory.postProcessAfterInitialization"]},{"name":"open override fun postProcessBeanFactory(beanFactory: ConfigurableListableBeanFactory)","description":"com.serious.service.ComponentLocator.postProcessBeanFactory","location":"service-core/com.serious.service/-component-locator/post-process-bean-factory.html","searchKeys":["postProcessBeanFactory","open override fun postProcessBeanFactory(beanFactory: ConfigurableListableBeanFactory)","com.serious.service.ComponentLocator.postProcessBeanFactory"]},{"name":"open override fun postProcessBeforeInitialization(bean: Any, beanName: String): Any","description":"com.serious.injection.Injector.postProcessBeforeInitialization","location":"service-core/com.serious.injection/-injector/post-process-before-initialization.html","searchKeys":["postProcessBeforeInitialization","open override fun postProcessBeforeInitialization(bean: Any, beanName: String): Any","com.serious.injection.Injector.postProcessBeforeInitialization"]},{"name":"open override fun postProcessBeforeInitialization(bean: Any, beanName: String): Any","description":"com.serious.injection.InjectorFactory.postProcessBeforeInitialization","location":"service-core/com.serious.injection/-injector-factory/post-process-before-initialization.html","searchKeys":["postProcessBeforeInitialization","open override fun postProcessBeforeInitialization(bean: Any, beanName: String): Any","com.serious.injection.InjectorFactory.postProcessBeforeInitialization"]},{"name":"open override fun proceed(): Any?","description":"com.serious.service.channel.SimpleMethodInvocation.proceed","location":"service-core/com.serious.service.channel/-simple-method-invocation/proceed.html","searchKeys":["proceed","open override fun proceed(): Any?","com.serious.service.channel.SimpleMethodInvocation.proceed"]},{"name":"open override fun readExternal(in: ObjectInput)","description":"com.serious.lang.Keywords.readExternal","location":"service-core/com.serious.lang/-keywords/read-external.html","searchKeys":["readExternal","open override fun readExternal(in: ObjectInput)","com.serious.lang.Keywords.readExternal"]},{"name":"open override fun registerBeans(registry: DefaultListableBeanFactory)","description":"com.serious.service.ComponentDescriptor.registerBeans","location":"service-core/com.serious.service/-component-descriptor/register-beans.html","searchKeys":["registerBeans","open override fun registerBeans(registry: DefaultListableBeanFactory)","com.serious.service.ComponentDescriptor.registerBeans"]},{"name":"open override fun setApplicationContext(applicationContext: ApplicationContext)","description":"com.serious.service.ChannelManager.setApplicationContext","location":"service-core/com.serious.service/-channel-manager/set-application-context.html","searchKeys":["setApplicationContext","open override fun setApplicationContext(applicationContext: ApplicationContext)","com.serious.service.ChannelManager.setApplicationContext"]},{"name":"open override fun setApplicationContext(applicationContext: ApplicationContext)","description":"com.serious.service.ServiceManager.setApplicationContext","location":"service-core/com.serious.service/-service-manager/set-application-context.html","searchKeys":["setApplicationContext","open override fun setApplicationContext(applicationContext: ApplicationContext)","com.serious.service.ServiceManager.setApplicationContext"]},{"name":"open override fun setApplicationContext(applicationContext: ApplicationContext)","description":"com.serious.service.injections.ServiceInjection.setApplicationContext","location":"service-core/com.serious.service.injections/-service-injection/set-application-context.html","searchKeys":["setApplicationContext","open override fun setApplicationContext(applicationContext: ApplicationContext)","com.serious.service.injections.ServiceInjection.setApplicationContext"]},{"name":"open override fun setEnvironment(environment: Environment)","description":"com.serious.service.ComponentLocator.setEnvironment","location":"service-core/com.serious.service/-component-locator/set-environment.html","searchKeys":["setEnvironment","open override fun setEnvironment(environment: Environment)","com.serious.service.ComponentLocator.setEnvironment"]},{"name":"open override fun setup()","description":"com.serious.service.channel.AbstractChannel.setup","location":"service-core/com.serious.service.channel/-abstract-channel/setup.html","searchKeys":["setup","open override fun setup()","com.serious.service.channel.AbstractChannel.setup"]},{"name":"open override fun shutdown()","description":"com.serious.service.AbstractComponent.shutdown","location":"service-core/com.serious.service/-abstract-component/shutdown.html","searchKeys":["shutdown","open override fun shutdown()","com.serious.service.AbstractComponent.shutdown"]},{"name":"open override fun startup()","description":"com.serious.service.AbstractComponent.startup","location":"service-core/com.serious.service/-abstract-component/startup.html","searchKeys":["startup","open override fun startup()","com.serious.service.AbstractComponent.startup"]},{"name":"open override fun toString(): String","description":"com.serious.lang.Keywords.toString","location":"service-core/com.serious.lang/-keywords/to-string.html","searchKeys":["toString","open override fun toString(): String","com.serious.lang.Keywords.toString"]},{"name":"open override fun toString(): String","description":"com.serious.service.ServiceAddress.toString","location":"service-core/com.serious.service/-service-address/to-string.html","searchKeys":["toString","open override fun toString(): String","com.serious.service.ServiceAddress.toString"]},{"name":"open override fun toString(): String","description":"com.serious.service.channel.SimpleMethodInvocation.toString","location":"service-core/com.serious.service.channel/-simple-method-invocation/to-string.html","searchKeys":["toString","open override fun toString(): String","com.serious.service.channel.SimpleMethodInvocation.toString"]},{"name":"open override fun toString(): String","description":"com.serious.util.MethodDispatcher.RegisteredMethod.toString","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/to-string.html","searchKeys":["toString","open override fun toString(): String","com.serious.util.MethodDispatcher.RegisteredMethod.toString"]},{"name":"open override fun topologyUpdate(newAddress: ServiceAddress)","description":"com.serious.service.channel.AbstractChannel.topologyUpdate","location":"service-core/com.serious.service.channel/-abstract-channel/topology-update.html","searchKeys":["topologyUpdate","open override fun topologyUpdate(newAddress: ServiceAddress)","com.serious.service.channel.AbstractChannel.topologyUpdate"]},{"name":"open override fun writeExternal(out: ObjectOutput)","description":"com.serious.lang.Keywords.writeExternal","location":"service-core/com.serious.lang/-keywords/write-external.html","searchKeys":["writeExternal","open override fun writeExternal(out: ObjectOutput)","com.serious.lang.Keywords.writeExternal"]},{"name":"open override val componentDescriptor: ComponentDescriptor<*>","description":"com.serious.service.channel.MissingChannel.componentDescriptor","location":"service-core/com.serious.service.channel/-missing-channel/component-descriptor.html","searchKeys":["componentDescriptor","open override val componentDescriptor: ComponentDescriptor<*>","com.serious.service.channel.MissingChannel.componentDescriptor"]},{"name":"open override val componentDescriptor: ComponentDescriptor<out Component>","description":"com.serious.service.channel.AbstractChannel.componentDescriptor","location":"service-core/com.serious.service.channel/-abstract-channel/component-descriptor.html","searchKeys":["componentDescriptor","open override val componentDescriptor: ComponentDescriptor<out Component>","com.serious.service.channel.AbstractChannel.componentDescriptor"]},{"name":"open override val health: ComponentHealth","description":"com.serious.service.AbstractComponent.health","location":"service-core/com.serious.service/-abstract-component/health.html","searchKeys":["health","open override val health: ComponentHealth","com.serious.service.AbstractComponent.health"]},{"name":"open override val isService: Boolean","description":"com.serious.service.ServiceDescriptor.isService","location":"service-core/com.serious.service/-service-descriptor/is-service.html","searchKeys":["isService","open override val isService: Boolean","com.serious.service.ServiceDescriptor.isService"]},{"name":"open override val name: String","description":"com.serious.service.channel.AbstractChannel.name","location":"service-core/com.serious.service.channel/-abstract-channel/name.html","searchKeys":["name","open override val name: String","com.serious.service.channel.AbstractChannel.name"]},{"name":"open override var address: ServiceAddress","description":"com.serious.service.channel.AbstractChannel.address","location":"service-core/com.serious.service.channel/-abstract-channel/address.html","searchKeys":["address","open override var address: ServiceAddress","com.serious.service.channel.AbstractChannel.address"]},{"name":"open override var annotationClass: Class<out Annotation>","description":"com.serious.injection.AbstractInjection.annotationClass","location":"service-core/com.serious.injection/-abstract-injection/annotation-class.html","searchKeys":["annotationClass","open override var annotationClass: Class<out Annotation>","com.serious.injection.AbstractInjection.annotationClass"]},{"name":"open override var status: ComponentStatus","description":"com.serious.service.AbstractComponent.status","location":"service-core/com.serious.service/-abstract-component/status.html","searchKeys":["status","open override var status: ComponentStatus","com.serious.service.AbstractComponent.status"]},{"name":"open val isService: Boolean","description":"com.serious.service.BaseDescriptor.isService","location":"service-core/com.serious.service/-base-descriptor/is-service.html","searchKeys":["isService","open val isService: Boolean","com.serious.service.BaseDescriptor.isService"]},{"name":"operator fun invoke(vararg args: Any): Any","description":"com.serious.util.MethodDispatcher.RegisteredMethod.invoke","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/invoke.html","searchKeys":["invoke","operator fun invoke(vararg args: Any): Any","com.serious.util.MethodDispatcher.RegisteredMethod.invoke"]},{"name":"val EMPTY_HANDLERS_ARRAY: Array<ExceptionManager.Handler>","description":"com.serious.exception.ExceptionManager.Companion.EMPTY_HANDLERS_ARRAY","location":"service-core/com.serious.exception/-exception-manager/-companion/-e-m-p-t-y_-h-a-n-d-l-e-r-s_-a-r-r-a-y.html","searchKeys":["EMPTY_HANDLERS_ARRAY","val EMPTY_HANDLERS_ARRAY: Array<ExceptionManager.Handler>","com.serious.exception.ExceptionManager.Companion.EMPTY_HANDLERS_ARRAY"]},{"name":"val LOCAL: ServiceAddress","description":"com.serious.service.ServiceAddress.Companion.LOCAL","location":"service-core/com.serious.service/-service-address/-companion/-l-o-c-a-l.html","searchKeys":["LOCAL","val LOCAL: ServiceAddress","com.serious.service.ServiceAddress.Companion.LOCAL"]},{"name":"val NONE: Keywords","description":"com.serious.lang.Keywords.Companion.NONE","location":"service-core/com.serious.lang/-keywords/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: Keywords","com.serious.lang.Keywords.Companion.NONE"]},{"name":"val channel: KClass<out Channel>","description":"com.serious.service.channel.RegisterChannelCustomizer.channel","location":"service-core/com.serious.service.channel/-register-channel-customizer/channel.html","searchKeys":["channel","val channel: KClass<out Channel>","com.serious.service.channel.RegisterChannelCustomizer.channel"]},{"name":"val channel: String","description":"com.serious.service.ChannelAddress.channel","location":"service-core/com.serious.service/-channel-address/channel.html","searchKeys":["channel","val channel: String","com.serious.service.ChannelAddress.channel"]},{"name":"val channels: Array<String>","description":"com.serious.service.annotations.InjectService.channels","location":"service-core/com.serious.service.annotations/-inject-service/channels.html","searchKeys":["channels","val channels: Array<String>","com.serious.service.annotations.InjectService.channels"]},{"name":"val componentDescriptor: ComponentDescriptor<out Component>","description":"com.serious.service.ServiceDescriptor.componentDescriptor","location":"service-core/com.serious.service/-service-descriptor/component-descriptor.html","searchKeys":["componentDescriptor","val componentDescriptor: ComponentDescriptor<out Component>","com.serious.service.ServiceDescriptor.componentDescriptor"]},{"name":"val description: String","description":"com.serious.service.ComponentInterface.description","location":"service-core/com.serious.service/-component-interface/description.html","searchKeys":["description","val description: String","com.serious.service.ComponentInterface.description"]},{"name":"val description: String","description":"com.serious.service.ServiceInterface.description","location":"service-core/com.serious.service/-service-interface/description.html","searchKeys":["description","val description: String","com.serious.service.ServiceInterface.description"]},{"name":"val entries: EnumEntries<ComponentHealth>","description":"com.serious.service.ComponentHealth.entries","location":"service-core/com.serious.service/-component-health/entries.html","searchKeys":["entries","val entries: EnumEntries<ComponentHealth>","com.serious.service.ComponentHealth.entries"]},{"name":"val entries: EnumEntries<ComponentStatus>","description":"com.serious.service.ComponentStatus.entries","location":"service-core/com.serious.service/-component-status/entries.html","searchKeys":["entries","val entries: EnumEntries<ComponentStatus>","com.serious.service.ComponentStatus.entries"]},{"name":"val exceptionManager: ExceptionManager?","description":"com.serious.exception.ExceptionManager.Companion.exceptionManager","location":"service-core/com.serious.exception/-exception-manager/-companion/exception-manager.html","searchKeys":["exceptionManager","val exceptionManager: ExceptionManager?","com.serious.exception.ExceptionManager.Companion.exceptionManager"]},{"name":"val externalAddresses: List<ChannelAddress>?","description":"com.serious.service.ComponentDescriptor.externalAddresses","location":"service-core/com.serious.service/-component-descriptor/external-addresses.html","searchKeys":["externalAddresses","val externalAddresses: List<ChannelAddress>?","com.serious.service.ComponentDescriptor.externalAddresses"]},{"name":"val health: String","description":"com.serious.service.ComponentHost.health","location":"service-core/com.serious.service/-component-host/health.html","searchKeys":["health","val health: String","com.serious.service.ComponentHost.health"]},{"name":"val host: String","description":"com.serious.service.AbstractComponent.Companion.host","location":"service-core/com.serious.service/-abstract-component/-companion/host.html","searchKeys":["host","val host: String","com.serious.service.AbstractComponent.Companion.host"]},{"name":"val isEmpty: Boolean","description":"com.serious.lang.Keywords.isEmpty","location":"service-core/com.serious.lang/-keywords/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","com.serious.lang.Keywords.isEmpty"]},{"name":"val isEmpty: Boolean","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.isEmpty","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.isEmpty"]},{"name":"val isInternal: Boolean","description":"com.serious.exception.ExceptionManager.Companion.isInternal","location":"service-core/com.serious.exception/-exception-manager/-companion/is-internal.html","searchKeys":["isInternal","val isInternal: Boolean","com.serious.exception.ExceptionManager.Companion.isInternal"]},{"name":"val keys: Collection<String?>","description":"com.serious.lang.Keywords.keys","location":"service-core/com.serious.lang/-keywords/keys.html","searchKeys":["keys","val keys: Collection<String?>","com.serious.lang.Keywords.keys"]},{"name":"val log: Logger","description":"com.serious.service.ChannelManager.Companion.log","location":"service-core/com.serious.service/-channel-manager/-companion/log.html","searchKeys":["log","val log: Logger","com.serious.service.ChannelManager.Companion.log"]},{"name":"val log: Logger","description":"com.serious.service.ServiceInstanceRegistry.Companion.log","location":"service-core/com.serious.service/-service-instance-registry/-companion/log.html","searchKeys":["log","val log: Logger","com.serious.service.ServiceInstanceRegistry.Companion.log"]},{"name":"val method: Method","description":"com.serious.util.MethodDispatcher.RegisteredMethod.method","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/method.html","searchKeys":["method","val method: Method","com.serious.util.MethodDispatcher.RegisteredMethod.method"]},{"name":"val name: String","description":"com.serious.service.ComponentInterface.name","location":"service-core/com.serious.service/-component-interface/name.html","searchKeys":["name","val name: String","com.serious.service.ComponentInterface.name"]},{"name":"val name: String","description":"com.serious.service.ServiceInterface.name","location":"service-core/com.serious.service/-service-interface/name.html","searchKeys":["name","val name: String","com.serious.service.ServiceInterface.name"]},{"name":"val parameterTypes: Array<Class<*>>","description":"com.serious.util.MethodDispatcher.RegisteredMethod.parameterTypes","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/parameter-types.html","searchKeys":["parameterTypes","val parameterTypes: Array<Class<*>>","com.serious.util.MethodDispatcher.RegisteredMethod.parameterTypes"]},{"name":"val preferLocal: Boolean = false","description":"com.serious.service.annotations.InjectService.preferLocal","location":"service-core/com.serious.service.annotations/-inject-service/prefer-local.html","searchKeys":["preferLocal","val preferLocal: Boolean = false","com.serious.service.annotations.InjectService.preferLocal"]},{"name":"val services: Array<KClass<out Service>>","description":"com.serious.service.ComponentInterface.services","location":"service-core/com.serious.service/-component-interface/services.html","searchKeys":["services","val services: Array<KClass<out Service>>","com.serious.service.ComponentInterface.services"]},{"name":"val uri: List<URI>","description":"com.serious.service.ServiceAddress.uri","location":"service-core/com.serious.service/-service-address/uri.html","searchKeys":["uri","val uri: List<URI>","com.serious.service.ServiceAddress.uri"]},{"name":"val uri: URI","description":"com.serious.service.ChannelAddress.uri","location":"service-core/com.serious.service/-channel-address/uri.html","searchKeys":["uri","val uri: URI","com.serious.service.ChannelAddress.uri"]},{"name":"val uri: URI?","description":"com.serious.service.BaseDescriptor.uri","location":"service-core/com.serious.service/-base-descriptor/uri.html","searchKeys":["uri","val uri: URI?","com.serious.service.BaseDescriptor.uri"]},{"name":"val value: String","description":"com.serious.service.RegisterChannel.value","location":"service-core/com.serious.service/-register-channel/value.html","searchKeys":["value","val value: String","com.serious.service.RegisterChannel.value"]},{"name":"var applicationContext: ApplicationContext?","description":"com.serious.service.ChannelManager.applicationContext","location":"service-core/com.serious.service/-channel-manager/application-context.html","searchKeys":["applicationContext","var applicationContext: ApplicationContext?","com.serious.service.ChannelManager.applicationContext"]},{"name":"var applicationContext: ApplicationContext?","description":"com.serious.service.ServiceManager.applicationContext","location":"service-core/com.serious.service/-service-manager/application-context.html","searchKeys":["applicationContext","var applicationContext: ApplicationContext?","com.serious.service.ServiceManager.applicationContext"]},{"name":"var channel: String","description":"com.serious.service.ServiceAddress.channel","location":"service-core/com.serious.service/-service-address/channel.html","searchKeys":["channel","var channel: String","com.serious.service.ServiceAddress.channel"]},{"name":"var channelFactories: MutableMap<String, ChannelFactory>","description":"com.serious.service.ChannelManager.channelFactories","location":"service-core/com.serious.service/-channel-manager/channel-factories.html","searchKeys":["channelFactories","var channelFactories: MutableMap<String, ChannelFactory>","com.serious.service.ChannelManager.channelFactories"]},{"name":"var channelManager: ChannelManager","description":"com.serious.service.ServiceManager.channelManager","location":"service-core/com.serious.service/-service-manager/channel-manager.html","searchKeys":["channelManager","var channelManager: ChannelManager","com.serious.service.ServiceManager.channelManager"]},{"name":"var channelManager: ChannelManager","description":"com.serious.service.SpringChannelFactory.channelManager","location":"service-core/com.serious.service/-spring-channel-factory/channel-manager.html","searchKeys":["channelManager","var channelManager: ChannelManager","com.serious.service.SpringChannelFactory.channelManager"]},{"name":"var channels: MutableMap<ServiceAddress, Channel>","description":"com.serious.service.ChannelManager.channels","location":"service-core/com.serious.service/-channel-manager/channels.html","searchKeys":["channels","var channels: MutableMap<ServiceAddress, Channel>","com.serious.service.ChannelManager.channels"]},{"name":"var component: String","description":"com.serious.service.ServiceAddress.component","location":"service-core/com.serious.service/-service-address/component.html","searchKeys":["component","var component: String","com.serious.service.ServiceAddress.component"]},{"name":"var componentDescriptors: MutableMap<String, ComponentDescriptor<Component>>","description":"com.serious.service.ServiceManager.componentDescriptors","location":"service-core/com.serious.service/-service-manager/component-descriptors.html","searchKeys":["componentDescriptors","var componentDescriptors: MutableMap<String, ComponentDescriptor<Component>>","com.serious.service.ServiceManager.componentDescriptors"]},{"name":"var componentRegistry: ComponentRegistry","description":"com.serious.service.ServiceManager.componentRegistry","location":"service-core/com.serious.service/-service-manager/component-registry.html","searchKeys":["componentRegistry","var componentRegistry: ComponentRegistry","com.serious.service.ServiceManager.componentRegistry"]},{"name":"var components: ArrayList<ComponentDescriptor<Component>>","description":"com.serious.service.ComponentLocator.Companion.components","location":"service-core/com.serious.service/-component-locator/-companion/components.html","searchKeys":["components","var components: ArrayList<ComponentDescriptor<Component>>","com.serious.service.ComponentLocator.Companion.components"]},{"name":"var descriptors: MutableList<ComponentDescriptor<*>>","description":"com.serious.service.ComponentDescriptor.Companion.descriptors","location":"service-core/com.serious.service/-component-descriptor/-companion/descriptors.html","searchKeys":["descriptors","var descriptors: MutableList<ComponentDescriptor<*>>","com.serious.service.ComponentDescriptor.Companion.descriptors"]},{"name":"var descriptors: MutableMap<Class<out Service>, BaseDescriptor<*>>","description":"com.serious.service.BaseDescriptor.Companion.descriptors","location":"service-core/com.serious.service/-base-descriptor/-companion/descriptors.html","searchKeys":["descriptors","var descriptors: MutableMap<Class<out Service>, BaseDescriptor<*>>","com.serious.service.BaseDescriptor.Companion.descriptors"]},{"name":"var emptyArgs: Array<Any>","description":"com.serious.service.ChannelInvocationHandler.Companion.emptyArgs","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/empty-args.html","searchKeys":["emptyArgs","var emptyArgs: Array<Any>","com.serious.service.ChannelInvocationHandler.Companion.emptyArgs"]},{"name":"var emptyArgs: Array<Any>","description":"com.serious.service.ServiceManager.Companion.emptyArgs","location":"service-core/com.serious.service/-service-manager/-companion/empty-args.html","searchKeys":["emptyArgs","var emptyArgs: Array<Any>","com.serious.service.ServiceManager.Companion.emptyArgs"]},{"name":"var handlers: Array<ExceptionManager.Handler>","description":"com.serious.exception.ExceptionManager.handlers","location":"service-core/com.serious.exception/-exception-manager/handlers.html","searchKeys":["handlers","var handlers: Array<ExceptionManager.Handler>","com.serious.exception.ExceptionManager.handlers"]},{"name":"var health: String?","description":"com.serious.service.ComponentDescriptor.health","location":"service-core/com.serious.service/-component-descriptor/health.html","searchKeys":["health","var health: String?","com.serious.service.ComponentDescriptor.health"]},{"name":"var implementingBeans: MutableMap<BaseDescriptor<out Service>, BeanDefinition>","description":"com.serious.service.BaseDescriptor.Companion.implementingBeans","location":"service-core/com.serious.service/-base-descriptor/-companion/implementing-beans.html","searchKeys":["implementingBeans","var implementingBeans: MutableMap<BaseDescriptor<out Service>, BeanDefinition>","com.serious.service.BaseDescriptor.Companion.implementingBeans"]},{"name":"var inet: InetUtils","description":"com.serious.service.AbstractComponent.Companion.inet","location":"service-core/com.serious.service/-abstract-component/-companion/inet.html","searchKeys":["inet","var inet: InetUtils","com.serious.service.AbstractComponent.Companion.inet"]},{"name":"var local: Service?","description":"com.serious.service.BaseDescriptor.local","location":"service-core/com.serious.service/-base-descriptor/local.html","searchKeys":["local","var local: Service?","com.serious.service.BaseDescriptor.local"]},{"name":"var log: Logger","description":"com.serious.service.ChannelInvocationHandler.Companion.log","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/log.html","searchKeys":["log","var log: Logger","com.serious.service.ChannelInvocationHandler.Companion.log"]},{"name":"var log: Logger","description":"com.serious.service.ServiceManager.Companion.log","location":"service-core/com.serious.service/-service-manager/-companion/log.html","searchKeys":["log","var log: Logger","com.serious.service.ServiceManager.Companion.log"]},{"name":"var logger: Logger","description":"com.serious.service.BaseDescriptor.Companion.logger","location":"service-core/com.serious.service/-base-descriptor/-companion/logger.html","searchKeys":["logger","var logger: Logger","com.serious.service.BaseDescriptor.Companion.logger"]},{"name":"var logger: Logger","description":"com.serious.service.SpringChannelFactory.Companion.logger","location":"service-core/com.serious.service/-spring-channel-factory/-companion/logger.html","searchKeys":["logger","var logger: Logger","com.serious.service.SpringChannelFactory.Companion.logger"]},{"name":"var name: String","description":"com.serious.service.BaseDescriptor.name","location":"service-core/com.serious.service/-base-descriptor/name.html","searchKeys":["name","var name: String","com.serious.service.BaseDescriptor.name"]},{"name":"var nextApplicableMethod: MethodDispatcher.RegisteredMethod?","description":"com.serious.util.MethodDispatcher.RegisteredMethod.nextApplicableMethod","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/next-applicable-method.html","searchKeys":["nextApplicableMethod","var nextApplicableMethod: MethodDispatcher.RegisteredMethod?","com.serious.util.MethodDispatcher.RegisteredMethod.nextApplicableMethod"]},{"name":"var port: String?","description":"com.serious.service.AbstractComponent.Companion.port","location":"service-core/com.serious.service/-abstract-component/-companion/port.html","searchKeys":["port","var port: String?","com.serious.service.AbstractComponent.Companion.port"]},{"name":"var proxies: MutableMap<String, Service>","description":"com.serious.service.ServiceManager.proxies","location":"service-core/com.serious.service/-service-manager/proxies.html","searchKeys":["proxies","var proxies: MutableMap<String, Service>","com.serious.service.ServiceManager.proxies"]},{"name":"var serviceInstanceRegistry: ServiceInstanceRegistry","description":"com.serious.service.ServiceManager.serviceInstanceRegistry","location":"service-core/com.serious.service/-service-manager/service-instance-registry.html","searchKeys":["serviceInstanceRegistry","var serviceInstanceRegistry: ServiceInstanceRegistry","com.serious.service.ServiceManager.serviceInstanceRegistry"]},{"name":"var serviceInstances: List<ServiceInstance>","description":"com.serious.service.ServiceAddress.serviceInstances","location":"service-core/com.serious.service/-service-address/service-instances.html","searchKeys":["serviceInstances","var serviceInstances: List<ServiceInstance>","com.serious.service.ServiceAddress.serviceInstances"]},{"name":"var serviceInterface: Class<out T>","description":"com.serious.service.BaseDescriptor.serviceInterface","location":"service-core/com.serious.service/-base-descriptor/service-interface.html","searchKeys":["serviceInterface","var serviceInterface: Class<out T>","com.serious.service.BaseDescriptor.serviceInterface"]},{"name":"var serviceManager: ServiceManager?","description":"com.serious.service.ComponentDescriptor.serviceManager","location":"service-core/com.serious.service/-component-descriptor/service-manager.html","searchKeys":["serviceManager","var serviceManager: ServiceManager?","com.serious.service.ComponentDescriptor.serviceManager"]},{"name":"var services: MutableList<ServiceDescriptor<*>>","description":"com.serious.service.ComponentDescriptor.services","location":"service-core/com.serious.service/-component-descriptor/services.html","searchKeys":["services","var services: MutableList<ServiceDescriptor<*>>","com.serious.service.ComponentDescriptor.services"]},{"name":"var size: Int","description":"com.serious.lang.Keywords.size","location":"service-core/com.serious.lang/-keywords/size.html","searchKeys":["size","var size: Int","com.serious.lang.Keywords.size"]}]
