[{"name":"DOWN","description":"com.serious.service.ComponentHealth.DOWN","location":"service-core/com.serious.service/-component-health/-d-o-w-n/index.html","searchKeys":["DOWN","DOWN","com.serious.service.ComponentHealth.DOWN"]},{"name":"RUNNING","description":"com.serious.service.ComponentStatus.RUNNING","location":"service-core/com.serious.service/-component-status/-r-u-n-n-i-n-g/index.html","searchKeys":["RUNNING","RUNNING","com.serious.service.ComponentStatus.RUNNING"]},{"name":"STOPPED","description":"com.serious.service.ComponentStatus.STOPPED","location":"service-core/com.serious.service/-component-status/-s-t-o-p-p-e-d/index.html","searchKeys":["STOPPED","STOPPED","com.serious.service.ComponentStatus.STOPPED"]},{"name":"UP","description":"com.serious.service.ComponentHealth.UP","location":"service-core/com.serious.service/-component-health/-u-p/index.html","searchKeys":["UP","UP","com.serious.service.ComponentHealth.UP"]},{"name":"VIRGIN","description":"com.serious.service.ComponentStatus.VIRGIN","location":"service-core/com.serious.service/-component-status/-v-i-r-g-i-n/index.html","searchKeys":["VIRGIN","VIRGIN","com.serious.service.ComponentStatus.VIRGIN"]},{"name":"abstract class AbstractChannel : Channel, InvocationHandler","description":"com.serious.service.channel.AbstractChannel","location":"service-core/com.serious.service.channel/-abstract-channel/index.html","searchKeys":["AbstractChannel","abstract class AbstractChannel : Channel, InvocationHandler","com.serious.service.channel.AbstractChannel"]},{"name":"abstract class AbstractComponent : Component","description":"com.serious.service.AbstractComponent","location":"service-core/com.serious.service/-abstract-component/index.html","searchKeys":["AbstractComponent","abstract class AbstractComponent : Component","com.serious.service.AbstractComponent"]},{"name":"abstract class AbstractExceptionHandler : ExceptionManager.Handler","description":"com.serious.exception.AbstractExceptionHandler","location":"service-core/com.serious.exception/-abstract-exception-handler/index.html","searchKeys":["AbstractExceptionHandler","abstract class AbstractExceptionHandler : ExceptionManager.Handler","com.serious.exception.AbstractExceptionHandler"]},{"name":"abstract class AbstractInjection<Resource, AnnotationType : Annotation, InjectionContext>(var annotationClass: Class<out Annotation>) : Injection<AnnotationType, InjectionContext> ","description":"com.serious.injection.AbstractInjection","location":"service-core/com.serious.injection/-abstract-injection/index.html","searchKeys":["AbstractInjection","abstract class AbstractInjection<Resource, AnnotationType : Annotation, InjectionContext>(var annotationClass: Class<out Annotation>) : Injection<AnnotationType, InjectionContext> ","com.serious.injection.AbstractInjection"]},{"name":"abstract class BaseDescriptor<T : Service>","description":"com.serious.service.BaseDescriptor","location":"service-core/com.serious.service/-base-descriptor/index.html","searchKeys":["BaseDescriptor","abstract class BaseDescriptor<T : Service>","com.serious.service.BaseDescriptor"]},{"name":"abstract class URIProvider(var address: ServiceAddress)","description":"com.serious.service.channel.AbstractChannel.URIProvider","location":"service-core/com.serious.service.channel/-abstract-channel/-u-r-i-provider/index.html","searchKeys":["URIProvider","abstract class URIProvider(var address: ServiceAddress)","com.serious.service.channel.AbstractChannel.URIProvider"]},{"name":"abstract fun apply(channel: T)","description":"com.serious.service.channel.ChannelCustomizer.apply","location":"service-core/com.serious.service.channel/-channel-customizer/apply.html","searchKeys":["apply","abstract fun apply(channel: T)","com.serious.service.channel.ChannelCustomizer.apply"]},{"name":"abstract fun channels(): Map<String, ChannelDTO>","description":"com.serious.service.administration.ApplicationIntrospectionService.channels","location":"service-core/com.serious.service.administration/-application-introspection-service/channels.html","searchKeys":["channels","abstract fun channels(): Map<String, ChannelDTO>","com.serious.service.administration.ApplicationIntrospectionService.channels"]},{"name":"abstract fun create(address: ServiceAddress): AbstractChannel.URIProvider","description":"com.serious.service.channel.AbstractChannel.URIProviderFactory.create","location":"service-core/com.serious.service.channel/-abstract-channel/-u-r-i-provider-factory/create.html","searchKeys":["create","abstract fun create(address: ServiceAddress): AbstractChannel.URIProvider","com.serious.service.channel.AbstractChannel.URIProviderFactory.create"]},{"name":"abstract fun deregister(descriptor: ComponentDescriptor<Component>)","description":"com.serious.service.ComponentRegistry.deregister","location":"service-core/com.serious.service/-component-registry/deregister.html","searchKeys":["deregister","abstract fun deregister(descriptor: ComponentDescriptor<Component>)","com.serious.service.ComponentRegistry.deregister"]},{"name":"abstract fun executeMethod(component: String, request: String): String","description":"com.serious.service.administration.ComponentIntrospectionService.executeMethod","location":"service-core/com.serious.service.administration/-component-introspection-service/execute-method.html","searchKeys":["executeMethod","abstract fun executeMethod(component: String, request: String): String","com.serious.service.administration.ComponentIntrospectionService.executeMethod"]},{"name":"abstract fun fetchComponent(component: String): ComponentDTO","description":"com.serious.service.administration.ComponentIntrospectionService.fetchComponent","location":"service-core/com.serious.service.administration/-component-introspection-service/fetch-component.html","searchKeys":["fetchComponent","abstract fun fetchComponent(component: String): ComponentDTO","com.serious.service.administration.ComponentIntrospectionService.fetchComponent"]},{"name":"abstract fun fetchComponentServices(component: String): List<String>","description":"com.serious.service.administration.ComponentIntrospectionService.fetchComponentServices","location":"service-core/com.serious.service.administration/-component-introspection-service/fetch-component-services.html","searchKeys":["fetchComponentServices","abstract fun fetchComponentServices(component: String): List<String>","com.serious.service.administration.ComponentIntrospectionService.fetchComponentServices"]},{"name":"abstract fun getComponentDescriptor(): ComponentDescriptor<out Component>","description":"com.serious.service.BaseDescriptor.getComponentDescriptor","location":"service-core/com.serious.service/-base-descriptor/get-component-descriptor.html","searchKeys":["getComponentDescriptor","abstract fun getComponentDescriptor(): ComponentDescriptor<out Component>","com.serious.service.BaseDescriptor.getComponentDescriptor"]},{"name":"abstract fun getInstances(service: String): List<ServiceInstance>","description":"com.serious.service.ComponentRegistry.getInstances","location":"service-core/com.serious.service/-component-registry/get-instances.html","searchKeys":["getInstances","abstract fun getInstances(service: String): List<ServiceInstance>","com.serious.service.ComponentRegistry.getInstances"]},{"name":"abstract fun getNodes(): List<String>","description":"com.serious.service.ComponentAdministration.getNodes","location":"service-core/com.serious.service/-component-administration/get-nodes.html","searchKeys":["getNodes","abstract fun getNodes(): List<String>","com.serious.service.ComponentAdministration.getNodes"]},{"name":"abstract fun getServiceInstances(serviceName: String): List<ServiceInstance>","description":"com.serious.service.ComponentAdministration.getServiceInstances","location":"service-core/com.serious.service/-component-administration/get-service-instances.html","searchKeys":["getServiceInstances","abstract fun getServiceInstances(serviceName: String): List<ServiceInstance>","com.serious.service.ComponentAdministration.getServiceInstances"]},{"name":"abstract fun getServices(): List<String>","description":"com.serious.service.ComponentAdministration.getServices","location":"service-core/com.serious.service/-component-administration/get-services.html","searchKeys":["getServices","abstract fun getServices(): List<String>","com.serious.service.ComponentAdministration.getServices"]},{"name":"abstract fun getServices(): List<String>","description":"com.serious.service.ComponentRegistry.getServices","location":"service-core/com.serious.service/-component-registry/get-services.html","searchKeys":["getServices","abstract fun getServices(): List<String>","com.serious.service.ComponentRegistry.getServices"]},{"name":"abstract fun inject(targetObject: Any, accessibleObject: AccessibleObject, annotation: AnnotationType, context: InjectionContext)","description":"com.serious.injection.Injection.inject","location":"service-core/com.serious.injection/-injection/inject.html","searchKeys":["inject","abstract fun inject(targetObject: Any, accessibleObject: AccessibleObject, annotation: AnnotationType, context: InjectionContext)","com.serious.injection.Injection.inject"]},{"name":"abstract fun isApplicable(component: String): Boolean","description":"com.serious.service.channel.ChannelCustomizer.isApplicable","location":"service-core/com.serious.service.channel/-channel-customizer/is-applicable.html","searchKeys":["isApplicable","abstract fun isApplicable(component: String): Boolean","com.serious.service.channel.ChannelCustomizer.isApplicable"]},{"name":"abstract fun isArray(type: String): Boolean","description":"com.serious.codegenerator.LanguageSupport.isArray","location":"service-core/com.serious.codegenerator/-language-support/is-array.html","searchKeys":["isArray","abstract fun isArray(type: String): Boolean","com.serious.codegenerator.LanguageSupport.isArray"]},{"name":"abstract fun isNativeType(type: String): Boolean","description":"com.serious.codegenerator.LanguageSupport.isNativeType","location":"service-core/com.serious.codegenerator/-language-support/is-native-type.html","searchKeys":["isNativeType","abstract fun isNativeType(type: String): Boolean","com.serious.codegenerator.LanguageSupport.isNativeType"]},{"name":"abstract fun listServices(component: String): Collection<InterfaceDescriptor>","description":"com.serious.service.administration.ComponentIntrospectionService.listServices","location":"service-core/com.serious.service.administration/-component-introspection-service/list-services.html","searchKeys":["listServices","abstract fun listServices(component: String): Collection<InterfaceDescriptor>","com.serious.service.administration.ComponentIntrospectionService.listServices"]},{"name":"abstract fun makeChannel(component: String, addresses: ServiceAddress): Channel","description":"com.serious.service.ChannelFactory.makeChannel","location":"service-core/com.serious.service/-channel-factory/make-channel.html","searchKeys":["makeChannel","abstract fun makeChannel(component: String, addresses: ServiceAddress): Channel","com.serious.service.ChannelFactory.makeChannel"]},{"name":"abstract fun mapType(type: String): String","description":"com.serious.codegenerator.LanguageSupport.mapType","location":"service-core/com.serious.codegenerator/-language-support/map-type.html","searchKeys":["mapType","abstract fun mapType(type: String): String","com.serious.codegenerator.LanguageSupport.mapType"]},{"name":"abstract fun provide(): URI","description":"com.serious.service.channel.AbstractChannel.URIProvider.provide","location":"service-core/com.serious.service.channel/-abstract-channel/-u-r-i-provider/provide.html","searchKeys":["provide","abstract fun provide(): URI","com.serious.service.channel.AbstractChannel.URIProvider.provide"]},{"name":"abstract fun register(descriptor: ComponentDescriptor<Component>)","description":"com.serious.service.ComponentRegistry.register","location":"service-core/com.serious.service/-component-registry/register.html","searchKeys":["register","abstract fun register(descriptor: ComponentDescriptor<Component>)","com.serious.service.ComponentRegistry.register"]},{"name":"abstract fun serviceHealth(serviceName: String, serviceId: String): String","description":"com.serious.service.ComponentAdministration.serviceHealth","location":"service-core/com.serious.service/-component-administration/service-health.html","searchKeys":["serviceHealth","abstract fun serviceHealth(serviceName: String, serviceId: String): String","com.serious.service.ComponentAdministration.serviceHealth"]},{"name":"abstract fun serviceHealths(serviceName: String): Map<String, String>","description":"com.serious.service.ComponentAdministration.serviceHealths","location":"service-core/com.serious.service/-component-administration/service-healths.html","searchKeys":["serviceHealths","abstract fun serviceHealths(serviceName: String): Map<String, String>","com.serious.service.ComponentAdministration.serviceHealths"]},{"name":"abstract fun setup()","description":"com.serious.service.Channel.setup","location":"service-core/com.serious.service/-channel/setup.html","searchKeys":["setup","abstract fun setup()","com.serious.service.Channel.setup"]},{"name":"abstract fun shutdown()","description":"com.serious.service.Component.shutdown","location":"service-core/com.serious.service/-component/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","com.serious.service.Component.shutdown"]},{"name":"abstract fun startup()","description":"com.serious.service.Component.startup","location":"service-core/com.serious.service/-component/startup.html","searchKeys":["startup","abstract fun startup()","com.serious.service.Component.startup"]},{"name":"abstract fun topologyUpdate(newAddress: ServiceAddress)","description":"com.serious.service.Channel.topologyUpdate","location":"service-core/com.serious.service/-channel/topology-update.html","searchKeys":["topologyUpdate","abstract fun topologyUpdate(newAddress: ServiceAddress)","com.serious.service.Channel.topologyUpdate"]},{"name":"abstract fun update(update: ServiceInstanceRegistry.TopologyUpdate)","description":"com.serious.service.TopologyListener.update","location":"service-core/com.serious.service/-topology-listener/update.html","searchKeys":["update","abstract fun update(update: ServiceInstanceRegistry.TopologyUpdate)","com.serious.service.TopologyListener.update"]},{"name":"abstract val address: ServiceAddress","description":"com.serious.service.Channel.address","location":"service-core/com.serious.service/-channel/address.html","searchKeys":["address","abstract val address: ServiceAddress","com.serious.service.Channel.address"]},{"name":"abstract val addresses: List<ChannelAddress>","description":"com.serious.service.Component.addresses","location":"service-core/com.serious.service/-component/addresses.html","searchKeys":["addresses","abstract val addresses: List<ChannelAddress>","com.serious.service.Component.addresses"]},{"name":"abstract val channelClass: Class<out Channel>","description":"com.serious.service.channel.ChannelCustomizer.channelClass","location":"service-core/com.serious.service.channel/-channel-customizer/channel-class.html","searchKeys":["channelClass","abstract val channelClass: Class<out Channel>","com.serious.service.channel.ChannelCustomizer.channelClass"]},{"name":"abstract val component: String","description":"com.serious.service.Channel.component","location":"service-core/com.serious.service/-channel/component.html","searchKeys":["component","abstract val component: String","com.serious.service.Channel.component"]},{"name":"abstract val health: ComponentHealth","description":"com.serious.service.Component.health","location":"service-core/com.serious.service/-component/health.html","searchKeys":["health","abstract val health: ComponentHealth","com.serious.service.Component.health"]},{"name":"abstract val name: String","description":"com.serious.service.Channel.name","location":"service-core/com.serious.service/-channel/name.html","searchKeys":["name","abstract val name: String","com.serious.service.Channel.name"]},{"name":"abstract val status: ComponentStatus","description":"com.serious.service.Component.status","location":"service-core/com.serious.service/-component/status.html","searchKeys":["status","abstract val status: ComponentStatus","com.serious.service.Component.status"]},{"name":"abstract var annotationClass: Class<out Annotation>","description":"com.serious.injection.Injection.annotationClass","location":"service-core/com.serious.injection/-injection/annotation-class.html","searchKeys":["annotationClass","abstract var annotationClass: Class<out Annotation>","com.serious.injection.Injection.annotationClass"]},{"name":"annotation class ComponentHost(val health: String = \"/health\")","description":"com.serious.service.ComponentHost","location":"service-core/com.serious.service/-component-host/index.html","searchKeys":["ComponentHost","annotation class ComponentHost(val health: String = \"/health\")","com.serious.service.ComponentHost"]},{"name":"annotation class ComponentInterface(val name: String = \"\", val description: String = \"\", val services: Array<KClass<out Service>>)","description":"com.serious.service.ComponentInterface","location":"service-core/com.serious.service/-component-interface/index.html","searchKeys":["ComponentInterface","annotation class ComponentInterface(val name: String = \"\", val description: String = \"\", val services: Array<KClass<out Service>>)","com.serious.service.ComponentInterface"]},{"name":"annotation class Description(val value: String = \"\", val parameters: Array<Parameter> = emptyArray())","description":"com.serious.annotations.Description","location":"service-core/com.serious.annotations/-description/index.html","searchKeys":["Description","annotation class Description(val value: String = \"\", val parameters: Array<Parameter> = emptyArray())","com.serious.annotations.Description"]},{"name":"annotation class InjectService(val preferLocal: Boolean = false, val channel: String = \"\")","description":"com.serious.service.annotations.InjectService","location":"service-core/com.serious.service.annotations/-inject-service/index.html","searchKeys":["InjectService","annotation class InjectService(val preferLocal: Boolean = false, val channel: String = \"\")","com.serious.service.annotations.InjectService"]},{"name":"annotation class Parameter(val name: String = \"\", val description: String)","description":"com.serious.annotations.Parameter","location":"service-core/com.serious.annotations/-parameter/index.html","searchKeys":["Parameter","annotation class Parameter(val name: String = \"\", val description: String)","com.serious.annotations.Parameter"]},{"name":"annotation class RegisterChannel(val value: String)","description":"com.serious.service.RegisterChannel","location":"service-core/com.serious.service/-register-channel/index.html","searchKeys":["RegisterChannel","annotation class RegisterChannel(val value: String)","com.serious.service.RegisterChannel"]},{"name":"annotation class RegisterChannelCustomizer(val channel: KClass<out Channel>)","description":"com.serious.service.channel.RegisterChannelCustomizer","location":"service-core/com.serious.service.channel/-register-channel-customizer/index.html","searchKeys":["RegisterChannelCustomizer","annotation class RegisterChannelCustomizer(val channel: KClass<out Channel>)","com.serious.service.channel.RegisterChannelCustomizer"]},{"name":"annotation class RegisterExceptionHandler","description":"com.serious.exception.RegisterExceptionHandler","location":"service-core/com.serious.exception/-register-exception-handler/index.html","searchKeys":["RegisterExceptionHandler","annotation class RegisterExceptionHandler","com.serious.exception.RegisterExceptionHandler"]},{"name":"annotation class ServiceInterface(val name: String = \"\", val description: String = \"\")","description":"com.serious.service.ServiceInterface","location":"service-core/com.serious.service/-service-interface/index.html","searchKeys":["ServiceInterface","annotation class ServiceInterface(val name: String = \"\", val description: String = \"\")","com.serious.service.ServiceInterface"]},{"name":"class AllowedException(e: Throwable) : RuntimeException","description":"com.serious.exception.AllowedException","location":"service-core/com.serious.exception/-allowed-exception/index.html","searchKeys":["AllowedException","class AllowedException(e: Throwable) : RuntimeException","com.serious.exception.AllowedException"]},{"name":"class ApplicationIntrospectionServiceImpl : ApplicationIntrospectionService","description":"com.serious.service.administration.impl.ApplicationIntrospectionServiceImpl","location":"service-core/com.serious.service.administration.impl/-application-introspection-service-impl/index.html","searchKeys":["ApplicationIntrospectionServiceImpl","class ApplicationIntrospectionServiceImpl : ApplicationIntrospectionService","com.serious.service.administration.impl.ApplicationIntrospectionServiceImpl"]},{"name":"class Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/index.html","searchKeys":["Builder","class Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder"]},{"name":"class ChannelInvocationHandler : InvocationHandler","description":"com.serious.service.ChannelInvocationHandler","location":"service-core/com.serious.service/-channel-invocation-handler/index.html","searchKeys":["ChannelInvocationHandler","class ChannelInvocationHandler : InvocationHandler","com.serious.service.ChannelInvocationHandler"]},{"name":"class ChannelManager : ApplicationContextAware","description":"com.serious.service.ChannelManager","location":"service-core/com.serious.service/-channel-manager/index.html","searchKeys":["ChannelManager","class ChannelManager : ApplicationContextAware","com.serious.service.ChannelManager"]},{"name":"class ChildBeanFactory(parentBeanFactory: ConfigurableApplicationContext) : DefaultListableBeanFactory","description":"com.serious.spring.ChildBeanFactory","location":"service-core/com.serious.spring/-child-bean-factory/index.html","searchKeys":["ChildBeanFactory","class ChildBeanFactory(parentBeanFactory: ConfigurableApplicationContext) : DefaultListableBeanFactory","com.serious.spring.ChildBeanFactory"]},{"name":"class CommunicationException : FatalException","description":"com.serious.exception.CommunicationException","location":"service-core/com.serious.exception/-communication-exception/index.html","searchKeys":["CommunicationException","class CommunicationException : FatalException","com.serious.exception.CommunicationException"]},{"name":"class ComponentDescriptor<T : Component>(componentInterface: Class<T>) : BaseDescriptor<T> ","description":"com.serious.service.ComponentDescriptor","location":"service-core/com.serious.service/-component-descriptor/index.html","searchKeys":["ComponentDescriptor","class ComponentDescriptor<T : Component>(componentInterface: Class<T>) : BaseDescriptor<T> ","com.serious.service.ComponentDescriptor"]},{"name":"class ComponentIntrospectionServiceImpl : ComponentIntrospectionService","description":"com.serious.service.administration.impl.ComponentIntrospectionServiceImpl","location":"service-core/com.serious.service.administration.impl/-component-introspection-service-impl/index.html","searchKeys":["ComponentIntrospectionServiceImpl","class ComponentIntrospectionServiceImpl : ComponentIntrospectionService","com.serious.service.administration.impl.ComponentIntrospectionServiceImpl"]},{"name":"class ComponentLocator : BeanFactoryPostProcessor, EnvironmentAware","description":"com.serious.service.ComponentLocator","location":"service-core/com.serious.service/-component-locator/index.html","searchKeys":["ComponentLocator","class ComponentLocator : BeanFactoryPostProcessor, EnvironmentAware","com.serious.service.ComponentLocator"]},{"name":"class DefaultExceptionHandler : AbstractExceptionHandler","description":"com.serious.exception.DefaultExceptionHandler","location":"service-core/com.serious.exception/-default-exception-handler/index.html","searchKeys":["DefaultExceptionHandler","class DefaultExceptionHandler : AbstractExceptionHandler","com.serious.exception.DefaultExceptionHandler"]},{"name":"class ExceptionManager","description":"com.serious.exception.ExceptionManager","location":"service-core/com.serious.exception/-exception-manager/index.html","searchKeys":["ExceptionManager","class ExceptionManager","com.serious.exception.ExceptionManager"]},{"name":"class FirstMatchURIProvider(var address: ServiceAddress) : AbstractChannel.URIProvider","description":"com.serious.service.channel.AbstractChannel.FirstMatchURIProvider","location":"service-core/com.serious.service.channel/-abstract-channel/-first-match-u-r-i-provider/index.html","searchKeys":["FirstMatchURIProvider","class FirstMatchURIProvider(var address: ServiceAddress) : AbstractChannel.URIProvider","com.serious.service.channel.AbstractChannel.FirstMatchURIProvider"]},{"name":"class InjectionException : RuntimeException","description":"com.serious.injection.InjectionException","location":"service-core/com.serious.injection/-injection-exception/index.html","searchKeys":["InjectionException","class InjectionException : RuntimeException","com.serious.injection.InjectionException"]},{"name":"class Injector(injections: Injection<Annotation, Any>) : BeanPostProcessor","description":"com.serious.injection.Injector","location":"service-core/com.serious.injection/-injector/index.html","searchKeys":["Injector","class Injector(injections: Injection<Annotation, Any>) : BeanPostProcessor","com.serious.injection.Injector"]},{"name":"class InjectorFactory(injections: Injection<Annotation, Any>) : FactoryBean<Any> , BeanPostProcessor","description":"com.serious.injection.InjectorFactory","location":"service-core/com.serious.injection/-injector-factory/index.html","searchKeys":["InjectorFactory","class InjectorFactory(injections: Injection<Annotation, Any>) : FactoryBean<Any> , BeanPostProcessor","com.serious.injection.InjectorFactory"]},{"name":"class InterfaceAnalyzer","description":"com.serious.service.InterfaceAnalyzer","location":"service-core/com.serious.service/-interface-analyzer/index.html","searchKeys":["InterfaceAnalyzer","class InterfaceAnalyzer","com.serious.service.InterfaceAnalyzer"]},{"name":"class KotlinLanguageSupport : LanguageSupport","description":"com.serious.codegenerator.KotlinLanguageSupport","location":"service-core/com.serious.codegenerator/-kotlin-language-support/index.html","searchKeys":["KotlinLanguageSupport","class KotlinLanguageSupport : LanguageSupport","com.serious.codegenerator.KotlinLanguageSupport"]},{"name":"class MethodDispatcher","description":"com.serious.util.MethodDispatcher","location":"service-core/com.serious.util/-method-dispatcher/index.html","searchKeys":["MethodDispatcher","class MethodDispatcher","com.serious.util.MethodDispatcher"]},{"name":"class MissingChannel(channelManager: ChannelManager, val component: String) : AbstractChannel","description":"com.serious.service.channel.MissingChannel","location":"service-core/com.serious.service.channel/-missing-channel/index.html","searchKeys":["MissingChannel","class MissingChannel(channelManager: ChannelManager, val component: String) : AbstractChannel","com.serious.service.channel.MissingChannel"]},{"name":"class NoApplicableMethodError(clazz: Class<*>) : RuntimeException","description":"com.serious.util.MethodDispatcher.NoApplicableMethodError","location":"service-core/com.serious.util/-method-dispatcher/-no-applicable-method-error/index.html","searchKeys":["NoApplicableMethodError","class NoApplicableMethodError(clazz: Class<*>) : RuntimeException","com.serious.util.MethodDispatcher.NoApplicableMethodError"]},{"name":"class PackageMapping(val packageName: String, val folder: String, val importName: String)","description":"com.serious.codegenerator.typescript.PackageMapping","location":"service-core/com.serious.codegenerator.typescript/-package-mapping/index.html","searchKeys":["PackageMapping","class PackageMapping(val packageName: String, val folder: String, val importName: String)","com.serious.codegenerator.typescript.PackageMapping"]},{"name":"class RegisteredMethod","description":"com.serious.util.MethodDispatcher.RegisteredMethod","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/index.html","searchKeys":["RegisteredMethod","class RegisteredMethod","com.serious.util.MethodDispatcher.RegisteredMethod"]},{"name":"class RoundRobinURIProvider(var address: ServiceAddress) : AbstractChannel.URIProvider","description":"com.serious.service.channel.AbstractChannel.RoundRobinURIProvider","location":"service-core/com.serious.service.channel/-abstract-channel/-round-robin-u-r-i-provider/index.html","searchKeys":["RoundRobinURIProvider","class RoundRobinURIProvider(var address: ServiceAddress) : AbstractChannel.URIProvider","com.serious.service.channel.AbstractChannel.RoundRobinURIProvider"]},{"name":"class ServiceDescriptor<T : Service>(componentDescriptor: ComponentDescriptor<Component>, serviceInterface: Class<T>) : BaseDescriptor<T> ","description":"com.serious.service.ServiceDescriptor","location":"service-core/com.serious.service/-service-descriptor/index.html","searchKeys":["ServiceDescriptor","class ServiceDescriptor<T : Service>(componentDescriptor: ComponentDescriptor<Component>, serviceInterface: Class<T>) : BaseDescriptor<T> ","com.serious.service.ServiceDescriptor"]},{"name":"class ServiceException : RuntimeException","description":"com.serious.service.ServiceException","location":"service-core/com.serious.service/-service-exception/index.html","searchKeys":["ServiceException","class ServiceException : RuntimeException","com.serious.service.ServiceException"]},{"name":"class ServiceExecutor","description":"com.serious.service.administration.impl.ServiceExecutor","location":"service-core/com.serious.service.administration.impl/-service-executor/index.html","searchKeys":["ServiceExecutor","class ServiceExecutor","com.serious.service.administration.impl.ServiceExecutor"]},{"name":"class ServiceInjection constructor(injectorFactory: InjectorFactory) : AbstractInjection<Service, InjectService, Keywords?> , ApplicationContextAware","description":"com.serious.service.injections.ServiceInjection","location":"service-core/com.serious.service.injections/-service-injection/index.html","searchKeys":["ServiceInjection","class ServiceInjection constructor(injectorFactory: InjectorFactory) : AbstractInjection<Service, InjectService, Keywords?> , ApplicationContextAware","com.serious.service.injections.ServiceInjection"]},{"name":"class ServiceInstanceRegistry","description":"com.serious.service.ServiceInstanceRegistry","location":"service-core/com.serious.service/-service-instance-registry/index.html","searchKeys":["ServiceInstanceRegistry","class ServiceInstanceRegistry","com.serious.service.ServiceInstanceRegistry"]},{"name":"class ServiceManager : ApplicationContextAware","description":"com.serious.service.ServiceManager","location":"service-core/com.serious.service/-service-manager/index.html","searchKeys":["ServiceManager","class ServiceManager : ApplicationContextAware","com.serious.service.ServiceManager"]},{"name":"class ServiceRegistryException : RuntimeException","description":"com.serious.service.exception.ServiceRegistryException","location":"service-core/com.serious.service.exception/-service-registry-exception/index.html","searchKeys":["ServiceRegistryException","class ServiceRegistryException : RuntimeException","com.serious.service.exception.ServiceRegistryException"]},{"name":"class ServiceRuntimeException : RuntimeException","description":"com.serious.service.exception.ServiceRuntimeException","location":"service-core/com.serious.service.exception/-service-runtime-exception/index.html","searchKeys":["ServiceRuntimeException","class ServiceRuntimeException : RuntimeException","com.serious.service.exception.ServiceRuntimeException"]},{"name":"class SimpleMethodInvocation(targetObject: Any?, method: Method, args: Any) : MethodInvocation","description":"com.serious.service.channel.SimpleMethodInvocation","location":"service-core/com.serious.service.channel/-simple-method-invocation/index.html","searchKeys":["SimpleMethodInvocation","class SimpleMethodInvocation(targetObject: Any?, method: Method, args: Any) : MethodInvocation","com.serious.service.channel.SimpleMethodInvocation"]},{"name":"class SpringChannelFactory(var channelManager: ChannelManager, beanDefinition: BeanDefinition) : ChannelFactory","description":"com.serious.service.SpringChannelFactory","location":"service-core/com.serious.service/-spring-channel-factory/index.html","searchKeys":["SpringChannelFactory","class SpringChannelFactory(var channelManager: ChannelManager, beanDefinition: BeanDefinition) : ChannelFactory","com.serious.service.SpringChannelFactory"]},{"name":"class TopologyUpdate : Serializable","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/index.html","searchKeys":["TopologyUpdate","class TopologyUpdate : Serializable","com.serious.service.ServiceInstanceRegistry.TopologyUpdate"]},{"name":"class TypescriptGenerator(options: TypescriptOptions) : AbstractTypescriptGenerator","description":"com.serious.codegenerator.typescript.TypescriptGenerator","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/index.html","searchKeys":["TypescriptGenerator","class TypescriptGenerator(options: TypescriptOptions) : AbstractTypescriptGenerator","com.serious.codegenerator.typescript.TypescriptGenerator"]},{"name":"class Writer(writer: PrintWriter)","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/index.html","searchKeys":["Writer","class Writer(writer: PrintWriter)","com.serious.codegenerator.AbstractCodeGenerator.Writer"]},{"name":"constructor()","description":"com.serious.codegenerator.KotlinLanguageSupport.KotlinLanguageSupport","location":"service-core/com.serious.codegenerator/-kotlin-language-support/-kotlin-language-support.html","searchKeys":["KotlinLanguageSupport","constructor()","com.serious.codegenerator.KotlinLanguageSupport.KotlinLanguageSupport"]},{"name":"constructor()","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.Builder","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/-builder.html","searchKeys":["Builder","constructor()","com.serious.codegenerator.typescript.TypescriptOptions.Builder.Builder"]},{"name":"constructor()","description":"com.serious.exception.AbstractExceptionHandler.AbstractExceptionHandler","location":"service-core/com.serious.exception/-abstract-exception-handler/-abstract-exception-handler.html","searchKeys":["AbstractExceptionHandler","constructor()","com.serious.exception.AbstractExceptionHandler.AbstractExceptionHandler"]},{"name":"constructor()","description":"com.serious.exception.DefaultExceptionHandler.DefaultExceptionHandler","location":"service-core/com.serious.exception/-default-exception-handler/-default-exception-handler.html","searchKeys":["DefaultExceptionHandler","constructor()","com.serious.exception.DefaultExceptionHandler.DefaultExceptionHandler"]},{"name":"constructor()","description":"com.serious.lang.Keywords.Keywords","location":"service-core/com.serious.lang/-keywords/-keywords.html","searchKeys":["Keywords","constructor()","com.serious.lang.Keywords.Keywords"]},{"name":"constructor()","description":"com.serious.service.AbstractComponent.AbstractComponent","location":"service-core/com.serious.service/-abstract-component/-abstract-component.html","searchKeys":["AbstractComponent","constructor()","com.serious.service.AbstractComponent.AbstractComponent"]},{"name":"constructor()","description":"com.serious.service.ChannelManager.ChannelManager","location":"service-core/com.serious.service/-channel-manager/-channel-manager.html","searchKeys":["ChannelManager","constructor()","com.serious.service.ChannelManager.ChannelManager"]},{"name":"constructor()","description":"com.serious.service.ComponentLocator.ComponentLocator","location":"service-core/com.serious.service/-component-locator/-component-locator.html","searchKeys":["ComponentLocator","constructor()","com.serious.service.ComponentLocator.ComponentLocator"]},{"name":"constructor()","description":"com.serious.service.InterfaceAnalyzer.InterfaceAnalyzer","location":"service-core/com.serious.service/-interface-analyzer/-interface-analyzer.html","searchKeys":["InterfaceAnalyzer","constructor()","com.serious.service.InterfaceAnalyzer.InterfaceAnalyzer"]},{"name":"constructor()","description":"com.serious.service.ServiceConfiguration.ServiceConfiguration","location":"service-core/com.serious.service/-service-configuration/-service-configuration.html","searchKeys":["ServiceConfiguration","constructor()","com.serious.service.ServiceConfiguration.ServiceConfiguration"]},{"name":"constructor()","description":"com.serious.service.ServiceInstanceRegistry.ServiceInstanceRegistry","location":"service-core/com.serious.service/-service-instance-registry/-service-instance-registry.html","searchKeys":["ServiceInstanceRegistry","constructor()","com.serious.service.ServiceInstanceRegistry.ServiceInstanceRegistry"]},{"name":"constructor()","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.TopologyUpdate","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/-topology-update.html","searchKeys":["TopologyUpdate","constructor()","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.TopologyUpdate"]},{"name":"constructor()","description":"com.serious.service.administration.impl.ApplicationIntrospectionServiceImpl.ApplicationIntrospectionServiceImpl","location":"service-core/com.serious.service.administration.impl/-application-introspection-service-impl/-application-introspection-service-impl.html","searchKeys":["ApplicationIntrospectionServiceImpl","constructor()","com.serious.service.administration.impl.ApplicationIntrospectionServiceImpl.ApplicationIntrospectionServiceImpl"]},{"name":"constructor()","description":"com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.ComponentIntrospectionServiceImpl","location":"service-core/com.serious.service.administration.impl/-component-introspection-service-impl/-component-introspection-service-impl.html","searchKeys":["ComponentIntrospectionServiceImpl","constructor()","com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.ComponentIntrospectionServiceImpl"]},{"name":"constructor()","description":"com.serious.service.administration.impl.ServiceExecutor.ServiceExecutor","location":"service-core/com.serious.service.administration.impl/-service-executor/-service-executor.html","searchKeys":["ServiceExecutor","constructor()","com.serious.service.administration.impl.ServiceExecutor.ServiceExecutor"]},{"name":"constructor(address: ServiceAddress)","description":"com.serious.service.channel.AbstractChannel.FirstMatchURIProvider.FirstMatchURIProvider","location":"service-core/com.serious.service.channel/-abstract-channel/-first-match-u-r-i-provider/-first-match-u-r-i-provider.html","searchKeys":["FirstMatchURIProvider","constructor(address: ServiceAddress)","com.serious.service.channel.AbstractChannel.FirstMatchURIProvider.FirstMatchURIProvider"]},{"name":"constructor(address: ServiceAddress)","description":"com.serious.service.channel.AbstractChannel.RoundRobinURIProvider.RoundRobinURIProvider","location":"service-core/com.serious.service.channel/-abstract-channel/-round-robin-u-r-i-provider/-round-robin-u-r-i-provider.html","searchKeys":["RoundRobinURIProvider","constructor(address: ServiceAddress)","com.serious.service.channel.AbstractChannel.RoundRobinURIProvider.RoundRobinURIProvider"]},{"name":"constructor(address: ServiceAddress)","description":"com.serious.service.channel.AbstractChannel.URIProvider.URIProvider","location":"service-core/com.serious.service.channel/-abstract-channel/-u-r-i-provider/-u-r-i-provider.html","searchKeys":["URIProvider","constructor(address: ServiceAddress)","com.serious.service.channel.AbstractChannel.URIProvider.URIProvider"]},{"name":"constructor(analyzer: InterfaceAnalyzer, language: LanguageSupport, header: String, mappings: MutableList<PackageMapping>, domain: String, filePerService: Boolean, filePerModel: Boolean, imports: HashMap<String, String>)","description":"com.serious.codegenerator.typescript.TypescriptOptions.TypescriptOptions","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-typescript-options.html","searchKeys":["TypescriptOptions","constructor(analyzer: InterfaceAnalyzer, language: LanguageSupport, header: String, mappings: MutableList<PackageMapping>, domain: String, filePerService: Boolean, filePerModel: Boolean, imports: HashMap<String, String>)","com.serious.codegenerator.typescript.TypescriptOptions.TypescriptOptions"]},{"name":"constructor(annotationClass: Class<out Annotation>)","description":"com.serious.injection.AbstractInjection.AbstractInjection","location":"service-core/com.serious.injection/-abstract-injection/-abstract-injection.html","searchKeys":["AbstractInjection","constructor(annotationClass: Class<out Annotation>)","com.serious.injection.AbstractInjection.AbstractInjection"]},{"name":"constructor(channel: String, uri: URI)","description":"com.serious.service.ChannelAddress.ChannelAddress","location":"service-core/com.serious.service/-channel-address/-channel-address.html","searchKeys":["ChannelAddress","constructor(channel: String, uri: URI)","com.serious.service.ChannelAddress.ChannelAddress"]},{"name":"constructor(channelManager: ChannelManager, beanDefinition: BeanDefinition)","description":"com.serious.service.SpringChannelFactory.SpringChannelFactory","location":"service-core/com.serious.service/-spring-channel-factory/-spring-channel-factory.html","searchKeys":["SpringChannelFactory","constructor(channelManager: ChannelManager, beanDefinition: BeanDefinition)","com.serious.service.SpringChannelFactory.SpringChannelFactory"]},{"name":"constructor(channelManager: ChannelManager, component: String)","description":"com.serious.service.channel.MissingChannel.MissingChannel","location":"service-core/com.serious.service.channel/-missing-channel/-missing-channel.html","searchKeys":["MissingChannel","constructor(channelManager: ChannelManager, component: String)","com.serious.service.channel.MissingChannel.MissingChannel"]},{"name":"constructor(clazz: Class<*>)","description":"com.serious.util.MethodDispatcher.NoApplicableMethodError.NoApplicableMethodError","location":"service-core/com.serious.util/-method-dispatcher/-no-applicable-method-error/-no-applicable-method-error.html","searchKeys":["NoApplicableMethodError","constructor(clazz: Class<*>)","com.serious.util.MethodDispatcher.NoApplicableMethodError.NoApplicableMethodError"]},{"name":"constructor(component: InterfaceDescriptor, services: Collection<InterfaceDescriptor>, models: Collection<InterfaceDescriptor>)","description":"com.serious.service.ComponentModel.ComponentModel","location":"service-core/com.serious.service/-component-model/-component-model.html","searchKeys":["ComponentModel","constructor(component: InterfaceDescriptor, services: Collection<InterfaceDescriptor>, models: Collection<InterfaceDescriptor>)","com.serious.service.ComponentModel.ComponentModel"]},{"name":"constructor(component: String, channel: String, serviceInstances: List<ServiceInstance>)","description":"com.serious.service.ServiceAddress.ServiceAddress","location":"service-core/com.serious.service/-service-address/-service-address.html","searchKeys":["ServiceAddress","constructor(component: String, channel: String, serviceInstances: List<ServiceInstance>)","com.serious.service.ServiceAddress.ServiceAddress"]},{"name":"constructor(componentDescriptor: ComponentDescriptor<Component>, serviceInterface: Class<T>)","description":"com.serious.service.ServiceDescriptor.ServiceDescriptor","location":"service-core/com.serious.service/-service-descriptor/-service-descriptor.html","searchKeys":["ServiceDescriptor","constructor(componentDescriptor: ComponentDescriptor<Component>, serviceInterface: Class<T>)","com.serious.service.ServiceDescriptor.ServiceDescriptor"]},{"name":"constructor(componentInterface: Class<T>)","description":"com.serious.service.ComponentDescriptor.ComponentDescriptor","location":"service-core/com.serious.service/-component-descriptor/-component-descriptor.html","searchKeys":["ComponentDescriptor","constructor(componentInterface: Class<T>)","com.serious.service.ComponentDescriptor.ComponentDescriptor"]},{"name":"constructor(e: Throwable)","description":"com.serious.exception.AllowedException.AllowedException","location":"service-core/com.serious.exception/-allowed-exception/-allowed-exception.html","searchKeys":["AllowedException","constructor(e: Throwable)","com.serious.exception.AllowedException.AllowedException"]},{"name":"constructor(host: String, port: Int)","description":"com.serious.service.Server.Server","location":"service-core/com.serious.service/-server/-server.html","searchKeys":["Server","constructor(host: String, port: Int)","com.serious.service.Server.Server"]},{"name":"constructor(injectorFactory: InjectorFactory)","description":"com.serious.service.injections.ServiceInjection.ServiceInjection","location":"service-core/com.serious.service.injections/-service-injection/-service-injection.html","searchKeys":["ServiceInjection","constructor(injectorFactory: InjectorFactory)","com.serious.service.injections.ServiceInjection.ServiceInjection"]},{"name":"constructor(instance: Any, methodName: String)","description":"com.serious.util.MethodDispatcher.MethodDispatcher","location":"service-core/com.serious.util/-method-dispatcher/-method-dispatcher.html","searchKeys":["MethodDispatcher","constructor(instance: Any, methodName: String)","com.serious.util.MethodDispatcher.MethodDispatcher"]},{"name":"constructor(message: String)","description":"com.serious.exception.CommunicationException.CommunicationException","location":"service-core/com.serious.exception/-communication-exception/-communication-exception.html","searchKeys":["CommunicationException","constructor(message: String)","com.serious.exception.CommunicationException.CommunicationException"]},{"name":"constructor(message: String)","description":"com.serious.exception.FatalException.FatalException","location":"service-core/com.serious.exception/-fatal-exception/-fatal-exception.html","searchKeys":["FatalException","constructor(message: String)","com.serious.exception.FatalException.FatalException"]},{"name":"constructor(message: String)","description":"com.serious.exception.ServerException.ServerException","location":"service-core/com.serious.exception/-server-exception/-server-exception.html","searchKeys":["ServerException","constructor(message: String)","com.serious.exception.ServerException.ServerException"]},{"name":"constructor(message: String)","description":"com.serious.injection.InjectionException.InjectionException","location":"service-core/com.serious.injection/-injection-exception/-injection-exception.html","searchKeys":["InjectionException","constructor(message: String)","com.serious.injection.InjectionException.InjectionException"]},{"name":"constructor(message: String, cause: Throwable?)","description":"com.serious.injection.InjectionException.InjectionException","location":"service-core/com.serious.injection/-injection-exception/-injection-exception.html","searchKeys":["InjectionException","constructor(message: String, cause: Throwable?)","com.serious.injection.InjectionException.InjectionException"]},{"name":"constructor(message: String, vararg args: Any?)","description":"com.serious.service.exception.ServiceRegistryException.ServiceRegistryException","location":"service-core/com.serious.service.exception/-service-registry-exception/-service-registry-exception.html","searchKeys":["ServiceRegistryException","constructor(message: String, vararg args: Any?)","com.serious.service.exception.ServiceRegistryException.ServiceRegistryException"]},{"name":"constructor(message: String, vararg args: Any?)","description":"com.serious.service.exception.ServiceRuntimeException.ServiceRuntimeException","location":"service-core/com.serious.service.exception/-service-runtime-exception/-service-runtime-exception.html","searchKeys":["ServiceRuntimeException","constructor(message: String, vararg args: Any?)","com.serious.service.exception.ServiceRuntimeException.ServiceRuntimeException"]},{"name":"constructor(message: String?)","description":"com.serious.service.ServiceException.ServiceException","location":"service-core/com.serious.service/-service-exception/-service-exception.html","searchKeys":["ServiceException","constructor(message: String?)","com.serious.service.ServiceException.ServiceException"]},{"name":"constructor(methodName: String)","description":"com.serious.util.MethodDispatcher.MethodDispatcher","location":"service-core/com.serious.util/-method-dispatcher/-method-dispatcher.html","searchKeys":["MethodDispatcher","constructor(methodName: String)","com.serious.util.MethodDispatcher.MethodDispatcher"]},{"name":"constructor(name: String, kind: String, inherits: String?, implements: List<String>, annotations: List<AnnotationDescriptor>, properties: List<PropertyDescriptor>, methods: List<MethodDescriptor>)","description":"com.serious.service.InterfaceDescriptor.InterfaceDescriptor","location":"service-core/com.serious.service/-interface-descriptor/-interface-descriptor.html","searchKeys":["InterfaceDescriptor","constructor(name: String, kind: String, inherits: String?, implements: List<String>, annotations: List<AnnotationDescriptor>, properties: List<PropertyDescriptor>, methods: List<MethodDescriptor>)","com.serious.service.InterfaceDescriptor.InterfaceDescriptor"]},{"name":"constructor(name: String, label: String, description: String, model: ComponentModel, channels: List<ChannelDTO>)","description":"com.serious.service.administration.model.ComponentDTO.ComponentDTO","location":"service-core/com.serious.service.administration.model/-component-d-t-o/-component-d-t-o.html","searchKeys":["ComponentDTO","constructor(name: String, label: String, description: String, model: ComponentModel, channels: List<ChannelDTO>)","com.serious.service.administration.model.ComponentDTO.ComponentDTO"]},{"name":"constructor(name: String, optional: Boolean, parameter: List<TypeDescriptor>)","description":"com.serious.service.TypeDescriptor.TypeDescriptor","location":"service-core/com.serious.service/-type-descriptor/-type-descriptor.html","searchKeys":["TypeDescriptor","constructor(name: String, optional: Boolean, parameter: List<TypeDescriptor>)","com.serious.service.TypeDescriptor.TypeDescriptor"]},{"name":"constructor(name: String, parameters: List<ParameterValueDescriptor>)","description":"com.serious.service.AnnotationDescriptor.AnnotationDescriptor","location":"service-core/com.serious.service/-annotation-descriptor/-annotation-descriptor.html","searchKeys":["AnnotationDescriptor","constructor(name: String, parameters: List<ParameterValueDescriptor>)","com.serious.service.AnnotationDescriptor.AnnotationDescriptor"]},{"name":"constructor(name: String, returnType: TypeDescriptor, parameters: List<ParameterDescriptor>, annotations: List<AnnotationDescriptor>)","description":"com.serious.service.MethodDescriptor.MethodDescriptor","location":"service-core/com.serious.service/-method-descriptor/-method-descriptor.html","searchKeys":["MethodDescriptor","constructor(name: String, returnType: TypeDescriptor, parameters: List<ParameterDescriptor>, annotations: List<AnnotationDescriptor>)","com.serious.service.MethodDescriptor.MethodDescriptor"]},{"name":"constructor(name: String, type: TypeDescriptor, annotations: List<AnnotationDescriptor>)","description":"com.serious.service.ParameterDescriptor.ParameterDescriptor","location":"service-core/com.serious.service/-parameter-descriptor/-parameter-descriptor.html","searchKeys":["ParameterDescriptor","constructor(name: String, type: TypeDescriptor, annotations: List<AnnotationDescriptor>)","com.serious.service.ParameterDescriptor.ParameterDescriptor"]},{"name":"constructor(name: String, type: TypeDescriptor, value: Any?)","description":"com.serious.service.ParameterValueDescriptor.ParameterValueDescriptor","location":"service-core/com.serious.service/-parameter-value-descriptor/-parameter-value-descriptor.html","searchKeys":["ParameterValueDescriptor","constructor(name: String, type: TypeDescriptor, value: Any?)","com.serious.service.ParameterValueDescriptor.ParameterValueDescriptor"]},{"name":"constructor(name: String, type: TypeDescriptor?, annotations: List<AnnotationDescriptor>)","description":"com.serious.service.PropertyDescriptor.PropertyDescriptor","location":"service-core/com.serious.service/-property-descriptor/-property-descriptor.html","searchKeys":["PropertyDescriptor","constructor(name: String, type: TypeDescriptor?, annotations: List<AnnotationDescriptor>)","com.serious.service.PropertyDescriptor.PropertyDescriptor"]},{"name":"constructor(name: String, uri: List<URI>)","description":"com.serious.service.administration.model.ChannelDTO.ChannelDTO","location":"service-core/com.serious.service.administration.model/-channel-d-t-o/-channel-d-t-o.html","searchKeys":["ChannelDTO","constructor(name: String, uri: List<URI>)","com.serious.service.administration.model.ChannelDTO.ChannelDTO"]},{"name":"constructor(name: String, version: String)","description":"com.serious.codegenerator.AbstractCodeGenerator.AbstractCodeGenerator","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-abstract-code-generator.html","searchKeys":["AbstractCodeGenerator","constructor(name: String, version: String)","com.serious.codegenerator.AbstractCodeGenerator.AbstractCodeGenerator"]},{"name":"constructor(options: TypescriptOptions)","description":"com.serious.codegenerator.typescript.TypescriptGenerator.TypescriptGenerator","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/-typescript-generator.html","searchKeys":["TypescriptGenerator","constructor(options: TypescriptOptions)","com.serious.codegenerator.typescript.TypescriptGenerator.TypescriptGenerator"]},{"name":"constructor(options: TypescriptOptions, name: String, version: String)","description":"com.serious.codegenerator.typescript.AbstractTypescriptGenerator.AbstractTypescriptGenerator","location":"service-core/com.serious.codegenerator.typescript/-abstract-typescript-generator/-abstract-typescript-generator.html","searchKeys":["AbstractTypescriptGenerator","constructor(options: TypescriptOptions, name: String, version: String)","com.serious.codegenerator.typescript.AbstractTypescriptGenerator.AbstractTypescriptGenerator"]},{"name":"constructor(original: ExceptionManager)","description":"com.serious.exception.ExceptionManager.ExceptionManager","location":"service-core/com.serious.exception/-exception-manager/-exception-manager.html","searchKeys":["ExceptionManager","constructor(original: ExceptionManager)","com.serious.exception.ExceptionManager.ExceptionManager"]},{"name":"constructor(original: MethodDispatcher)","description":"com.serious.util.MethodDispatcher.MethodDispatcher","location":"service-core/com.serious.util/-method-dispatcher/-method-dispatcher.html","searchKeys":["MethodDispatcher","constructor(original: MethodDispatcher)","com.serious.util.MethodDispatcher.MethodDispatcher"]},{"name":"constructor(originalKeywords: Keywords, vararg keywords: Any?)","description":"com.serious.lang.Keywords.Keywords","location":"service-core/com.serious.lang/-keywords/-keywords.html","searchKeys":["Keywords","constructor(originalKeywords: Keywords, vararg keywords: Any?)","com.serious.lang.Keywords.Keywords"]},{"name":"constructor(packageName: String, folder: String, importName: String)","description":"com.serious.codegenerator.typescript.PackageMapping.PackageMapping","location":"service-core/com.serious.codegenerator.typescript/-package-mapping/-package-mapping.html","searchKeys":["PackageMapping","constructor(packageName: String, folder: String, importName: String)","com.serious.codegenerator.typescript.PackageMapping.PackageMapping"]},{"name":"constructor(parentBeanFactory: ConfigurableApplicationContext)","description":"com.serious.spring.ChildBeanFactory.ChildBeanFactory","location":"service-core/com.serious.spring/-child-bean-factory/-child-bean-factory.html","searchKeys":["ChildBeanFactory","constructor(parentBeanFactory: ConfigurableApplicationContext)","com.serious.spring.ChildBeanFactory.ChildBeanFactory"]},{"name":"constructor(serviceManager: ServiceManager, component: String, channel: Channel)","description":"com.serious.service.ChannelInvocationHandler.ChannelInvocationHandler","location":"service-core/com.serious.service/-channel-invocation-handler/-channel-invocation-handler.html","searchKeys":["ChannelInvocationHandler","constructor(serviceManager: ServiceManager, component: String, channel: Channel)","com.serious.service.ChannelInvocationHandler.ChannelInvocationHandler"]},{"name":"constructor(serviceManager: ServiceManager, component: String, preferredChannel: String?, address: ServiceAddress?)","description":"com.serious.service.ChannelInvocationHandler.ChannelInvocationHandler","location":"service-core/com.serious.service/-channel-invocation-handler/-channel-invocation-handler.html","searchKeys":["ChannelInvocationHandler","constructor(serviceManager: ServiceManager, component: String, preferredChannel: String?, address: ServiceAddress?)","com.serious.service.ChannelInvocationHandler.ChannelInvocationHandler"]},{"name":"constructor(targetObject: Any?, method: Method, vararg args: Any)","description":"com.serious.service.channel.SimpleMethodInvocation.SimpleMethodInvocation","location":"service-core/com.serious.service.channel/-simple-method-invocation/-simple-method-invocation.html","searchKeys":["SimpleMethodInvocation","constructor(targetObject: Any?, method: Method, vararg args: Any)","com.serious.service.channel.SimpleMethodInvocation.SimpleMethodInvocation"]},{"name":"constructor(throwable: Throwable)","description":"com.serious.exception.CommunicationException.CommunicationException","location":"service-core/com.serious.exception/-communication-exception/-communication-exception.html","searchKeys":["CommunicationException","constructor(throwable: Throwable)","com.serious.exception.CommunicationException.CommunicationException"]},{"name":"constructor(throwable: Throwable)","description":"com.serious.exception.FatalException.FatalException","location":"service-core/com.serious.exception/-fatal-exception/-fatal-exception.html","searchKeys":["FatalException","constructor(throwable: Throwable)","com.serious.exception.FatalException.FatalException"]},{"name":"constructor(throwable: Throwable)","description":"com.serious.exception.ServerException.ServerException","location":"service-core/com.serious.exception/-server-exception/-server-exception.html","searchKeys":["ServerException","constructor(throwable: Throwable)","com.serious.exception.ServerException.ServerException"]},{"name":"constructor(vararg handlers: ExceptionManager.Handler)","description":"com.serious.exception.ExceptionManager.ExceptionManager","location":"service-core/com.serious.exception/-exception-manager/-exception-manager.html","searchKeys":["ExceptionManager","constructor(vararg handlers: ExceptionManager.Handler)","com.serious.exception.ExceptionManager.ExceptionManager"]},{"name":"constructor(vararg injections: Injection<Annotation, Any>)","description":"com.serious.injection.Injector.Injector","location":"service-core/com.serious.injection/-injector/-injector.html","searchKeys":["Injector","constructor(vararg injections: Injection<Annotation, Any>)","com.serious.injection.Injector.Injector"]},{"name":"constructor(vararg injections: Injection<Annotation, Any>)","description":"com.serious.injection.InjectorFactory.InjectorFactory","location":"service-core/com.serious.injection/-injector-factory/-injector-factory.html","searchKeys":["InjectorFactory","constructor(vararg injections: Injection<Annotation, Any>)","com.serious.injection.InjectorFactory.InjectorFactory"]},{"name":"constructor(vararg keywords: Any?)","description":"com.serious.lang.Keywords.Keywords","location":"service-core/com.serious.lang/-keywords/-keywords.html","searchKeys":["Keywords","constructor(vararg keywords: Any?)","com.serious.lang.Keywords.Keywords"]},{"name":"constructor(writer: PrintWriter)","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.Writer","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/-writer.html","searchKeys":["Writer","constructor(writer: PrintWriter)","com.serious.codegenerator.AbstractCodeGenerator.Writer.Writer"]},{"name":"data class AnnotationDescriptor(val name: String, val parameters: List<ParameterValueDescriptor>) : Serializable","description":"com.serious.service.AnnotationDescriptor","location":"service-core/com.serious.service/-annotation-descriptor/index.html","searchKeys":["AnnotationDescriptor","data class AnnotationDescriptor(val name: String, val parameters: List<ParameterValueDescriptor>) : Serializable","com.serious.service.AnnotationDescriptor"]},{"name":"data class ChannelAddress(val channel: String, val uri: URI) : Serializable","description":"com.serious.service.ChannelAddress","location":"service-core/com.serious.service/-channel-address/index.html","searchKeys":["ChannelAddress","data class ChannelAddress(val channel: String, val uri: URI) : Serializable","com.serious.service.ChannelAddress"]},{"name":"data class ChannelDTO(var name: String, var uri: List<URI>) : Serializable","description":"com.serious.service.administration.model.ChannelDTO","location":"service-core/com.serious.service.administration.model/-channel-d-t-o/index.html","searchKeys":["ChannelDTO","data class ChannelDTO(var name: String, var uri: List<URI>) : Serializable","com.serious.service.administration.model.ChannelDTO"]},{"name":"data class ComponentDTO(val name: String, val label: String, val description: String, val model: ComponentModel, val channels: List<ChannelDTO>) : Serializable","description":"com.serious.service.administration.model.ComponentDTO","location":"service-core/com.serious.service.administration.model/-component-d-t-o/index.html","searchKeys":["ComponentDTO","data class ComponentDTO(val name: String, val label: String, val description: String, val model: ComponentModel, val channels: List<ChannelDTO>) : Serializable","com.serious.service.administration.model.ComponentDTO"]},{"name":"data class ComponentModel(val component: InterfaceDescriptor, val services: Collection<InterfaceDescriptor>, val models: Collection<InterfaceDescriptor>) : Serializable","description":"com.serious.service.ComponentModel","location":"service-core/com.serious.service/-component-model/index.html","searchKeys":["ComponentModel","data class ComponentModel(val component: InterfaceDescriptor, val services: Collection<InterfaceDescriptor>, val models: Collection<InterfaceDescriptor>) : Serializable","com.serious.service.ComponentModel"]},{"name":"data class InterfaceDescriptor(val name: String, val kind: String, val inherits: String?, val implements: List<String>, val annotations: List<AnnotationDescriptor>, val properties: List<PropertyDescriptor>, val methods: List<MethodDescriptor>) : Serializable","description":"com.serious.service.InterfaceDescriptor","location":"service-core/com.serious.service/-interface-descriptor/index.html","searchKeys":["InterfaceDescriptor","data class InterfaceDescriptor(val name: String, val kind: String, val inherits: String?, val implements: List<String>, val annotations: List<AnnotationDescriptor>, val properties: List<PropertyDescriptor>, val methods: List<MethodDescriptor>) : Serializable","com.serious.service.InterfaceDescriptor"]},{"name":"data class MethodDescriptor(val name: String, val returnType: TypeDescriptor, val parameters: List<ParameterDescriptor>, val annotations: List<AnnotationDescriptor>) : Serializable","description":"com.serious.service.MethodDescriptor","location":"service-core/com.serious.service/-method-descriptor/index.html","searchKeys":["MethodDescriptor","data class MethodDescriptor(val name: String, val returnType: TypeDescriptor, val parameters: List<ParameterDescriptor>, val annotations: List<AnnotationDescriptor>) : Serializable","com.serious.service.MethodDescriptor"]},{"name":"data class ParameterDescriptor(val name: String, val type: TypeDescriptor, val annotations: List<AnnotationDescriptor>) : Serializable","description":"com.serious.service.ParameterDescriptor","location":"service-core/com.serious.service/-parameter-descriptor/index.html","searchKeys":["ParameterDescriptor","data class ParameterDescriptor(val name: String, val type: TypeDescriptor, val annotations: List<AnnotationDescriptor>) : Serializable","com.serious.service.ParameterDescriptor"]},{"name":"data class ParameterValueDescriptor(val name: String, val type: TypeDescriptor, val value: Any?) : Serializable","description":"com.serious.service.ParameterValueDescriptor","location":"service-core/com.serious.service/-parameter-value-descriptor/index.html","searchKeys":["ParameterValueDescriptor","data class ParameterValueDescriptor(val name: String, val type: TypeDescriptor, val value: Any?) : Serializable","com.serious.service.ParameterValueDescriptor"]},{"name":"data class PropertyDescriptor(val name: String, val type: TypeDescriptor?, val annotations: List<AnnotationDescriptor>) : Serializable","description":"com.serious.service.PropertyDescriptor","location":"service-core/com.serious.service/-property-descriptor/index.html","searchKeys":["PropertyDescriptor","data class PropertyDescriptor(val name: String, val type: TypeDescriptor?, val annotations: List<AnnotationDescriptor>) : Serializable","com.serious.service.PropertyDescriptor"]},{"name":"data class Server(val host: String, val port: Int)","description":"com.serious.service.Server","location":"service-core/com.serious.service/-server/index.html","searchKeys":["Server","data class Server(val host: String, val port: Int)","com.serious.service.Server"]},{"name":"data class ServiceAddress(var component: String, var channel: String, var serviceInstances: List<ServiceInstance>)","description":"com.serious.service.ServiceAddress","location":"service-core/com.serious.service/-service-address/index.html","searchKeys":["ServiceAddress","data class ServiceAddress(var component: String, var channel: String, var serviceInstances: List<ServiceInstance>)","com.serious.service.ServiceAddress"]},{"name":"data class TypeDescriptor(val name: String, val optional: Boolean, val parameter: List<TypeDescriptor>) : Serializable","description":"com.serious.service.TypeDescriptor","location":"service-core/com.serious.service/-type-descriptor/index.html","searchKeys":["TypeDescriptor","data class TypeDescriptor(val name: String, val optional: Boolean, val parameter: List<TypeDescriptor>) : Serializable","com.serious.service.TypeDescriptor"]},{"name":"data class TypescriptOptions(val analyzer: InterfaceAnalyzer, val language: LanguageSupport, val header: String, val mappings: MutableList<PackageMapping>, val domain: String, val filePerService: Boolean, val filePerModel: Boolean, val imports: HashMap<String, String>)","description":"com.serious.codegenerator.typescript.TypescriptOptions","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/index.html","searchKeys":["TypescriptOptions","data class TypescriptOptions(val analyzer: InterfaceAnalyzer, val language: LanguageSupport, val header: String, val mappings: MutableList<PackageMapping>, val domain: String, val filePerService: Boolean, val filePerModel: Boolean, val imports: HashMap<String, String>)","com.serious.codegenerator.typescript.TypescriptOptions"]},{"name":"enum ComponentHealth : Enum<ComponentHealth> ","description":"com.serious.service.ComponentHealth","location":"service-core/com.serious.service/-component-health/index.html","searchKeys":["ComponentHealth","enum ComponentHealth : Enum<ComponentHealth> ","com.serious.service.ComponentHealth"]},{"name":"enum ComponentStatus : Enum<ComponentStatus> ","description":"com.serious.service.ComponentStatus","location":"service-core/com.serious.service/-component-status/index.html","searchKeys":["ComponentStatus","enum ComponentStatus : Enum<ComponentStatus> ","com.serious.service.ComponentStatus"]},{"name":"fun <T : ChannelCustomizer<out Channel>> getChannelCustomizers(channel: Channel): List<T>","description":"com.serious.service.ChannelManager.getChannelCustomizers","location":"service-core/com.serious.service/-channel-manager/get-channel-customizers.html","searchKeys":["getChannelCustomizers","fun <T : ChannelCustomizer<out Channel>> getChannelCustomizers(channel: Channel): List<T>","com.serious.service.ChannelManager.getChannelCustomizers"]},{"name":"fun <T : Service> acquireAdministrativeService(component: String, clazz: Class<T>): T","description":"com.serious.service.ServiceManager.acquireAdministrativeService","location":"service-core/com.serious.service/-service-manager/acquire-administrative-service.html","searchKeys":["acquireAdministrativeService","fun <T : Service> acquireAdministrativeService(component: String, clazz: Class<T>): T","com.serious.service.ServiceManager.acquireAdministrativeService"]},{"name":"fun <T : Service> acquireLocalAdministrativeService(server: Server, clazz: Class<T>): T","description":"com.serious.service.ServiceManager.acquireLocalAdministrativeService","location":"service-core/com.serious.service/-service-manager/acquire-local-administrative-service.html","searchKeys":["acquireLocalAdministrativeService","fun <T : Service> acquireLocalAdministrativeService(server: Server, clazz: Class<T>): T","com.serious.service.ServiceManager.acquireLocalAdministrativeService"]},{"name":"fun <T : Service> acquireLocalService(serviceClass: Class<T>): T","description":"com.serious.service.ServiceManager.acquireLocalService","location":"service-core/com.serious.service/-service-manager/acquire-local-service.html","searchKeys":["acquireLocalService","fun <T : Service> acquireLocalService(serviceClass: Class<T>): T","com.serious.service.ServiceManager.acquireLocalService"]},{"name":"fun <T : Service> acquireService(serviceClass: Class<T>, preferredChannel: String? = null): T","description":"com.serious.service.ServiceManager.acquireService","location":"service-core/com.serious.service/-service-manager/acquire-service.html","searchKeys":["acquireService","fun <T : Service> acquireService(serviceClass: Class<T>, preferredChannel: String? = null): T","com.serious.service.ServiceManager.acquireService"]},{"name":"fun <T : Service> forService(serviceClass: Class<T>): BaseDescriptor<T>","description":"com.serious.service.BaseDescriptor.Companion.forService","location":"service-core/com.serious.service/-base-descriptor/-companion/for-service.html","searchKeys":["forService","fun <T : Service> forService(serviceClass: Class<T>): BaseDescriptor<T>","com.serious.service.BaseDescriptor.Companion.forService"]},{"name":"fun <T> add2(type: Class<T>, a1: Array<T>, vararg a2: T): Array<T>","description":"com.serious.collections.Arrays.add2","location":"service-core/com.serious.collections/-arrays/add2.html","searchKeys":["add2","fun <T> add2(type: Class<T>, a1: Array<T>, vararg a2: T): Array<T>","com.serious.collections.Arrays.add2"]},{"name":"fun <T> add2(type: Class<T>, array: Array<T>, index: Int, value: T): Array<T>","description":"com.serious.collections.Arrays.add2","location":"service-core/com.serious.collections/-arrays/add2.html","searchKeys":["add2","fun <T> add2(type: Class<T>, array: Array<T>, index: Int, value: T): Array<T>","com.serious.collections.Arrays.add2"]},{"name":"fun <T> contains(array: Array<T>, element: T): Boolean","description":"com.serious.collections.Arrays.contains","location":"service-core/com.serious.collections/-arrays/contains.html","searchKeys":["contains","fun <T> contains(array: Array<T>, element: T): Boolean","com.serious.collections.Arrays.contains"]},{"name":"fun <T> fromJSON(json: String, clazz: Class<T>): T","description":"com.serious.jackson.ThrowableMapper.fromJSON","location":"service-core/com.serious.jackson/-throwable-mapper/from-j-s-o-n.html","searchKeys":["fromJSON","fun <T> fromJSON(json: String, clazz: Class<T>): T","com.serious.jackson.ThrowableMapper.fromJSON"]},{"name":"fun <T> getValue(keyword: String, clazz: Class<T>): T","description":"com.serious.lang.Keywords.getValue","location":"service-core/com.serious.lang/-keywords/get-value.html","searchKeys":["getValue","fun <T> getValue(keyword: String, clazz: Class<T>): T","com.serious.lang.Keywords.getValue"]},{"name":"fun <T> getValue(keyword: String, clazz: Class<T>, defaultValue: T): T","description":"com.serious.lang.Keywords.getValue","location":"service-core/com.serious.lang/-keywords/get-value.html","searchKeys":["getValue","fun <T> getValue(keyword: String, clazz: Class<T>, defaultValue: T): T","com.serious.lang.Keywords.getValue"]},{"name":"fun <T> getValue(keyword: String, defaultValue: T): T","description":"com.serious.lang.Keywords.getValue","location":"service-core/com.serious.lang/-keywords/get-value.html","searchKeys":["getValue","fun <T> getValue(keyword: String, defaultValue: T): T","com.serious.lang.Keywords.getValue"]},{"name":"fun add(keywords: Keywords): Keywords","description":"com.serious.lang.Keywords.add","location":"service-core/com.serious.lang/-keywords/add.html","searchKeys":["add","fun add(keywords: Keywords): Keywords","com.serious.lang.Keywords.add"]},{"name":"fun addImports(source: String, vararg imports: String): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.addImports","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/add-imports.html","searchKeys":["addImports","fun addImports(source: String, vararg imports: String): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder.addImports"]},{"name":"fun addListener(listener: TopologyListener)","description":"com.serious.service.ServiceInstanceRegistry.addListener","location":"service-core/com.serious.service/-service-instance-registry/add-listener.html","searchKeys":["addListener","fun addListener(listener: TopologyListener)","com.serious.service.ServiceInstanceRegistry.addListener"]},{"name":"fun addMethods(instance: Any, methodName: String)","description":"com.serious.util.MethodDispatcher.addMethods","location":"service-core/com.serious.util/-method-dispatcher/add-methods.html","searchKeys":["addMethods","fun addMethods(instance: Any, methodName: String)","com.serious.util.MethodDispatcher.addMethods"]},{"name":"fun addService(clazz: KClass<*>): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.addService","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/add-service.html","searchKeys":["addService","fun addService(clazz: KClass<*>): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder.addService"]},{"name":"fun addValue(keyword: String?, value: Any?)","description":"com.serious.lang.Keywords.addValue","location":"service-core/com.serious.lang/-keywords/add-value.html","searchKeys":["addValue","fun addValue(keyword: String?, value: Any?)","com.serious.lang.Keywords.addValue"]},{"name":"fun addedService(service: String, instance: ServiceInstance?)","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.addedService","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/added-service.html","searchKeys":["addedService","fun addedService(service: String, instance: ServiceInstance?)","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.addedService"]},{"name":"fun addedServices(service: String, instances: List<ServiceInstance>)","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.addedServices","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/added-services.html","searchKeys":["addedServices","fun addedServices(service: String, instances: List<ServiceInstance>)","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.addedServices"]},{"name":"fun analyzeComponent(clazz: KClass<*>): InterfaceDescriptor","description":"com.serious.service.InterfaceAnalyzer.analyzeComponent","location":"service-core/com.serious.service/-interface-analyzer/analyze-component.html","searchKeys":["analyzeComponent","fun analyzeComponent(clazz: KClass<*>): InterfaceDescriptor","com.serious.service.InterfaceAnalyzer.analyzeComponent"]},{"name":"fun analyzeMethods(clazz: KClass<*>): List<MethodDescriptor>","description":"com.serious.service.InterfaceAnalyzer.analyzeMethods","location":"service-core/com.serious.service/-interface-analyzer/analyze-methods.html","searchKeys":["analyzeMethods","fun analyzeMethods(clazz: KClass<*>): List<MethodDescriptor>","com.serious.service.InterfaceAnalyzer.analyzeMethods"]},{"name":"fun analyzeModel(clazz: KClass<*>): InterfaceDescriptor","description":"com.serious.service.InterfaceAnalyzer.analyzeModel","location":"service-core/com.serious.service/-interface-analyzer/analyze-model.html","searchKeys":["analyzeModel","fun analyzeModel(clazz: KClass<*>): InterfaceDescriptor","com.serious.service.InterfaceAnalyzer.analyzeModel"]},{"name":"fun analyzeProperties(clazz: KClass<*>): List<PropertyDescriptor>","description":"com.serious.service.InterfaceAnalyzer.analyzeProperties","location":"service-core/com.serious.service/-interface-analyzer/analyze-properties.html","searchKeys":["analyzeProperties","fun analyzeProperties(clazz: KClass<*>): List<PropertyDescriptor>","com.serious.service.InterfaceAnalyzer.analyzeProperties"]},{"name":"fun analyzeService(clazz: KClass<*>): InterfaceDescriptor","description":"com.serious.service.InterfaceAnalyzer.analyzeService","location":"service-core/com.serious.service/-interface-analyzer/analyze-service.html","searchKeys":["analyzeService","fun analyzeService(clazz: KClass<*>): InterfaceDescriptor","com.serious.service.InterfaceAnalyzer.analyzeService"]},{"name":"fun annotation(annotation: Annotation): AnnotationDescriptor","description":"com.serious.service.InterfaceAnalyzer.annotation","location":"service-core/com.serious.service/-interface-analyzer/annotation.html","searchKeys":["annotation","fun annotation(annotation: Annotation): AnnotationDescriptor","com.serious.service.InterfaceAnalyzer.annotation"]},{"name":"fun annotations(parameter: KParameter): List<AnnotationDescriptor>","description":"com.serious.service.InterfaceAnalyzer.annotations","location":"service-core/com.serious.service/-interface-analyzer/annotations.html","searchKeys":["annotations","fun annotations(parameter: KParameter): List<AnnotationDescriptor>","com.serious.service.InterfaceAnalyzer.annotations"]},{"name":"fun build(): TypescriptOptions","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.build","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/build.html","searchKeys":["build","fun build(): TypescriptOptions","com.serious.codegenerator.typescript.TypescriptOptions.Builder.build"]},{"name":"fun camelToSnake(str: String): String","description":"com.serious.codegenerator.typescript.AbstractTypescriptGenerator.camelToSnake","location":"service-core/com.serious.codegenerator.typescript/-abstract-typescript-generator/camel-to-snake.html","searchKeys":["camelToSnake","fun camelToSnake(str: String): String","com.serious.codegenerator.typescript.AbstractTypescriptGenerator.camelToSnake"]},{"name":"fun changeAnnotationValue(annotation: Annotation?, key: String, newValue: Any): Any","description":"com.serious.lang.Annotations.changeAnnotationValue","location":"service-core/com.serious.lang/-annotations/change-annotation-value.html","searchKeys":["changeAnnotationValue","fun changeAnnotationValue(annotation: Annotation?, key: String, newValue: Any): Any","com.serious.lang.Annotations.changeAnnotationValue"]},{"name":"fun changed(address: ServiceAddress): Boolean","description":"com.serious.service.ServiceAddress.changed","location":"service-core/com.serious.service/-service-address/changed.html","searchKeys":["changed","fun changed(address: ServiceAddress): Boolean","com.serious.service.ServiceAddress.changed"]},{"name":"fun clearExternal()","description":"com.serious.exception.ExceptionManager.Companion.clearExternal","location":"service-core/com.serious.exception/-exception-manager/-companion/clear-external.html","searchKeys":["clearExternal","fun clearExternal()","com.serious.exception.ExceptionManager.Companion.clearExternal"]},{"name":"fun close(): AbstractCodeGenerator.Writer","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.close","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/close.html","searchKeys":["close","fun close(): AbstractCodeGenerator.Writer","com.serious.codegenerator.AbstractCodeGenerator.Writer.close"]},{"name":"fun createImplementations(applicationContext: ApplicationContext)","description":"com.serious.service.BaseDescriptor.Companion.createImplementations","location":"service-core/com.serious.service/-base-descriptor/-companion/create-implementations.html","searchKeys":["createImplementations","fun createImplementations(applicationContext: ApplicationContext)","com.serious.service.BaseDescriptor.Companion.createImplementations"]},{"name":"fun deletedService(service: String, instance: ServiceInstance?)","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.deletedService","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/deleted-service.html","searchKeys":["deletedService","fun deletedService(service: String, instance: ServiceInstance?)","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.deletedService"]},{"name":"fun deletedServices(service: String, instances: List<ServiceInstance>)","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.deletedServices","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/deleted-services.html","searchKeys":["deletedServices","fun deletedServices(service: String, instances: List<ServiceInstance>)","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.deletedServices"]},{"name":"fun dispatch(vararg args: Any): Any","description":"com.serious.util.MethodDispatcher.dispatch","location":"service-core/com.serious.util/-method-dispatcher/dispatch.html","searchKeys":["dispatch","fun dispatch(vararg args: Any): Any","com.serious.util.MethodDispatcher.dispatch"]},{"name":"fun ensureUniqueMethods(unique: Boolean)","description":"com.serious.util.MethodDispatcher.ensureUniqueMethods","location":"service-core/com.serious.util/-method-dispatcher/ensure-unique-methods.html","searchKeys":["ensureUniqueMethods","fun ensureUniqueMethods(unique: Boolean)","com.serious.util.MethodDispatcher.ensureUniqueMethods"]},{"name":"fun execute(component: String, request: String): String","description":"com.serious.service.administration.impl.ServiceExecutor.execute","location":"service-core/com.serious.service.administration.impl/-service-executor/execute.html","searchKeys":["execute","fun execute(component: String, request: String): String","com.serious.service.administration.impl.ServiceExecutor.execute"]},{"name":"fun finalize()","description":"com.serious.service.InterfaceAnalyzer.finalize","location":"service-core/com.serious.service/-interface-analyzer/finalize.html","searchKeys":["finalize","fun finalize()","com.serious.service.InterfaceAnalyzer.finalize"]},{"name":"fun findParameter4Path(methodDescriptor: MethodDescriptor, pathVariable: String): ParameterDescriptor?","description":"com.serious.codegenerator.typescript.TypescriptGenerator.findParameter4Path","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/find-parameter4-path.html","searchKeys":["findParameter4Path","fun findParameter4Path(methodDescriptor: MethodDescriptor, pathVariable: String): ParameterDescriptor?","com.serious.codegenerator.typescript.TypescriptGenerator.findParameter4Path"]},{"name":"fun findService(name: String): ServiceDescriptor<Service>","description":"com.serious.service.ComponentDescriptor.findService","location":"service-core/com.serious.service/-component-descriptor/find-service.html","searchKeys":["findService","fun findService(name: String): ServiceDescriptor<Service>","com.serious.service.ComponentDescriptor.findService"]},{"name":"fun flush(): AbstractCodeGenerator.Writer","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.flush","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/flush.html","searchKeys":["flush","fun flush(): AbstractCodeGenerator.Writer","com.serious.codegenerator.AbstractCodeGenerator.Writer.flush"]},{"name":"fun foo()","description":"com.serious.util.MethodDispatcher.foo","location":"service-core/com.serious.util/-method-dispatcher/foo.html","searchKeys":["foo","fun foo()","com.serious.util.MethodDispatcher.foo"]},{"name":"fun forChannel(serviceManager: ServiceManager, component: String, channel: Channel): ChannelInvocationHandler","description":"com.serious.service.ChannelInvocationHandler.Companion.forChannel","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/for-channel.html","searchKeys":["forChannel","fun forChannel(serviceManager: ServiceManager, component: String, channel: Channel): ChannelInvocationHandler","com.serious.service.ChannelInvocationHandler.Companion.forChannel"]},{"name":"fun forComponent(serviceManager: ServiceManager, component: String, preferredChannel: String?, address: ServiceAddress?): ChannelInvocationHandler","description":"com.serious.service.ChannelInvocationHandler.Companion.forComponent","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/for-component.html","searchKeys":["forComponent","fun forComponent(serviceManager: ServiceManager, component: String, preferredChannel: String?, address: ServiceAddress?): ChannelInvocationHandler","com.serious.service.ChannelInvocationHandler.Companion.forComponent"]},{"name":"fun forName(name: String): ComponentDescriptor<*>","description":"com.serious.service.ComponentDescriptor.Companion.forName","location":"service-core/com.serious.service/-component-descriptor/-companion/for-name.html","searchKeys":["forName","fun forName(name: String): ComponentDescriptor<*>","com.serious.service.ComponentDescriptor.Companion.forName"]},{"name":"fun fromJSON(json: String): Throwable","description":"com.serious.jackson.ThrowableMapper.fromJSON","location":"service-core/com.serious.jackson/-throwable-mapper/from-j-s-o-n.html","searchKeys":["fromJSON","fun fromJSON(json: String): Throwable","com.serious.jackson.ThrowableMapper.fromJSON"]},{"name":"fun generate()","description":"com.serious.codegenerator.typescript.TypescriptGenerator.generate","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/generate.html","searchKeys":["generate","fun generate()","com.serious.codegenerator.typescript.TypescriptGenerator.generate"]},{"name":"fun generateClass(clazz: InterfaceDescriptor)","description":"com.serious.codegenerator.typescript.TypescriptGenerator.generateClass","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/generate-class.html","searchKeys":["generateClass","fun generateClass(clazz: InterfaceDescriptor)","com.serious.codegenerator.typescript.TypescriptGenerator.generateClass"]},{"name":"fun generateIndex()","description":"com.serious.codegenerator.typescript.AbstractTypescriptGenerator.generateIndex","location":"service-core/com.serious.codegenerator.typescript/-abstract-typescript-generator/generate-index.html","searchKeys":["generateIndex","fun generateIndex()","com.serious.codegenerator.typescript.AbstractTypescriptGenerator.generateIndex"]},{"name":"fun generateService(clazz: InterfaceDescriptor)","description":"com.serious.codegenerator.typescript.TypescriptGenerator.generateService","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/generate-service.html","searchKeys":["generateService","fun generateService(clazz: InterfaceDescriptor)","com.serious.codegenerator.typescript.TypescriptGenerator.generateService"]},{"name":"fun getAddedInstances(): Map<String, List<ServiceInstance>>","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getAddedInstances","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/get-added-instances.html","searchKeys":["getAddedInstances","fun getAddedInstances(): Map<String, List<ServiceInstance>>","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getAddedInstances"]},{"name":"fun getAddedInstances(service: String): MutableList<ServiceInstance>","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getAddedInstances","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/get-added-instances.html","searchKeys":["getAddedInstances","fun getAddedInstances(service: String): MutableList<ServiceInstance>","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getAddedInstances"]},{"name":"fun getAddedServices(): List<String>","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getAddedServices","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/get-added-services.html","searchKeys":["getAddedServices","fun getAddedServices(): List<String>","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getAddedServices"]},{"name":"fun getApplicableMethod(clazz: Class<*>): Method","description":"com.serious.util.MethodDispatcher.getApplicableMethod","location":"service-core/com.serious.util/-method-dispatcher/get-applicable-method.html","searchKeys":["getApplicableMethod","fun getApplicableMethod(clazz: Class<*>): Method","com.serious.util.MethodDispatcher.getApplicableMethod"]},{"name":"fun getApplicableMethods(clazz: Class<*>): MethodDispatcher.RegisteredMethod","description":"com.serious.util.MethodDispatcher.getApplicableMethods","location":"service-core/com.serious.util/-method-dispatcher/get-applicable-methods.html","searchKeys":["getApplicableMethods","fun getApplicableMethods(clazz: Class<*>): MethodDispatcher.RegisteredMethod","com.serious.util.MethodDispatcher.getApplicableMethods"]},{"name":"fun getChannel(component: String, address: ServiceAddress): Channel","description":"com.serious.service.ServiceManager.getChannel","location":"service-core/com.serious.service/-service-manager/get-channel.html","searchKeys":["getChannel","fun getChannel(component: String, address: ServiceAddress): Channel","com.serious.service.ServiceManager.getChannel"]},{"name":"fun getDeletedInstances(): Map<String, List<ServiceInstance>>","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getDeletedInstances","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/get-deleted-instances.html","searchKeys":["getDeletedInstances","fun getDeletedInstances(): Map<String, List<ServiceInstance>>","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getDeletedInstances"]},{"name":"fun getDeletedInstances(service: String): MutableList<ServiceInstance>","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getDeletedInstances","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/get-deleted-instances.html","searchKeys":["getDeletedInstances","fun getDeletedInstances(service: String): MutableList<ServiceInstance>","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getDeletedInstances"]},{"name":"fun getDeletedServices(): List<String>","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getDeletedServices","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/get-deleted-services.html","searchKeys":["getDeletedServices","fun getDeletedServices(): List<String>","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.getDeletedServices"]},{"name":"fun getGeneralizations(classObject: Class<*>): Set<Class<*>>","description":"com.serious.lang.Classes.getGeneralizations","location":"service-core/com.serious.lang/-classes/get-generalizations.html","searchKeys":["getGeneralizations","fun getGeneralizations(classObject: Class<*>): Set<Class<*>>","com.serious.lang.Classes.getGeneralizations"]},{"name":"fun getInstances(component: String): List<ServiceInstance>","description":"com.serious.service.ServiceInstanceRegistry.getInstances","location":"service-core/com.serious.service/-service-instance-registry/get-instances.html","searchKeys":["getInstances","fun getInstances(component: String): List<ServiceInstance>","com.serious.service.ServiceInstanceRegistry.getInstances"]},{"name":"fun getMapping(methodDescriptor: MethodDescriptor): AnnotationDescriptor?","description":"com.serious.codegenerator.typescript.TypescriptGenerator.getMapping","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/get-mapping.html","searchKeys":["getMapping","fun getMapping(methodDescriptor: MethodDescriptor): AnnotationDescriptor?","com.serious.codegenerator.typescript.TypescriptGenerator.getMapping"]},{"name":"fun getModel(): ComponentModel","description":"com.serious.service.ComponentDescriptor.getModel","location":"service-core/com.serious.service/-component-descriptor/get-model.html","searchKeys":["getModel","fun getModel(): ComponentModel","com.serious.service.ComponentDescriptor.getModel"]},{"name":"fun getServiceAddress(component: String, preferredChannel: String? = null): ServiceAddress?","description":"com.serious.service.ServiceInstanceRegistry.getServiceAddress","location":"service-core/com.serious.service/-service-instance-registry/get-service-address.html","searchKeys":["getServiceAddress","fun getServiceAddress(component: String, preferredChannel: String? = null): ServiceAddress?","com.serious.service.ServiceInstanceRegistry.getServiceAddress"]},{"name":"fun getServices(): List<String>","description":"com.serious.service.ServiceInstanceRegistry.getServices","location":"service-core/com.serious.service/-service-instance-registry/get-services.html","searchKeys":["getServices","fun getServices(): List<String>","com.serious.service.ServiceInstanceRegistry.getServices"]},{"name":"fun getValue(keyword: String): Any?","description":"com.serious.lang.Keywords.getValue","location":"service-core/com.serious.lang/-keywords/get-value.html","searchKeys":["getValue","fun getValue(keyword: String): Any?","com.serious.lang.Keywords.getValue"]},{"name":"fun handleException(exception: Throwable): Throwable","description":"com.serious.exception.ExceptionManager.handleException","location":"service-core/com.serious.exception/-exception-manager/handle-exception.html","searchKeys":["handleException","fun handleException(exception: Throwable): Throwable","com.serious.exception.ExceptionManager.handleException"]},{"name":"fun handleException(method: Method, e: Throwable): Throwable","description":"com.serious.service.ServiceManager.handleException","location":"service-core/com.serious.service/-service-manager/handle-exception.html","searchKeys":["handleException","fun handleException(method: Method, e: Throwable): Throwable","com.serious.service.ServiceManager.handleException"]},{"name":"fun hasApplicableMethod(clazz: Class<*>): Boolean","description":"com.serious.util.MethodDispatcher.hasApplicableMethod","location":"service-core/com.serious.util/-method-dispatcher/has-applicable-method.html","searchKeys":["hasApplicableMethod","fun hasApplicableMethod(clazz: Class<*>): Boolean","com.serious.util.MethodDispatcher.hasApplicableMethod"]},{"name":"fun hasImplementation(): Boolean","description":"com.serious.service.BaseDescriptor.hasImplementation","location":"service-core/com.serious.service/-base-descriptor/has-implementation.html","searchKeys":["hasImplementation","fun hasImplementation(): Boolean","com.serious.service.BaseDescriptor.hasImplementation"]},{"name":"fun hasValue(keyword: String): Boolean","description":"com.serious.lang.Keywords.hasValue","location":"service-core/com.serious.lang/-keywords/has-value.html","searchKeys":["hasValue","fun hasValue(keyword: String): Boolean","com.serious.lang.Keywords.hasValue"]},{"name":"fun implements(clazz: KClass<*>): List<KClass<*>>","description":"com.serious.service.InterfaceAnalyzer.implements","location":"service-core/com.serious.service/-interface-analyzer/implements.html","searchKeys":["implements","fun implements(clazz: KClass<*>): List<KClass<*>>","com.serious.service.InterfaceAnalyzer.implements"]},{"name":"fun indent(): AbstractCodeGenerator.Writer","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.indent","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/indent.html","searchKeys":["indent","fun indent(): AbstractCodeGenerator.Writer","com.serious.codegenerator.AbstractCodeGenerator.Writer.indent"]},{"name":"fun inject(targetObject: Any, context: Any)","description":"com.serious.injection.Injector.inject","location":"service-core/com.serious.injection/-injector/inject.html","searchKeys":["inject","fun inject(targetObject: Any, context: Any)","com.serious.injection.Injector.inject"]},{"name":"fun involvesService(service: String): Boolean","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.involvesService","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/involves-service.html","searchKeys":["involvesService","fun involvesService(service: String): Boolean","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.involvesService"]},{"name":"fun isDeleted(instance: ServiceInstance?): Boolean","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.isDeleted","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/is-deleted.html","searchKeys":["isDeleted","fun isDeleted(instance: ServiceInstance?): Boolean","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.isDeleted"]},{"name":"fun kind(clazz: KClass<*>): String","description":"com.serious.service.InterfaceAnalyzer.kind","location":"service-core/com.serious.service/-interface-analyzer/kind.html","searchKeys":["kind","fun kind(clazz: KClass<*>): String","com.serious.service.InterfaceAnalyzer.kind"]},{"name":"fun localAddress(componentDescriptor: ComponentDescriptor<*>): ServiceAddress","description":"com.serious.service.ServiceAddress.Companion.localAddress","location":"service-core/com.serious.service/-service-address/-companion/local-address.html","searchKeys":["localAddress","fun localAddress(componentDescriptor: ComponentDescriptor<*>): ServiceAddress","com.serious.service.ServiceAddress.Companion.localAddress"]},{"name":"fun log(e: Throwable)","description":"com.serious.exception.DefaultExceptionHandler.log","location":"service-core/com.serious.exception/-default-exception-handler/log.html","searchKeys":["log","fun log(e: Throwable)","com.serious.exception.DefaultExceptionHandler.log"]},{"name":"fun make(component: String, address: ServiceAddress): Channel","description":"com.serious.service.ChannelManager.make","location":"service-core/com.serious.service/-channel-manager/make.html","searchKeys":["make","fun make(component: String, address: ServiceAddress): Channel","com.serious.service.ChannelManager.make"]},{"name":"fun mapPackage(packageName: String, folder: String, libraryName: String): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.mapPackage","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/map-package.html","searchKeys":["mapPackage","fun mapPackage(packageName: String, folder: String, libraryName: String): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder.mapPackage"]},{"name":"fun mapType(typeName: String): String","description":"com.serious.codegenerator.typescript.TypescriptGenerator.mapType","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/map-type.html","searchKeys":["mapType","fun mapType(typeName: String): String","com.serious.codegenerator.typescript.TypescriptGenerator.mapType"]},{"name":"fun missingAddress(component: String): ServiceAddress","description":"com.serious.service.ServiceAddress.Companion.missingAddress","location":"service-core/com.serious.service/-service-address/-companion/missing-address.html","searchKeys":["missingAddress","fun missingAddress(component: String): ServiceAddress","com.serious.service.ServiceAddress.Companion.missingAddress"]},{"name":"fun modelFor(componentDescriptor: ComponentDescriptor<*>): ComponentModel","description":"com.serious.service.InterfaceAnalyzer.modelFor","location":"service-core/com.serious.service/-interface-analyzer/model-for.html","searchKeys":["modelFor","fun modelFor(componentDescriptor: ComponentDescriptor<*>): ComponentModel","com.serious.service.InterfaceAnalyzer.modelFor"]},{"name":"fun options(): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptGenerator.Companion.options","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/-companion/options.html","searchKeys":["options","fun options(): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptGenerator.Companion.options"]},{"name":"fun parameters(method: KFunction<*>): List<ParameterDescriptor>","description":"com.serious.service.InterfaceAnalyzer.parameters","location":"service-core/com.serious.service/-interface-analyzer/parameters.html","searchKeys":["parameters","fun parameters(method: KFunction<*>): List<ParameterDescriptor>","com.serious.service.InterfaceAnalyzer.parameters"]},{"name":"fun popExceptionManager()","description":"com.serious.exception.ExceptionManager.Companion.popExceptionManager","location":"service-core/com.serious.exception/-exception-manager/-companion/pop-exception-manager.html","searchKeys":["popExceptionManager","fun popExceptionManager()","com.serious.exception.ExceptionManager.Companion.popExceptionManager"]},{"name":"fun print(str: String): AbstractCodeGenerator.Writer","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.print","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/print.html","searchKeys":["print","fun print(str: String): AbstractCodeGenerator.Writer","com.serious.codegenerator.AbstractCodeGenerator.Writer.print"]},{"name":"fun println(str: String = \"\"): AbstractCodeGenerator.Writer","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.println","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/println.html","searchKeys":["println","fun println(str: String = \"\"): AbstractCodeGenerator.Writer","com.serious.codegenerator.AbstractCodeGenerator.Writer.println"]},{"name":"fun proceed(arg: Throwable): Throwable","description":"com.serious.exception.ExceptionManager.Companion.proceed","location":"service-core/com.serious.exception/-exception-manager/-companion/proceed.html","searchKeys":["proceed","fun proceed(arg: Throwable): Throwable","com.serious.exception.ExceptionManager.Companion.proceed"]},{"name":"fun pushExceptionManager(exceptionManager: ExceptionManager?)","description":"com.serious.exception.ExceptionManager.Companion.pushExceptionManager","location":"service-core/com.serious.exception/-exception-manager/-companion/push-exception-manager.html","searchKeys":["pushExceptionManager","fun pushExceptionManager(exceptionManager: ExceptionManager?)","com.serious.exception.ExceptionManager.Companion.pushExceptionManager"]},{"name":"fun register(definition: BeanDefinition)","description":"com.serious.service.ChannelManager.register","location":"service-core/com.serious.service/-channel-manager/register.html","searchKeys":["register","fun register(definition: BeanDefinition)","com.serious.service.ChannelManager.register"]},{"name":"fun register(handler: ExceptionManager.Handler, replace: Boolean = false)","description":"com.serious.exception.ExceptionManager.register","location":"service-core/com.serious.exception/-exception-manager/register.html","searchKeys":["register","fun register(handler: ExceptionManager.Handler, replace: Boolean = false)","com.serious.exception.ExceptionManager.register"]},{"name":"fun registerChannelCustomizer(channelCustomizer: ChannelCustomizer<out Channel>)","description":"com.serious.service.ChannelManager.registerChannelCustomizer","location":"service-core/com.serious.service/-channel-manager/register-channel-customizer.html","searchKeys":["registerChannelCustomizer","fun registerChannelCustomizer(channelCustomizer: ChannelCustomizer<out Channel>)","com.serious.service.ChannelManager.registerChannelCustomizer"]},{"name":"fun registerComponent(interfaceBean: BeanDefinition)","description":"com.serious.service.ComponentLocator.registerComponent","location":"service-core/com.serious.service/-component-locator/register-component.html","searchKeys":["registerComponent","fun registerComponent(interfaceBean: BeanDefinition)","com.serious.service.ComponentLocator.registerComponent"]},{"name":"fun registerInjection(injection: Injection<Annotation, Any>)","description":"com.serious.injection.Injector.registerInjection","location":"service-core/com.serious.injection/-injector/register-injection.html","searchKeys":["registerInjection","fun registerInjection(injection: Injection<Annotation, Any>)","com.serious.injection.Injector.registerInjection"]},{"name":"fun registerInjection(injection: Injection<Annotation, Any>)","description":"com.serious.injection.InjectorFactory.registerInjection","location":"service-core/com.serious.injection/-injector-factory/register-injection.html","searchKeys":["registerInjection","fun registerInjection(injection: Injection<Annotation, Any>)","com.serious.injection.InjectorFactory.registerInjection"]},{"name":"fun rememberImplementation(descriptor: BaseDescriptor<out Service>, bean: BeanDefinition)","description":"com.serious.service.BaseDescriptor.Companion.rememberImplementation","location":"service-core/com.serious.service/-base-descriptor/-companion/remember-implementation.html","searchKeys":["rememberImplementation","fun rememberImplementation(descriptor: BaseDescriptor<out Service>, bean: BeanDefinition)","com.serious.service.BaseDescriptor.Companion.rememberImplementation"]},{"name":"fun removeChannel(channel: Channel)","description":"com.serious.service.ChannelManager.removeChannel","location":"service-core/com.serious.service/-channel-manager/remove-channel.html","searchKeys":["removeChannel","fun removeChannel(channel: Channel)","com.serious.service.ChannelManager.removeChannel"]},{"name":"fun replaceMethods(instance: Any, methodName: String)","description":"com.serious.util.MethodDispatcher.replaceMethods","location":"service-core/com.serious.util/-method-dispatcher/replace-methods.html","searchKeys":["replaceMethods","fun replaceMethods(instance: Any, methodName: String)","com.serious.util.MethodDispatcher.replaceMethods"]},{"name":"fun report()","description":"com.serious.service.ChannelManager.report","location":"service-core/com.serious.service/-channel-manager/report.html","searchKeys":["report","fun report()","com.serious.service.ChannelManager.report"]},{"name":"fun report()","description":"com.serious.service.ServiceInstanceRegistry.report","location":"service-core/com.serious.service/-service-instance-registry/report.html","searchKeys":["report","fun report()","com.serious.service.ServiceInstanceRegistry.report"]},{"name":"fun report(builder: StringBuilder)","description":"com.serious.service.ComponentDescriptor.report","location":"service-core/com.serious.service/-component-descriptor/report.html","searchKeys":["report","fun report(builder: StringBuilder)","com.serious.service.ComponentDescriptor.report"]},{"name":"fun report(builder: StringBuilder)","description":"com.serious.service.ServiceDescriptor.report","location":"service-core/com.serious.service/-service-descriptor/report.html","searchKeys":["report","fun report(builder: StringBuilder)","com.serious.service.ServiceDescriptor.report"]},{"name":"fun resolveChannel(): Channel","description":"com.serious.service.ChannelInvocationHandler.resolveChannel","location":"service-core/com.serious.service/-channel-invocation-handler/resolve-channel.html","searchKeys":["resolveChannel","fun resolveChannel(): Channel","com.serious.service.ChannelInvocationHandler.resolveChannel"]},{"name":"fun roundRobin()","description":"com.serious.service.channel.AbstractChannel.roundRobin","location":"service-core/com.serious.service.channel/-abstract-channel/round-robin.html","searchKeys":["roundRobin","fun roundRobin()","com.serious.service.channel.AbstractChannel.roundRobin"]},{"name":"fun scan()","description":"com.serious.service.ChannelManager.scan","location":"service-core/com.serious.service/-channel-manager/scan.html","searchKeys":["scan","fun scan()","com.serious.service.ChannelManager.scan"]},{"name":"fun scan()","description":"com.serious.service.ComponentLocator.scan","location":"service-core/com.serious.service/-component-locator/scan.html","searchKeys":["scan","fun scan()","com.serious.service.ComponentLocator.scan"]},{"name":"fun setDomain(domain: String): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.setDomain","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/set-domain.html","searchKeys":["setDomain","fun setDomain(domain: String): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder.setDomain"]},{"name":"fun setExternal()","description":"com.serious.exception.ExceptionManager.Companion.setExternal","location":"service-core/com.serious.exception/-exception-manager/-companion/set-external.html","searchKeys":["setExternal","fun setExternal()","com.serious.exception.ExceptionManager.Companion.setExternal"]},{"name":"fun setFilePerModel(filePerModel: Boolean = true): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.setFilePerModel","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/set-file-per-model.html","searchKeys":["setFilePerModel","fun setFilePerModel(filePerModel: Boolean = true): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder.setFilePerModel"]},{"name":"fun setFilePerService(filePerService: Boolean = true): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.setFilePerService","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/set-file-per-service.html","searchKeys":["setFilePerService","fun setFilePerService(filePerService: Boolean = true): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder.setFilePerService"]},{"name":"fun setFileWriter(file: File)","description":"com.serious.codegenerator.AbstractCodeGenerator.setFileWriter","location":"service-core/com.serious.codegenerator/-abstract-code-generator/set-file-writer.html","searchKeys":["setFileWriter","fun setFileWriter(file: File)","com.serious.codegenerator.AbstractCodeGenerator.setFileWriter"]},{"name":"fun setHeader(header: String): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.setHeader","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/set-header.html","searchKeys":["setHeader","fun setHeader(header: String): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder.setHeader"]},{"name":"fun setLanguage(language: LanguageSupport): TypescriptOptions.Builder","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.setLanguage","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/set-language.html","searchKeys":["setLanguage","fun setLanguage(language: LanguageSupport): TypescriptOptions.Builder","com.serious.codegenerator.typescript.TypescriptOptions.Builder.setLanguage"]},{"name":"fun setup()","description":"com.serious.service.ServiceManager.setup","location":"service-core/com.serious.service/-service-manager/setup.html","searchKeys":["setup","fun setup()","com.serious.service.ServiceManager.setup"]},{"name":"fun shutdown()","description":"com.serious.service.ServiceManager.shutdown","location":"service-core/com.serious.service/-service-manager/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.serious.service.ServiceManager.shutdown"]},{"name":"fun splitLines(str: String, prefix: String = \"\"): AbstractCodeGenerator.Writer","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.splitLines","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/split-lines.html","searchKeys":["splitLines","fun splitLines(str: String, prefix: String = \"\"): AbstractCodeGenerator.Writer","com.serious.codegenerator.AbstractCodeGenerator.Writer.splitLines"]},{"name":"fun startup()","description":"com.serious.service.ServiceInstanceRegistry.startup","location":"service-core/com.serious.service/-service-instance-registry/startup.html","searchKeys":["startup","fun startup()","com.serious.service.ServiceInstanceRegistry.startup"]},{"name":"fun startup(port: Int)","description":"com.serious.service.ServiceManager.startup","location":"service-core/com.serious.service/-service-manager/startup.html","searchKeys":["startup","fun startup(port: Int)","com.serious.service.ServiceManager.startup"]},{"name":"fun superclass(clazz: KClass<*>): KClass<*>?","description":"com.serious.service.InterfaceAnalyzer.superclass","location":"service-core/com.serious.service/-interface-analyzer/superclass.html","searchKeys":["superclass","fun superclass(clazz: KClass<*>): KClass<*>?","com.serious.service.InterfaceAnalyzer.superclass"]},{"name":"fun tab(delta: Int): AbstractCodeGenerator.Writer","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.tab","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/tab.html","searchKeys":["tab","fun tab(delta: Int): AbstractCodeGenerator.Writer","com.serious.codegenerator.AbstractCodeGenerator.Writer.tab"]},{"name":"fun toJSON(throwable: Throwable): String","description":"com.serious.jackson.ThrowableMapper.toJSON","location":"service-core/com.serious.jackson/-throwable-mapper/to-j-s-o-n.html","searchKeys":["toJSON","fun toJSON(throwable: Throwable): String","com.serious.jackson.ThrowableMapper.toJSON"]},{"name":"fun type(type: KType): TypeDescriptor","description":"com.serious.service.InterfaceAnalyzer.type","location":"service-core/com.serious.service/-interface-analyzer/type.html","searchKeys":["type","fun type(type: KType): TypeDescriptor","com.serious.service.InterfaceAnalyzer.type"]},{"name":"fun type(type: TypeDescriptor): String","description":"com.serious.codegenerator.typescript.TypescriptGenerator.type","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/type.html","searchKeys":["type","fun type(type: TypeDescriptor): String","com.serious.codegenerator.typescript.TypescriptGenerator.type"]},{"name":"fun unwrap(e: InvocationTargetException): Throwable","description":"com.serious.exception.DefaultExceptionHandler.unwrap","location":"service-core/com.serious.exception/-default-exception-handler/unwrap.html","searchKeys":["unwrap","fun unwrap(e: InvocationTargetException): Throwable","com.serious.exception.DefaultExceptionHandler.unwrap"]},{"name":"fun unwrap(e: Throwable): Throwable","description":"com.serious.exception.DefaultExceptionHandler.unwrap","location":"service-core/com.serious.exception/-default-exception-handler/unwrap.html","searchKeys":["unwrap","fun unwrap(e: Throwable): Throwable","com.serious.exception.DefaultExceptionHandler.unwrap"]},{"name":"fun unwrap(e: UndeclaredThrowableException): Throwable","description":"com.serious.exception.DefaultExceptionHandler.unwrap","location":"service-core/com.serious.exception/-default-exception-handler/unwrap.html","searchKeys":["unwrap","fun unwrap(e: UndeclaredThrowableException): Throwable","com.serious.exception.DefaultExceptionHandler.unwrap"]},{"name":"fun update(newMap: MutableMap<String, List<ServiceInstance>>)","description":"com.serious.service.ServiceInstanceRegistry.update","location":"service-core/com.serious.service/-service-instance-registry/update.html","searchKeys":["update","fun update(newMap: MutableMap<String, List<ServiceInstance>>)","com.serious.service.ServiceInstanceRegistry.update"]},{"name":"fun updateTopology(serviceInstanceRegistry: ServiceInstanceRegistry, topologyUpdate: ServiceInstanceRegistry.TopologyUpdate)","description":"com.serious.service.ChannelInvocationHandler.Companion.updateTopology","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/update-topology.html","searchKeys":["updateTopology","fun updateTopology(serviceInstanceRegistry: ServiceInstanceRegistry, topologyUpdate: ServiceInstanceRegistry.TopologyUpdate)","com.serious.service.ChannelInvocationHandler.Companion.updateTopology"]},{"name":"fun uriProvider(factory: AbstractChannel.URIProviderFactory)","description":"com.serious.service.channel.AbstractChannel.uriProvider","location":"service-core/com.serious.service.channel/-abstract-channel/uri-provider.html","searchKeys":["uriProvider","fun uriProvider(factory: AbstractChannel.URIProviderFactory)","com.serious.service.channel.AbstractChannel.uriProvider"]},{"name":"fun valueOf(value: String): ComponentHealth","description":"com.serious.service.ComponentHealth.valueOf","location":"service-core/com.serious.service/-component-health/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ComponentHealth","com.serious.service.ComponentHealth.valueOf"]},{"name":"fun valueOf(value: String): ComponentStatus","description":"com.serious.service.ComponentStatus.valueOf","location":"service-core/com.serious.service/-component-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ComponentStatus","com.serious.service.ComponentStatus.valueOf"]},{"name":"fun values(): Array<ComponentHealth>","description":"com.serious.service.ComponentHealth.values","location":"service-core/com.serious.service/-component-health/values.html","searchKeys":["values","fun values(): Array<ComponentHealth>","com.serious.service.ComponentHealth.values"]},{"name":"fun values(): Array<ComponentStatus>","description":"com.serious.service.ComponentStatus.values","location":"service-core/com.serious.service/-component-status/values.html","searchKeys":["values","fun values(): Array<ComponentStatus>","com.serious.service.ComponentStatus.values"]},{"name":"interface AdministrationComponent : Component","description":"com.serious.service.administration.AdministrationComponent","location":"service-core/com.serious.service.administration/-administration-component/index.html","searchKeys":["AdministrationComponent","interface AdministrationComponent : Component","com.serious.service.administration.AdministrationComponent"]},{"name":"interface ApplicationIntrospectionService : Service","description":"com.serious.service.administration.ApplicationIntrospectionService","location":"service-core/com.serious.service.administration/-application-introspection-service/index.html","searchKeys":["ApplicationIntrospectionService","interface ApplicationIntrospectionService : Service","com.serious.service.administration.ApplicationIntrospectionService"]},{"name":"interface Channel : MethodInterceptor, InvocationHandler","description":"com.serious.service.Channel","location":"service-core/com.serious.service/-channel/index.html","searchKeys":["Channel","interface Channel : MethodInterceptor, InvocationHandler","com.serious.service.Channel"]},{"name":"interface ChannelCustomizer<T : Channel>","description":"com.serious.service.channel.ChannelCustomizer","location":"service-core/com.serious.service.channel/-channel-customizer/index.html","searchKeys":["ChannelCustomizer","interface ChannelCustomizer<T : Channel>","com.serious.service.channel.ChannelCustomizer"]},{"name":"interface ChannelFactory","description":"com.serious.service.ChannelFactory","location":"service-core/com.serious.service/-channel-factory/index.html","searchKeys":["ChannelFactory","interface ChannelFactory","com.serious.service.ChannelFactory"]},{"name":"interface Component : Service","description":"com.serious.service.Component","location":"service-core/com.serious.service/-component/index.html","searchKeys":["Component","interface Component : Service","com.serious.service.Component"]},{"name":"interface ComponentAdministration","description":"com.serious.service.ComponentAdministration","location":"service-core/com.serious.service/-component-administration/index.html","searchKeys":["ComponentAdministration","interface ComponentAdministration","com.serious.service.ComponentAdministration"]},{"name":"interface ComponentIntrospectionService : Service","description":"com.serious.service.administration.ComponentIntrospectionService","location":"service-core/com.serious.service.administration/-component-introspection-service/index.html","searchKeys":["ComponentIntrospectionService","interface ComponentIntrospectionService : Service","com.serious.service.administration.ComponentIntrospectionService"]},{"name":"interface ComponentRegistry","description":"com.serious.service.ComponentRegistry","location":"service-core/com.serious.service/-component-registry/index.html","searchKeys":["ComponentRegistry","interface ComponentRegistry","com.serious.service.ComponentRegistry"]},{"name":"interface Handler","description":"com.serious.exception.ExceptionManager.Handler","location":"service-core/com.serious.exception/-exception-manager/-handler/index.html","searchKeys":["Handler","interface Handler","com.serious.exception.ExceptionManager.Handler"]},{"name":"interface Injection<AnnotationType : Annotation, InjectionContext>","description":"com.serious.injection.Injection","location":"service-core/com.serious.injection/-injection/index.html","searchKeys":["Injection","interface Injection<AnnotationType : Annotation, InjectionContext>","com.serious.injection.Injection"]},{"name":"interface LanguageSupport","description":"com.serious.codegenerator.LanguageSupport","location":"service-core/com.serious.codegenerator/-language-support/index.html","searchKeys":["LanguageSupport","interface LanguageSupport","com.serious.codegenerator.LanguageSupport"]},{"name":"interface Service","description":"com.serious.service.Service","location":"service-core/com.serious.service/-service/index.html","searchKeys":["Service","interface Service","com.serious.service.Service"]},{"name":"interface TopologyListener","description":"com.serious.service.TopologyListener","location":"service-core/com.serious.service/-topology-listener/index.html","searchKeys":["TopologyListener","interface TopologyListener","com.serious.service.TopologyListener"]},{"name":"interface URIProviderFactory","description":"com.serious.service.channel.AbstractChannel.URIProviderFactory","location":"service-core/com.serious.service.channel/-abstract-channel/-u-r-i-provider-factory/index.html","searchKeys":["URIProviderFactory","interface URIProviderFactory","com.serious.service.channel.AbstractChannel.URIProviderFactory"]},{"name":"lateinit value var rootPackage: String","description":"com.serious.service.ChannelManager.rootPackage","location":"service-core/com.serious.service/-channel-manager/root-package.html","searchKeys":["rootPackage","lateinit value var rootPackage: String","com.serious.service.ChannelManager.rootPackage"]},{"name":"lateinit var channelManager: ChannelManager","description":"com.serious.service.ServiceInstanceRegistry.channelManager","location":"service-core/com.serious.service/-service-instance-registry/channel-manager.html","searchKeys":["channelManager","lateinit var channelManager: ChannelManager","com.serious.service.ServiceInstanceRegistry.channelManager"]},{"name":"lateinit var channelManager: ChannelManager","description":"com.serious.service.administration.impl.ApplicationIntrospectionServiceImpl.channelManager","location":"service-core/com.serious.service.administration.impl/-application-introspection-service-impl/channel-manager.html","searchKeys":["channelManager","lateinit var channelManager: ChannelManager","com.serious.service.administration.impl.ApplicationIntrospectionServiceImpl.channelManager"]},{"name":"lateinit var componentRegistry: ComponentRegistry","description":"com.serious.service.ServiceInstanceRegistry.componentRegistry","location":"service-core/com.serious.service/-service-instance-registry/component-registry.html","searchKeys":["componentRegistry","lateinit var componentRegistry: ComponentRegistry","com.serious.service.ServiceInstanceRegistry.componentRegistry"]},{"name":"lateinit var exceptionManager: ExceptionManager","description":"com.serious.exception.AbstractExceptionHandler.exceptionManager","location":"service-core/com.serious.exception/-abstract-exception-handler/exception-manager.html","searchKeys":["exceptionManager","lateinit var exceptionManager: ExceptionManager","com.serious.exception.AbstractExceptionHandler.exceptionManager"]},{"name":"lateinit var exceptionManager: ExceptionManager","description":"com.serious.service.ServiceManager.exceptionManager","location":"service-core/com.serious.service/-service-manager/exception-manager.html","searchKeys":["exceptionManager","lateinit var exceptionManager: ExceptionManager","com.serious.service.ServiceManager.exceptionManager"]},{"name":"object Annotations","description":"com.serious.lang.Annotations","location":"service-core/com.serious.lang/-annotations/index.html","searchKeys":["Annotations","object Annotations","com.serious.lang.Annotations"]},{"name":"object Arrays","description":"com.serious.collections.Arrays","location":"service-core/com.serious.collections/-arrays/index.html","searchKeys":["Arrays","object Arrays","com.serious.collections.Arrays"]},{"name":"object Classes","description":"com.serious.lang.Classes","location":"service-core/com.serious.lang/-classes/index.html","searchKeys":["Classes","object Classes","com.serious.lang.Classes"]},{"name":"object Companion","description":"com.serious.codegenerator.typescript.TypescriptGenerator.Companion","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.codegenerator.typescript.TypescriptGenerator.Companion"]},{"name":"object Companion","description":"com.serious.exception.ExceptionManager.Companion","location":"service-core/com.serious.exception/-exception-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.exception.ExceptionManager.Companion"]},{"name":"object Companion","description":"com.serious.injection.AbstractInjection.Companion","location":"service-core/com.serious.injection/-abstract-injection/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.injection.AbstractInjection.Companion"]},{"name":"object Companion","description":"com.serious.injection.Injector.Companion","location":"service-core/com.serious.injection/-injector/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.injection.Injector.Companion"]},{"name":"object Companion","description":"com.serious.injection.InjectorFactory.Companion","location":"service-core/com.serious.injection/-injector-factory/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.injection.InjectorFactory.Companion"]},{"name":"object Companion","description":"com.serious.lang.Keywords.Companion","location":"service-core/com.serious.lang/-keywords/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.lang.Keywords.Companion"]},{"name":"object Companion","description":"com.serious.service.AbstractComponent.Companion","location":"service-core/com.serious.service/-abstract-component/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.AbstractComponent.Companion"]},{"name":"object Companion","description":"com.serious.service.BaseDescriptor.Companion","location":"service-core/com.serious.service/-base-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.BaseDescriptor.Companion"]},{"name":"object Companion","description":"com.serious.service.ChannelInvocationHandler.Companion","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ChannelInvocationHandler.Companion"]},{"name":"object Companion","description":"com.serious.service.ChannelManager.Companion","location":"service-core/com.serious.service/-channel-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ChannelManager.Companion"]},{"name":"object Companion","description":"com.serious.service.ComponentDescriptor.Companion","location":"service-core/com.serious.service/-component-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ComponentDescriptor.Companion"]},{"name":"object Companion","description":"com.serious.service.ComponentLocator.Companion","location":"service-core/com.serious.service/-component-locator/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ComponentLocator.Companion"]},{"name":"object Companion","description":"com.serious.service.ServiceAddress.Companion","location":"service-core/com.serious.service/-service-address/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ServiceAddress.Companion"]},{"name":"object Companion","description":"com.serious.service.ServiceInstanceRegistry.Companion","location":"service-core/com.serious.service/-service-instance-registry/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ServiceInstanceRegistry.Companion"]},{"name":"object Companion","description":"com.serious.service.ServiceManager.Companion","location":"service-core/com.serious.service/-service-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.ServiceManager.Companion"]},{"name":"object Companion","description":"com.serious.service.SpringChannelFactory.Companion","location":"service-core/com.serious.service/-spring-channel-factory/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.service.SpringChannelFactory.Companion"]},{"name":"object Companion","description":"com.serious.util.MethodDispatcher.Companion","location":"service-core/com.serious.util/-method-dispatcher/-companion/index.html","searchKeys":["Companion","object Companion","com.serious.util.MethodDispatcher.Companion"]},{"name":"object ThrowableMapper","description":"com.serious.jackson.ThrowableMapper","location":"service-core/com.serious.jackson/-throwable-mapper/index.html","searchKeys":["ThrowableMapper","object ThrowableMapper","com.serious.jackson.ThrowableMapper"]},{"name":"open class AbstractChannelCustomizer<T : Channel> : ChannelCustomizer<T> ","description":"com.serious.service.channel.AbstractChannelCustomizer","location":"service-core/com.serious.service.channel/-abstract-channel-customizer/index.html","searchKeys":["AbstractChannelCustomizer","open class AbstractChannelCustomizer<T : Channel> : ChannelCustomizer<T> ","com.serious.service.channel.AbstractChannelCustomizer"]},{"name":"open class AbstractCodeGenerator(name: String, version: String)","description":"com.serious.codegenerator.AbstractCodeGenerator","location":"service-core/com.serious.codegenerator/-abstract-code-generator/index.html","searchKeys":["AbstractCodeGenerator","open class AbstractCodeGenerator(name: String, version: String)","com.serious.codegenerator.AbstractCodeGenerator"]},{"name":"open class AbstractTypescriptGenerator(options: TypescriptOptions, name: String, version: String) : AbstractCodeGenerator","description":"com.serious.codegenerator.typescript.AbstractTypescriptGenerator","location":"service-core/com.serious.codegenerator.typescript/-abstract-typescript-generator/index.html","searchKeys":["AbstractTypescriptGenerator","open class AbstractTypescriptGenerator(options: TypescriptOptions, name: String, version: String) : AbstractCodeGenerator","com.serious.codegenerator.typescript.AbstractTypescriptGenerator"]},{"name":"open class FatalException : RuntimeException","description":"com.serious.exception.FatalException","location":"service-core/com.serious.exception/-fatal-exception/index.html","searchKeys":["FatalException","open class FatalException : RuntimeException","com.serious.exception.FatalException"]},{"name":"open class Keywords : Cloneable, Externalizable","description":"com.serious.lang.Keywords","location":"service-core/com.serious.lang/-keywords/index.html","searchKeys":["Keywords","open class Keywords : Cloneable, Externalizable","com.serious.lang.Keywords"]},{"name":"open class ServerException : FatalException","description":"com.serious.exception.ServerException","location":"service-core/com.serious.exception/-server-exception/index.html","searchKeys":["ServerException","open class ServerException : FatalException","com.serious.exception.ServerException"]},{"name":"open class ServiceConfiguration","description":"com.serious.service.ServiceConfiguration","location":"service-core/com.serious.service/-service-configuration/index.html","searchKeys":["ServiceConfiguration","open class ServiceConfiguration","com.serious.service.ServiceConfiguration"]},{"name":"open fun exceptionManager(): ExceptionManager","description":"com.serious.service.ServiceConfiguration.exceptionManager","location":"service-core/com.serious.service/-service-configuration/exception-manager.html","searchKeys":["exceptionManager","open fun exceptionManager(): ExceptionManager","com.serious.service.ServiceConfiguration.exceptionManager"]},{"name":"open fun injectorFactory(): InjectorFactory","description":"com.serious.service.ServiceConfiguration.injectorFactory","location":"service-core/com.serious.service/-service-configuration/injector-factory.html","searchKeys":["injectorFactory","open fun injectorFactory(): InjectorFactory","com.serious.service.ServiceConfiguration.injectorFactory"]},{"name":"open fun registerBeans(registry: DefaultListableBeanFactory)","description":"com.serious.service.BaseDescriptor.registerBeans","location":"service-core/com.serious.service/-base-descriptor/register-beans.html","searchKeys":["registerBeans","open fun registerBeans(registry: DefaultListableBeanFactory)","com.serious.service.BaseDescriptor.registerBeans"]},{"name":"open fun removeValue(keyword: String?)","description":"com.serious.lang.Keywords.removeValue","location":"service-core/com.serious.lang/-keywords/remove-value.html","searchKeys":["removeValue","open fun removeValue(keyword: String?)","com.serious.lang.Keywords.removeValue"]},{"name":"open fun serverPortListenerBean(): ApplicationListener<ServletWebServerInitializedEvent>","description":"com.serious.service.ServiceConfiguration.serverPortListenerBean","location":"service-core/com.serious.service/-service-configuration/server-port-listener-bean.html","searchKeys":["serverPortListenerBean","open fun serverPortListenerBean(): ApplicationListener<ServletWebServerInitializedEvent>","com.serious.service.ServiceConfiguration.serverPortListenerBean"]},{"name":"open fun setValue(keyword: String?, value: Any?)","description":"com.serious.lang.Keywords.setValue","location":"service-core/com.serious.lang/-keywords/set-value.html","searchKeys":["setValue","open fun setValue(keyword: String?, value: Any?)","com.serious.lang.Keywords.setValue"]},{"name":"open fun update(newAddress: ServiceAddress)","description":"com.serious.service.channel.AbstractChannel.URIProvider.update","location":"service-core/com.serious.service.channel/-abstract-channel/-u-r-i-provider/update.html","searchKeys":["update","open fun update(newAddress: ServiceAddress)","com.serious.service.channel.AbstractChannel.URIProvider.update"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.serious.lang.Keywords.equals","location":"service-core/com.serious.lang/-keywords/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.serious.lang.Keywords.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.serious.service.BaseDescriptor.equals","location":"service-core/com.serious.service/-base-descriptor/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.serious.service.BaseDescriptor.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.serious.util.MethodDispatcher.RegisteredMethod.equals","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.serious.util.MethodDispatcher.RegisteredMethod.equals"]},{"name":"open operator override fun invoke(invocation: MethodInvocation): Any?","description":"com.serious.service.channel.MissingChannel.invoke","location":"service-core/com.serious.service.channel/-missing-channel/invoke.html","searchKeys":["invoke","open operator override fun invoke(invocation: MethodInvocation): Any?","com.serious.service.channel.MissingChannel.invoke"]},{"name":"open operator override fun invoke(proxy: Any, method: Method, args: Array<out Any>?): Any?","description":"com.serious.service.ChannelInvocationHandler.invoke","location":"service-core/com.serious.service/-channel-invocation-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(proxy: Any, method: Method, args: Array<out Any>?): Any?","com.serious.service.ChannelInvocationHandler.invoke"]},{"name":"open operator override fun invoke(target: Any, method: Method, args: Array<Any>): Any?","description":"com.serious.service.channel.AbstractChannel.invoke","location":"service-core/com.serious.service.channel/-abstract-channel/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, method: Method, args: Array<Any>): Any?","com.serious.service.channel.AbstractChannel.invoke"]},{"name":"open override fun apply(channel: T)","description":"com.serious.service.channel.AbstractChannelCustomizer.apply","location":"service-core/com.serious.service.channel/-abstract-channel-customizer/apply.html","searchKeys":["apply","open override fun apply(channel: T)","com.serious.service.channel.AbstractChannelCustomizer.apply"]},{"name":"open override fun channels(): Map<String, ChannelDTO>","description":"com.serious.service.administration.impl.ApplicationIntrospectionServiceImpl.channels","location":"service-core/com.serious.service.administration.impl/-application-introspection-service-impl/channels.html","searchKeys":["channels","open override fun channels(): Map<String, ChannelDTO>","com.serious.service.administration.impl.ApplicationIntrospectionServiceImpl.channels"]},{"name":"open override fun clone(): Keywords","description":"com.serious.lang.Keywords.clone","location":"service-core/com.serious.lang/-keywords/clone.html","searchKeys":["clone","open override fun clone(): Keywords","com.serious.lang.Keywords.clone"]},{"name":"open override fun executeMethod(component: String, request: String): String","description":"com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.executeMethod","location":"service-core/com.serious.service.administration.impl/-component-introspection-service-impl/execute-method.html","searchKeys":["executeMethod","open override fun executeMethod(component: String, request: String): String","com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.executeMethod"]},{"name":"open override fun fetchComponent(component: String): ComponentDTO","description":"com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.fetchComponent","location":"service-core/com.serious.service.administration.impl/-component-introspection-service-impl/fetch-component.html","searchKeys":["fetchComponent","open override fun fetchComponent(component: String): ComponentDTO","com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.fetchComponent"]},{"name":"open override fun fetchComponentServices(component: String): List<String>","description":"com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.fetchComponentServices","location":"service-core/com.serious.service.administration.impl/-component-introspection-service-impl/fetch-component-services.html","searchKeys":["fetchComponentServices","open override fun fetchComponentServices(component: String): List<String>","com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.fetchComponentServices"]},{"name":"open override fun getArguments(): Array<Any>","description":"com.serious.service.channel.SimpleMethodInvocation.getArguments","location":"service-core/com.serious.service.channel/-simple-method-invocation/get-arguments.html","searchKeys":["getArguments","open override fun getArguments(): Array<Any>","com.serious.service.channel.SimpleMethodInvocation.getArguments"]},{"name":"open override fun getComponentDescriptor(): ComponentDescriptor<T>","description":"com.serious.service.ComponentDescriptor.getComponentDescriptor","location":"service-core/com.serious.service/-component-descriptor/get-component-descriptor.html","searchKeys":["getComponentDescriptor","open override fun getComponentDescriptor(): ComponentDescriptor<T>","com.serious.service.ComponentDescriptor.getComponentDescriptor"]},{"name":"open override fun getComponentDescriptor(): ComponentDescriptor<out Component>","description":"com.serious.service.ServiceDescriptor.getComponentDescriptor","location":"service-core/com.serious.service/-service-descriptor/get-component-descriptor.html","searchKeys":["getComponentDescriptor","open override fun getComponentDescriptor(): ComponentDescriptor<out Component>","com.serious.service.ServiceDescriptor.getComponentDescriptor"]},{"name":"open override fun getMethod(): Method","description":"com.serious.service.channel.SimpleMethodInvocation.getMethod","location":"service-core/com.serious.service.channel/-simple-method-invocation/get-method.html","searchKeys":["getMethod","open override fun getMethod(): Method","com.serious.service.channel.SimpleMethodInvocation.getMethod"]},{"name":"open override fun getObject(): Any","description":"com.serious.injection.InjectorFactory.getObject","location":"service-core/com.serious.injection/-injector-factory/get-object.html","searchKeys":["getObject","open override fun getObject(): Any","com.serious.injection.InjectorFactory.getObject"]},{"name":"open override fun getObjectType(): Class<*>","description":"com.serious.injection.InjectorFactory.getObjectType","location":"service-core/com.serious.injection/-injector-factory/get-object-type.html","searchKeys":["getObjectType","open override fun getObjectType(): Class<*>","com.serious.injection.InjectorFactory.getObjectType"]},{"name":"open override fun getStaticPart(): AccessibleObject","description":"com.serious.service.channel.SimpleMethodInvocation.getStaticPart","location":"service-core/com.serious.service.channel/-simple-method-invocation/get-static-part.html","searchKeys":["getStaticPart","open override fun getStaticPart(): AccessibleObject","com.serious.service.channel.SimpleMethodInvocation.getStaticPart"]},{"name":"open override fun getThis(): Any?","description":"com.serious.service.channel.SimpleMethodInvocation.getThis","location":"service-core/com.serious.service.channel/-simple-method-invocation/get-this.html","searchKeys":["getThis","open override fun getThis(): Any?","com.serious.service.channel.SimpleMethodInvocation.getThis"]},{"name":"open override fun hashCode(): Int","description":"com.serious.lang.Keywords.hashCode","location":"service-core/com.serious.lang/-keywords/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.serious.lang.Keywords.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.serious.service.BaseDescriptor.hashCode","location":"service-core/com.serious.service/-base-descriptor/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.serious.service.BaseDescriptor.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.serious.util.MethodDispatcher.RegisteredMethod.hashCode","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.serious.util.MethodDispatcher.RegisteredMethod.hashCode"]},{"name":"open override fun inject(targetObject: Any, accessibleObject: AccessibleObject, annotation: AnnotationType, context: InjectionContext)","description":"com.serious.injection.AbstractInjection.inject","location":"service-core/com.serious.injection/-abstract-injection/inject.html","searchKeys":["inject","open override fun inject(targetObject: Any, accessibleObject: AccessibleObject, annotation: AnnotationType, context: InjectionContext)","com.serious.injection.AbstractInjection.inject"]},{"name":"open override fun isApplicable(component: String): Boolean","description":"com.serious.service.channel.AbstractChannelCustomizer.isApplicable","location":"service-core/com.serious.service.channel/-abstract-channel-customizer/is-applicable.html","searchKeys":["isApplicable","open override fun isApplicable(component: String): Boolean","com.serious.service.channel.AbstractChannelCustomizer.isApplicable"]},{"name":"open override fun isArray(typeName: String): Boolean","description":"com.serious.codegenerator.KotlinLanguageSupport.isArray","location":"service-core/com.serious.codegenerator/-kotlin-language-support/is-array.html","searchKeys":["isArray","open override fun isArray(typeName: String): Boolean","com.serious.codegenerator.KotlinLanguageSupport.isArray"]},{"name":"open override fun isNativeType(type: String): Boolean","description":"com.serious.codegenerator.KotlinLanguageSupport.isNativeType","location":"service-core/com.serious.codegenerator/-kotlin-language-support/is-native-type.html","searchKeys":["isNativeType","open override fun isNativeType(type: String): Boolean","com.serious.codegenerator.KotlinLanguageSupport.isNativeType"]},{"name":"open override fun isSingleton(): Boolean","description":"com.serious.injection.InjectorFactory.isSingleton","location":"service-core/com.serious.injection/-injector-factory/is-singleton.html","searchKeys":["isSingleton","open override fun isSingleton(): Boolean","com.serious.injection.InjectorFactory.isSingleton"]},{"name":"open override fun listServices(component: String): Collection<InterfaceDescriptor>","description":"com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.listServices","location":"service-core/com.serious.service.administration.impl/-component-introspection-service-impl/list-services.html","searchKeys":["listServices","open override fun listServices(component: String): Collection<InterfaceDescriptor>","com.serious.service.administration.impl.ComponentIntrospectionServiceImpl.listServices"]},{"name":"open override fun makeChannel(component: String, addresses: ServiceAddress): Channel","description":"com.serious.service.SpringChannelFactory.makeChannel","location":"service-core/com.serious.service/-spring-channel-factory/make-channel.html","searchKeys":["makeChannel","open override fun makeChannel(component: String, addresses: ServiceAddress): Channel","com.serious.service.SpringChannelFactory.makeChannel"]},{"name":"open override fun mapType(typeName: String): String","description":"com.serious.codegenerator.KotlinLanguageSupport.mapType","location":"service-core/com.serious.codegenerator/-kotlin-language-support/map-type.html","searchKeys":["mapType","open override fun mapType(typeName: String): String","com.serious.codegenerator.KotlinLanguageSupport.mapType"]},{"name":"open override fun postProcessAfterInitialization(bean: Any, beanName: String): Any","description":"com.serious.injection.Injector.postProcessAfterInitialization","location":"service-core/com.serious.injection/-injector/post-process-after-initialization.html","searchKeys":["postProcessAfterInitialization","open override fun postProcessAfterInitialization(bean: Any, beanName: String): Any","com.serious.injection.Injector.postProcessAfterInitialization"]},{"name":"open override fun postProcessAfterInitialization(bean: Any, beanName: String): Any","description":"com.serious.injection.InjectorFactory.postProcessAfterInitialization","location":"service-core/com.serious.injection/-injector-factory/post-process-after-initialization.html","searchKeys":["postProcessAfterInitialization","open override fun postProcessAfterInitialization(bean: Any, beanName: String): Any","com.serious.injection.InjectorFactory.postProcessAfterInitialization"]},{"name":"open override fun postProcessBeanFactory(beanFactory: ConfigurableListableBeanFactory)","description":"com.serious.service.ComponentLocator.postProcessBeanFactory","location":"service-core/com.serious.service/-component-locator/post-process-bean-factory.html","searchKeys":["postProcessBeanFactory","open override fun postProcessBeanFactory(beanFactory: ConfigurableListableBeanFactory)","com.serious.service.ComponentLocator.postProcessBeanFactory"]},{"name":"open override fun postProcessBeforeInitialization(bean: Any, beanName: String): Any","description":"com.serious.injection.Injector.postProcessBeforeInitialization","location":"service-core/com.serious.injection/-injector/post-process-before-initialization.html","searchKeys":["postProcessBeforeInitialization","open override fun postProcessBeforeInitialization(bean: Any, beanName: String): Any","com.serious.injection.Injector.postProcessBeforeInitialization"]},{"name":"open override fun postProcessBeforeInitialization(bean: Any, beanName: String): Any","description":"com.serious.injection.InjectorFactory.postProcessBeforeInitialization","location":"service-core/com.serious.injection/-injector-factory/post-process-before-initialization.html","searchKeys":["postProcessBeforeInitialization","open override fun postProcessBeforeInitialization(bean: Any, beanName: String): Any","com.serious.injection.InjectorFactory.postProcessBeforeInitialization"]},{"name":"open override fun proceed(): Any?","description":"com.serious.service.channel.SimpleMethodInvocation.proceed","location":"service-core/com.serious.service.channel/-simple-method-invocation/proceed.html","searchKeys":["proceed","open override fun proceed(): Any?","com.serious.service.channel.SimpleMethodInvocation.proceed"]},{"name":"open override fun provide(): URI","description":"com.serious.service.channel.AbstractChannel.FirstMatchURIProvider.provide","location":"service-core/com.serious.service.channel/-abstract-channel/-first-match-u-r-i-provider/provide.html","searchKeys":["provide","open override fun provide(): URI","com.serious.service.channel.AbstractChannel.FirstMatchURIProvider.provide"]},{"name":"open override fun provide(): URI","description":"com.serious.service.channel.AbstractChannel.RoundRobinURIProvider.provide","location":"service-core/com.serious.service.channel/-abstract-channel/-round-robin-u-r-i-provider/provide.html","searchKeys":["provide","open override fun provide(): URI","com.serious.service.channel.AbstractChannel.RoundRobinURIProvider.provide"]},{"name":"open override fun readExternal(in: ObjectInput)","description":"com.serious.lang.Keywords.readExternal","location":"service-core/com.serious.lang/-keywords/read-external.html","searchKeys":["readExternal","open override fun readExternal(in: ObjectInput)","com.serious.lang.Keywords.readExternal"]},{"name":"open override fun registerBeans(registry: DefaultListableBeanFactory)","description":"com.serious.service.ComponentDescriptor.registerBeans","location":"service-core/com.serious.service/-component-descriptor/register-beans.html","searchKeys":["registerBeans","open override fun registerBeans(registry: DefaultListableBeanFactory)","com.serious.service.ComponentDescriptor.registerBeans"]},{"name":"open override fun setApplicationContext(applicationContext: ApplicationContext)","description":"com.serious.service.ChannelManager.setApplicationContext","location":"service-core/com.serious.service/-channel-manager/set-application-context.html","searchKeys":["setApplicationContext","open override fun setApplicationContext(applicationContext: ApplicationContext)","com.serious.service.ChannelManager.setApplicationContext"]},{"name":"open override fun setApplicationContext(applicationContext: ApplicationContext)","description":"com.serious.service.ServiceManager.setApplicationContext","location":"service-core/com.serious.service/-service-manager/set-application-context.html","searchKeys":["setApplicationContext","open override fun setApplicationContext(applicationContext: ApplicationContext)","com.serious.service.ServiceManager.setApplicationContext"]},{"name":"open override fun setApplicationContext(applicationContext: ApplicationContext)","description":"com.serious.service.injections.ServiceInjection.setApplicationContext","location":"service-core/com.serious.service.injections/-service-injection/set-application-context.html","searchKeys":["setApplicationContext","open override fun setApplicationContext(applicationContext: ApplicationContext)","com.serious.service.injections.ServiceInjection.setApplicationContext"]},{"name":"open override fun setEnvironment(environment: Environment)","description":"com.serious.service.ComponentLocator.setEnvironment","location":"service-core/com.serious.service/-component-locator/set-environment.html","searchKeys":["setEnvironment","open override fun setEnvironment(environment: Environment)","com.serious.service.ComponentLocator.setEnvironment"]},{"name":"open override fun setup()","description":"com.serious.service.channel.AbstractChannel.setup","location":"service-core/com.serious.service.channel/-abstract-channel/setup.html","searchKeys":["setup","open override fun setup()","com.serious.service.channel.AbstractChannel.setup"]},{"name":"open override fun shutdown()","description":"com.serious.service.AbstractComponent.shutdown","location":"service-core/com.serious.service/-abstract-component/shutdown.html","searchKeys":["shutdown","open override fun shutdown()","com.serious.service.AbstractComponent.shutdown"]},{"name":"open override fun startup()","description":"com.serious.service.AbstractComponent.startup","location":"service-core/com.serious.service/-abstract-component/startup.html","searchKeys":["startup","open override fun startup()","com.serious.service.AbstractComponent.startup"]},{"name":"open override fun toString(): String","description":"com.serious.lang.Keywords.toString","location":"service-core/com.serious.lang/-keywords/to-string.html","searchKeys":["toString","open override fun toString(): String","com.serious.lang.Keywords.toString"]},{"name":"open override fun toString(): String","description":"com.serious.service.ServiceAddress.toString","location":"service-core/com.serious.service/-service-address/to-string.html","searchKeys":["toString","open override fun toString(): String","com.serious.service.ServiceAddress.toString"]},{"name":"open override fun toString(): String","description":"com.serious.service.channel.SimpleMethodInvocation.toString","location":"service-core/com.serious.service.channel/-simple-method-invocation/to-string.html","searchKeys":["toString","open override fun toString(): String","com.serious.service.channel.SimpleMethodInvocation.toString"]},{"name":"open override fun toString(): String","description":"com.serious.util.MethodDispatcher.RegisteredMethod.toString","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/to-string.html","searchKeys":["toString","open override fun toString(): String","com.serious.util.MethodDispatcher.RegisteredMethod.toString"]},{"name":"open override fun topologyUpdate(newAddress: ServiceAddress)","description":"com.serious.service.channel.AbstractChannel.topologyUpdate","location":"service-core/com.serious.service.channel/-abstract-channel/topology-update.html","searchKeys":["topologyUpdate","open override fun topologyUpdate(newAddress: ServiceAddress)","com.serious.service.channel.AbstractChannel.topologyUpdate"]},{"name":"open override fun update(newAddress: ServiceAddress)","description":"com.serious.service.channel.AbstractChannel.RoundRobinURIProvider.update","location":"service-core/com.serious.service.channel/-abstract-channel/-round-robin-u-r-i-provider/update.html","searchKeys":["update","open override fun update(newAddress: ServiceAddress)","com.serious.service.channel.AbstractChannel.RoundRobinURIProvider.update"]},{"name":"open override fun writeExternal(out: ObjectOutput)","description":"com.serious.lang.Keywords.writeExternal","location":"service-core/com.serious.lang/-keywords/write-external.html","searchKeys":["writeExternal","open override fun writeExternal(out: ObjectOutput)","com.serious.lang.Keywords.writeExternal"]},{"name":"open override val channelClass: Class<out Channel>","description":"com.serious.service.channel.AbstractChannelCustomizer.channelClass","location":"service-core/com.serious.service.channel/-abstract-channel-customizer/channel-class.html","searchKeys":["channelClass","open override val channelClass: Class<out Channel>","com.serious.service.channel.AbstractChannelCustomizer.channelClass"]},{"name":"open override val component: String","description":"com.serious.service.channel.AbstractChannel.component","location":"service-core/com.serious.service.channel/-abstract-channel/component.html","searchKeys":["component","open override val component: String","com.serious.service.channel.AbstractChannel.component"]},{"name":"open override val component: String","description":"com.serious.service.channel.MissingChannel.component","location":"service-core/com.serious.service.channel/-missing-channel/component.html","searchKeys":["component","open override val component: String","com.serious.service.channel.MissingChannel.component"]},{"name":"open override val health: ComponentHealth","description":"com.serious.service.AbstractComponent.health","location":"service-core/com.serious.service/-abstract-component/health.html","searchKeys":["health","open override val health: ComponentHealth","com.serious.service.AbstractComponent.health"]},{"name":"open override val isService: Boolean","description":"com.serious.service.ServiceDescriptor.isService","location":"service-core/com.serious.service/-service-descriptor/is-service.html","searchKeys":["isService","open override val isService: Boolean","com.serious.service.ServiceDescriptor.isService"]},{"name":"open override val name: String","description":"com.serious.service.channel.AbstractChannel.name","location":"service-core/com.serious.service.channel/-abstract-channel/name.html","searchKeys":["name","open override val name: String","com.serious.service.channel.AbstractChannel.name"]},{"name":"open override var address: ServiceAddress","description":"com.serious.service.channel.AbstractChannel.address","location":"service-core/com.serious.service.channel/-abstract-channel/address.html","searchKeys":["address","open override var address: ServiceAddress","com.serious.service.channel.AbstractChannel.address"]},{"name":"open override var annotationClass: Class<out Annotation>","description":"com.serious.injection.AbstractInjection.annotationClass","location":"service-core/com.serious.injection/-abstract-injection/annotation-class.html","searchKeys":["annotationClass","open override var annotationClass: Class<out Annotation>","com.serious.injection.AbstractInjection.annotationClass"]},{"name":"open override var status: ComponentStatus","description":"com.serious.service.AbstractComponent.status","location":"service-core/com.serious.service/-abstract-component/status.html","searchKeys":["status","open override var status: ComponentStatus","com.serious.service.AbstractComponent.status"]},{"name":"open val isService: Boolean","description":"com.serious.service.BaseDescriptor.isService","location":"service-core/com.serious.service/-base-descriptor/is-service.html","searchKeys":["isService","open val isService: Boolean","com.serious.service.BaseDescriptor.isService"]},{"name":"operator fun invoke(vararg args: Any): Any","description":"com.serious.util.MethodDispatcher.RegisteredMethod.invoke","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/invoke.html","searchKeys":["invoke","operator fun invoke(vararg args: Any): Any","com.serious.util.MethodDispatcher.RegisteredMethod.invoke"]},{"name":"val EMPTY_HANDLERS_ARRAY: Array<ExceptionManager.Handler>","description":"com.serious.exception.ExceptionManager.Companion.EMPTY_HANDLERS_ARRAY","location":"service-core/com.serious.exception/-exception-manager/-companion/-e-m-p-t-y_-h-a-n-d-l-e-r-s_-a-r-r-a-y.html","searchKeys":["EMPTY_HANDLERS_ARRAY","val EMPTY_HANDLERS_ARRAY: Array<ExceptionManager.Handler>","com.serious.exception.ExceptionManager.Companion.EMPTY_HANDLERS_ARRAY"]},{"name":"val NONE: Keywords","description":"com.serious.lang.Keywords.Companion.NONE","location":"service-core/com.serious.lang/-keywords/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: Keywords","com.serious.lang.Keywords.Companion.NONE"]},{"name":"val analyzer: InterfaceAnalyzer","description":"com.serious.codegenerator.typescript.TypescriptGenerator.analyzer","location":"service-core/com.serious.codegenerator.typescript/-typescript-generator/analyzer.html","searchKeys":["analyzer","val analyzer: InterfaceAnalyzer","com.serious.codegenerator.typescript.TypescriptGenerator.analyzer"]},{"name":"val analyzer: InterfaceAnalyzer","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.analyzer","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/analyzer.html","searchKeys":["analyzer","val analyzer: InterfaceAnalyzer","com.serious.codegenerator.typescript.TypescriptOptions.Builder.analyzer"]},{"name":"val analyzer: InterfaceAnalyzer","description":"com.serious.codegenerator.typescript.TypescriptOptions.analyzer","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/analyzer.html","searchKeys":["analyzer","val analyzer: InterfaceAnalyzer","com.serious.codegenerator.typescript.TypescriptOptions.analyzer"]},{"name":"val annotations: List<AnnotationDescriptor>","description":"com.serious.service.InterfaceDescriptor.annotations","location":"service-core/com.serious.service/-interface-descriptor/annotations.html","searchKeys":["annotations","val annotations: List<AnnotationDescriptor>","com.serious.service.InterfaceDescriptor.annotations"]},{"name":"val annotations: List<AnnotationDescriptor>","description":"com.serious.service.MethodDescriptor.annotations","location":"service-core/com.serious.service/-method-descriptor/annotations.html","searchKeys":["annotations","val annotations: List<AnnotationDescriptor>","com.serious.service.MethodDescriptor.annotations"]},{"name":"val annotations: List<AnnotationDescriptor>","description":"com.serious.service.ParameterDescriptor.annotations","location":"service-core/com.serious.service/-parameter-descriptor/annotations.html","searchKeys":["annotations","val annotations: List<AnnotationDescriptor>","com.serious.service.ParameterDescriptor.annotations"]},{"name":"val annotations: List<AnnotationDescriptor>","description":"com.serious.service.PropertyDescriptor.annotations","location":"service-core/com.serious.service/-property-descriptor/annotations.html","searchKeys":["annotations","val annotations: List<AnnotationDescriptor>","com.serious.service.PropertyDescriptor.annotations"]},{"name":"val channel: KClass<out Channel>","description":"com.serious.service.channel.RegisterChannelCustomizer.channel","location":"service-core/com.serious.service.channel/-register-channel-customizer/channel.html","searchKeys":["channel","val channel: KClass<out Channel>","com.serious.service.channel.RegisterChannelCustomizer.channel"]},{"name":"val channel: String","description":"com.serious.service.ChannelAddress.channel","location":"service-core/com.serious.service/-channel-address/channel.html","searchKeys":["channel","val channel: String","com.serious.service.ChannelAddress.channel"]},{"name":"val channel: String","description":"com.serious.service.annotations.InjectService.channel","location":"service-core/com.serious.service.annotations/-inject-service/channel.html","searchKeys":["channel","val channel: String","com.serious.service.annotations.InjectService.channel"]},{"name":"val channels: List<ChannelDTO>","description":"com.serious.service.administration.model.ComponentDTO.channels","location":"service-core/com.serious.service.administration.model/-component-d-t-o/channels.html","searchKeys":["channels","val channels: List<ChannelDTO>","com.serious.service.administration.model.ComponentDTO.channels"]},{"name":"val checked: HashSet<KClass<*>>","description":"com.serious.service.InterfaceAnalyzer.checked","location":"service-core/com.serious.service/-interface-analyzer/checked.html","searchKeys":["checked","val checked: HashSet<KClass<*>>","com.serious.service.InterfaceAnalyzer.checked"]},{"name":"val component: InterfaceDescriptor","description":"com.serious.service.ComponentModel.component","location":"service-core/com.serious.service/-component-model/component.html","searchKeys":["component","val component: InterfaceDescriptor","com.serious.service.ComponentModel.component"]},{"name":"val componentDescriptor: ComponentDescriptor<out Component>","description":"com.serious.service.ServiceDescriptor.componentDescriptor","location":"service-core/com.serious.service/-service-descriptor/component-descriptor.html","searchKeys":["componentDescriptor","val componentDescriptor: ComponentDescriptor<out Component>","com.serious.service.ServiceDescriptor.componentDescriptor"]},{"name":"val description: String","description":"com.serious.annotations.Parameter.description","location":"service-core/com.serious.annotations/-parameter/description.html","searchKeys":["description","val description: String","com.serious.annotations.Parameter.description"]},{"name":"val description: String","description":"com.serious.service.ComponentInterface.description","location":"service-core/com.serious.service/-component-interface/description.html","searchKeys":["description","val description: String","com.serious.service.ComponentInterface.description"]},{"name":"val description: String","description":"com.serious.service.ServiceInterface.description","location":"service-core/com.serious.service/-service-interface/description.html","searchKeys":["description","val description: String","com.serious.service.ServiceInterface.description"]},{"name":"val description: String","description":"com.serious.service.administration.model.ComponentDTO.description","location":"service-core/com.serious.service.administration.model/-component-d-t-o/description.html","searchKeys":["description","val description: String","com.serious.service.administration.model.ComponentDTO.description"]},{"name":"val domain: String","description":"com.serious.codegenerator.typescript.TypescriptOptions.domain","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/domain.html","searchKeys":["domain","val domain: String","com.serious.codegenerator.typescript.TypescriptOptions.domain"]},{"name":"val entries: EnumEntries<ComponentHealth>","description":"com.serious.service.ComponentHealth.entries","location":"service-core/com.serious.service/-component-health/entries.html","searchKeys":["entries","val entries: EnumEntries<ComponentHealth>","com.serious.service.ComponentHealth.entries"]},{"name":"val entries: EnumEntries<ComponentStatus>","description":"com.serious.service.ComponentStatus.entries","location":"service-core/com.serious.service/-component-status/entries.html","searchKeys":["entries","val entries: EnumEntries<ComponentStatus>","com.serious.service.ComponentStatus.entries"]},{"name":"val exceptionManager: ExceptionManager?","description":"com.serious.exception.ExceptionManager.Companion.exceptionManager","location":"service-core/com.serious.exception/-exception-manager/-companion/exception-manager.html","searchKeys":["exceptionManager","val exceptionManager: ExceptionManager?","com.serious.exception.ExceptionManager.Companion.exceptionManager"]},{"name":"val externalAddresses: List<ChannelAddress>?","description":"com.serious.service.ComponentDescriptor.externalAddresses","location":"service-core/com.serious.service/-component-descriptor/external-addresses.html","searchKeys":["externalAddresses","val externalAddresses: List<ChannelAddress>?","com.serious.service.ComponentDescriptor.externalAddresses"]},{"name":"val filePerModel: Boolean","description":"com.serious.codegenerator.typescript.TypescriptOptions.filePerModel","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/file-per-model.html","searchKeys":["filePerModel","val filePerModel: Boolean","com.serious.codegenerator.typescript.TypescriptOptions.filePerModel"]},{"name":"val filePerService: Boolean","description":"com.serious.codegenerator.typescript.TypescriptOptions.filePerService","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/file-per-service.html","searchKeys":["filePerService","val filePerService: Boolean","com.serious.codegenerator.typescript.TypescriptOptions.filePerService"]},{"name":"val folder: String","description":"com.serious.codegenerator.typescript.PackageMapping.folder","location":"service-core/com.serious.codegenerator.typescript/-package-mapping/folder.html","searchKeys":["folder","val folder: String","com.serious.codegenerator.typescript.PackageMapping.folder"]},{"name":"val header: String","description":"com.serious.codegenerator.typescript.TypescriptOptions.header","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/header.html","searchKeys":["header","val header: String","com.serious.codegenerator.typescript.TypescriptOptions.header"]},{"name":"val health: String","description":"com.serious.service.ComponentHost.health","location":"service-core/com.serious.service/-component-host/health.html","searchKeys":["health","val health: String","com.serious.service.ComponentHost.health"]},{"name":"val host: String","description":"com.serious.service.AbstractComponent.Companion.host","location":"service-core/com.serious.service/-abstract-component/-companion/host.html","searchKeys":["host","val host: String","com.serious.service.AbstractComponent.Companion.host"]},{"name":"val host: String","description":"com.serious.service.Server.host","location":"service-core/com.serious.service/-server/host.html","searchKeys":["host","val host: String","com.serious.service.Server.host"]},{"name":"val ignore: Array<String>","description":"com.serious.service.InterfaceAnalyzer.ignore","location":"service-core/com.serious.service/-interface-analyzer/ignore.html","searchKeys":["ignore","val ignore: Array<String>","com.serious.service.InterfaceAnalyzer.ignore"]},{"name":"val implements: List<String>","description":"com.serious.service.InterfaceDescriptor.implements","location":"service-core/com.serious.service/-interface-descriptor/implements.html","searchKeys":["implements","val implements: List<String>","com.serious.service.InterfaceDescriptor.implements"]},{"name":"val importName: String","description":"com.serious.codegenerator.typescript.PackageMapping.importName","location":"service-core/com.serious.codegenerator.typescript/-package-mapping/import-name.html","searchKeys":["importName","val importName: String","com.serious.codegenerator.typescript.PackageMapping.importName"]},{"name":"val imports: HashMap<String, String>","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.imports","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/imports.html","searchKeys":["imports","val imports: HashMap<String, String>","com.serious.codegenerator.typescript.TypescriptOptions.Builder.imports"]},{"name":"val imports: HashMap<String, String>","description":"com.serious.codegenerator.typescript.TypescriptOptions.imports","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/imports.html","searchKeys":["imports","val imports: HashMap<String, String>","com.serious.codegenerator.typescript.TypescriptOptions.imports"]},{"name":"val inherits: String?","description":"com.serious.service.InterfaceDescriptor.inherits","location":"service-core/com.serious.service/-interface-descriptor/inherits.html","searchKeys":["inherits","val inherits: String?","com.serious.service.InterfaceDescriptor.inherits"]},{"name":"val isEmpty: Boolean","description":"com.serious.lang.Keywords.isEmpty","location":"service-core/com.serious.lang/-keywords/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","com.serious.lang.Keywords.isEmpty"]},{"name":"val isEmpty: Boolean","description":"com.serious.service.ServiceInstanceRegistry.TopologyUpdate.isEmpty","location":"service-core/com.serious.service/-service-instance-registry/-topology-update/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","com.serious.service.ServiceInstanceRegistry.TopologyUpdate.isEmpty"]},{"name":"val isInternal: Boolean","description":"com.serious.exception.ExceptionManager.Companion.isInternal","location":"service-core/com.serious.exception/-exception-manager/-companion/is-internal.html","searchKeys":["isInternal","val isInternal: Boolean","com.serious.exception.ExceptionManager.Companion.isInternal"]},{"name":"val keys: Collection<String?>","description":"com.serious.lang.Keywords.keys","location":"service-core/com.serious.lang/-keywords/keys.html","searchKeys":["keys","val keys: Collection<String?>","com.serious.lang.Keywords.keys"]},{"name":"val kind: String","description":"com.serious.service.InterfaceDescriptor.kind","location":"service-core/com.serious.service/-interface-descriptor/kind.html","searchKeys":["kind","val kind: String","com.serious.service.InterfaceDescriptor.kind"]},{"name":"val label: String","description":"com.serious.service.administration.model.ComponentDTO.label","location":"service-core/com.serious.service.administration.model/-component-d-t-o/label.html","searchKeys":["label","val label: String","com.serious.service.administration.model.ComponentDTO.label"]},{"name":"val language: LanguageSupport","description":"com.serious.codegenerator.typescript.TypescriptOptions.language","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/language.html","searchKeys":["language","val language: LanguageSupport","com.serious.codegenerator.typescript.TypescriptOptions.language"]},{"name":"val log: Logger","description":"com.serious.service.ChannelManager.Companion.log","location":"service-core/com.serious.service/-channel-manager/-companion/log.html","searchKeys":["log","val log: Logger","com.serious.service.ChannelManager.Companion.log"]},{"name":"val log: Logger","description":"com.serious.service.ServiceInstanceRegistry.Companion.log","location":"service-core/com.serious.service/-service-instance-registry/-companion/log.html","searchKeys":["log","val log: Logger","com.serious.service.ServiceInstanceRegistry.Companion.log"]},{"name":"val mappings: MutableList<PackageMapping>","description":"com.serious.codegenerator.typescript.TypescriptOptions.mappings","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/mappings.html","searchKeys":["mappings","val mappings: MutableList<PackageMapping>","com.serious.codegenerator.typescript.TypescriptOptions.mappings"]},{"name":"val method: Method","description":"com.serious.util.MethodDispatcher.RegisteredMethod.method","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/method.html","searchKeys":["method","val method: Method","com.serious.util.MethodDispatcher.RegisteredMethod.method"]},{"name":"val methods: List<MethodDescriptor>","description":"com.serious.service.InterfaceDescriptor.methods","location":"service-core/com.serious.service/-interface-descriptor/methods.html","searchKeys":["methods","val methods: List<MethodDescriptor>","com.serious.service.InterfaceDescriptor.methods"]},{"name":"val model: ComponentModel","description":"com.serious.service.administration.model.ComponentDTO.model","location":"service-core/com.serious.service.administration.model/-component-d-t-o/model.html","searchKeys":["model","val model: ComponentModel","com.serious.service.administration.model.ComponentDTO.model"]},{"name":"val models: Collection<InterfaceDescriptor>","description":"com.serious.service.ComponentModel.models","location":"service-core/com.serious.service/-component-model/models.html","searchKeys":["models","val models: Collection<InterfaceDescriptor>","com.serious.service.ComponentModel.models"]},{"name":"val models: HashMap<String, InterfaceDescriptor>","description":"com.serious.service.InterfaceAnalyzer.models","location":"service-core/com.serious.service/-interface-analyzer/models.html","searchKeys":["models","val models: HashMap<String, InterfaceDescriptor>","com.serious.service.InterfaceAnalyzer.models"]},{"name":"val name: String","description":"com.serious.annotations.Parameter.name","location":"service-core/com.serious.annotations/-parameter/name.html","searchKeys":["name","val name: String","com.serious.annotations.Parameter.name"]},{"name":"val name: String","description":"com.serious.service.AnnotationDescriptor.name","location":"service-core/com.serious.service/-annotation-descriptor/name.html","searchKeys":["name","val name: String","com.serious.service.AnnotationDescriptor.name"]},{"name":"val name: String","description":"com.serious.service.ComponentInterface.name","location":"service-core/com.serious.service/-component-interface/name.html","searchKeys":["name","val name: String","com.serious.service.ComponentInterface.name"]},{"name":"val name: String","description":"com.serious.service.InterfaceDescriptor.name","location":"service-core/com.serious.service/-interface-descriptor/name.html","searchKeys":["name","val name: String","com.serious.service.InterfaceDescriptor.name"]},{"name":"val name: String","description":"com.serious.service.MethodDescriptor.name","location":"service-core/com.serious.service/-method-descriptor/name.html","searchKeys":["name","val name: String","com.serious.service.MethodDescriptor.name"]},{"name":"val name: String","description":"com.serious.service.ParameterDescriptor.name","location":"service-core/com.serious.service/-parameter-descriptor/name.html","searchKeys":["name","val name: String","com.serious.service.ParameterDescriptor.name"]},{"name":"val name: String","description":"com.serious.service.ParameterValueDescriptor.name","location":"service-core/com.serious.service/-parameter-value-descriptor/name.html","searchKeys":["name","val name: String","com.serious.service.ParameterValueDescriptor.name"]},{"name":"val name: String","description":"com.serious.service.PropertyDescriptor.name","location":"service-core/com.serious.service/-property-descriptor/name.html","searchKeys":["name","val name: String","com.serious.service.PropertyDescriptor.name"]},{"name":"val name: String","description":"com.serious.service.ServiceInterface.name","location":"service-core/com.serious.service/-service-interface/name.html","searchKeys":["name","val name: String","com.serious.service.ServiceInterface.name"]},{"name":"val name: String","description":"com.serious.service.TypeDescriptor.name","location":"service-core/com.serious.service/-type-descriptor/name.html","searchKeys":["name","val name: String","com.serious.service.TypeDescriptor.name"]},{"name":"val name: String","description":"com.serious.service.administration.model.ComponentDTO.name","location":"service-core/com.serious.service.administration.model/-component-d-t-o/name.html","searchKeys":["name","val name: String","com.serious.service.administration.model.ComponentDTO.name"]},{"name":"val optional: Boolean","description":"com.serious.service.TypeDescriptor.optional","location":"service-core/com.serious.service/-type-descriptor/optional.html","searchKeys":["optional","val optional: Boolean","com.serious.service.TypeDescriptor.optional"]},{"name":"val packageName: String","description":"com.serious.codegenerator.typescript.PackageMapping.packageName","location":"service-core/com.serious.codegenerator.typescript/-package-mapping/package-name.html","searchKeys":["packageName","val packageName: String","com.serious.codegenerator.typescript.PackageMapping.packageName"]},{"name":"val parameter: List<TypeDescriptor>","description":"com.serious.service.TypeDescriptor.parameter","location":"service-core/com.serious.service/-type-descriptor/parameter.html","searchKeys":["parameter","val parameter: List<TypeDescriptor>","com.serious.service.TypeDescriptor.parameter"]},{"name":"val parameterTypes: Array<Class<*>>","description":"com.serious.util.MethodDispatcher.RegisteredMethod.parameterTypes","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/parameter-types.html","searchKeys":["parameterTypes","val parameterTypes: Array<Class<*>>","com.serious.util.MethodDispatcher.RegisteredMethod.parameterTypes"]},{"name":"val parameters: Array<Parameter>","description":"com.serious.annotations.Description.parameters","location":"service-core/com.serious.annotations/-description/parameters.html","searchKeys":["parameters","val parameters: Array<Parameter>","com.serious.annotations.Description.parameters"]},{"name":"val parameters: List<ParameterDescriptor>","description":"com.serious.service.MethodDescriptor.parameters","location":"service-core/com.serious.service/-method-descriptor/parameters.html","searchKeys":["parameters","val parameters: List<ParameterDescriptor>","com.serious.service.MethodDescriptor.parameters"]},{"name":"val parameters: List<ParameterValueDescriptor>","description":"com.serious.service.AnnotationDescriptor.parameters","location":"service-core/com.serious.service/-annotation-descriptor/parameters.html","searchKeys":["parameters","val parameters: List<ParameterValueDescriptor>","com.serious.service.AnnotationDescriptor.parameters"]},{"name":"val port: Int","description":"com.serious.service.Server.port","location":"service-core/com.serious.service/-server/port.html","searchKeys":["port","val port: Int","com.serious.service.Server.port"]},{"name":"val preferLocal: Boolean = false","description":"com.serious.service.annotations.InjectService.preferLocal","location":"service-core/com.serious.service.annotations/-inject-service/prefer-local.html","searchKeys":["preferLocal","val preferLocal: Boolean = false","com.serious.service.annotations.InjectService.preferLocal"]},{"name":"val properties: List<PropertyDescriptor>","description":"com.serious.service.InterfaceDescriptor.properties","location":"service-core/com.serious.service/-interface-descriptor/properties.html","searchKeys":["properties","val properties: List<PropertyDescriptor>","com.serious.service.InterfaceDescriptor.properties"]},{"name":"val queue: ArrayDeque<KClass<*>>","description":"com.serious.service.InterfaceAnalyzer.queue","location":"service-core/com.serious.service/-interface-analyzer/queue.html","searchKeys":["queue","val queue: ArrayDeque<KClass<*>>","com.serious.service.InterfaceAnalyzer.queue"]},{"name":"val returnType: TypeDescriptor","description":"com.serious.service.MethodDescriptor.returnType","location":"service-core/com.serious.service/-method-descriptor/return-type.html","searchKeys":["returnType","val returnType: TypeDescriptor","com.serious.service.MethodDescriptor.returnType"]},{"name":"val services: Array<KClass<out Service>>","description":"com.serious.service.ComponentInterface.services","location":"service-core/com.serious.service/-component-interface/services.html","searchKeys":["services","val services: Array<KClass<out Service>>","com.serious.service.ComponentInterface.services"]},{"name":"val services: Collection<InterfaceDescriptor>","description":"com.serious.service.ComponentModel.services","location":"service-core/com.serious.service/-component-model/services.html","searchKeys":["services","val services: Collection<InterfaceDescriptor>","com.serious.service.ComponentModel.services"]},{"name":"val services: HashMap<String, InterfaceDescriptor>","description":"com.serious.service.InterfaceAnalyzer.services","location":"service-core/com.serious.service/-interface-analyzer/services.html","searchKeys":["services","val services: HashMap<String, InterfaceDescriptor>","com.serious.service.InterfaceAnalyzer.services"]},{"name":"val type: TypeDescriptor","description":"com.serious.service.ParameterDescriptor.type","location":"service-core/com.serious.service/-parameter-descriptor/type.html","searchKeys":["type","val type: TypeDescriptor","com.serious.service.ParameterDescriptor.type"]},{"name":"val type: TypeDescriptor","description":"com.serious.service.ParameterValueDescriptor.type","location":"service-core/com.serious.service/-parameter-value-descriptor/type.html","searchKeys":["type","val type: TypeDescriptor","com.serious.service.ParameterValueDescriptor.type"]},{"name":"val type: TypeDescriptor?","description":"com.serious.service.PropertyDescriptor.type","location":"service-core/com.serious.service/-property-descriptor/type.html","searchKeys":["type","val type: TypeDescriptor?","com.serious.service.PropertyDescriptor.type"]},{"name":"val uri: List<URI>","description":"com.serious.service.ServiceAddress.uri","location":"service-core/com.serious.service/-service-address/uri.html","searchKeys":["uri","val uri: List<URI>","com.serious.service.ServiceAddress.uri"]},{"name":"val uri: URI","description":"com.serious.service.ChannelAddress.uri","location":"service-core/com.serious.service/-channel-address/uri.html","searchKeys":["uri","val uri: URI","com.serious.service.ChannelAddress.uri"]},{"name":"val uri: URI?","description":"com.serious.service.BaseDescriptor.uri","location":"service-core/com.serious.service/-base-descriptor/uri.html","searchKeys":["uri","val uri: URI?","com.serious.service.BaseDescriptor.uri"]},{"name":"val value: Any?","description":"com.serious.service.ParameterValueDescriptor.value","location":"service-core/com.serious.service/-parameter-value-descriptor/value.html","searchKeys":["value","val value: Any?","com.serious.service.ParameterValueDescriptor.value"]},{"name":"val value: String","description":"com.serious.annotations.Description.value","location":"service-core/com.serious.annotations/-description/value.html","searchKeys":["value","val value: String","com.serious.annotations.Description.value"]},{"name":"val value: String","description":"com.serious.service.RegisterChannel.value","location":"service-core/com.serious.service/-register-channel/value.html","searchKeys":["value","val value: String","com.serious.service.RegisterChannel.value"]},{"name":"var address: ServiceAddress","description":"com.serious.service.channel.AbstractChannel.URIProvider.address","location":"service-core/com.serious.service.channel/-abstract-channel/-u-r-i-provider/address.html","searchKeys":["address","var address: ServiceAddress","com.serious.service.channel.AbstractChannel.URIProvider.address"]},{"name":"var applicationContext: ApplicationContext?","description":"com.serious.service.ChannelManager.applicationContext","location":"service-core/com.serious.service/-channel-manager/application-context.html","searchKeys":["applicationContext","var applicationContext: ApplicationContext?","com.serious.service.ChannelManager.applicationContext"]},{"name":"var applicationContext: ApplicationContext?","description":"com.serious.service.ServiceManager.applicationContext","location":"service-core/com.serious.service/-service-manager/application-context.html","searchKeys":["applicationContext","var applicationContext: ApplicationContext?","com.serious.service.ServiceManager.applicationContext"]},{"name":"var channel: String","description":"com.serious.service.ServiceAddress.channel","location":"service-core/com.serious.service/-service-address/channel.html","searchKeys":["channel","var channel: String","com.serious.service.ServiceAddress.channel"]},{"name":"var channelFactories: MutableMap<String, ChannelFactory>","description":"com.serious.service.ChannelManager.channelFactories","location":"service-core/com.serious.service/-channel-manager/channel-factories.html","searchKeys":["channelFactories","var channelFactories: MutableMap<String, ChannelFactory>","com.serious.service.ChannelManager.channelFactories"]},{"name":"var channelManager: ChannelManager","description":"com.serious.service.ServiceManager.channelManager","location":"service-core/com.serious.service/-service-manager/channel-manager.html","searchKeys":["channelManager","var channelManager: ChannelManager","com.serious.service.ServiceManager.channelManager"]},{"name":"var channelManager: ChannelManager","description":"com.serious.service.SpringChannelFactory.channelManager","location":"service-core/com.serious.service/-spring-channel-factory/channel-manager.html","searchKeys":["channelManager","var channelManager: ChannelManager","com.serious.service.SpringChannelFactory.channelManager"]},{"name":"var channels: MutableMap<String, Channel>","description":"com.serious.service.ChannelManager.channels","location":"service-core/com.serious.service/-channel-manager/channels.html","searchKeys":["channels","var channels: MutableMap<String, Channel>","com.serious.service.ChannelManager.channels"]},{"name":"var component: InterfaceDescriptor?","description":"com.serious.service.InterfaceAnalyzer.component","location":"service-core/com.serious.service/-interface-analyzer/component.html","searchKeys":["component","var component: InterfaceDescriptor?","com.serious.service.InterfaceAnalyzer.component"]},{"name":"var component: String","description":"com.serious.service.ServiceAddress.component","location":"service-core/com.serious.service/-service-address/component.html","searchKeys":["component","var component: String","com.serious.service.ServiceAddress.component"]},{"name":"var componentDescriptors: MutableMap<String, ComponentDescriptor<Component>>","description":"com.serious.service.ServiceManager.componentDescriptors","location":"service-core/com.serious.service/-service-manager/component-descriptors.html","searchKeys":["componentDescriptors","var componentDescriptors: MutableMap<String, ComponentDescriptor<Component>>","com.serious.service.ServiceManager.componentDescriptors"]},{"name":"var componentRegistry: ComponentRegistry","description":"com.serious.service.ServiceManager.componentRegistry","location":"service-core/com.serious.service/-service-manager/component-registry.html","searchKeys":["componentRegistry","var componentRegistry: ComponentRegistry","com.serious.service.ServiceManager.componentRegistry"]},{"name":"var components: ArrayList<ComponentDescriptor<Component>>","description":"com.serious.service.ComponentLocator.Companion.components","location":"service-core/com.serious.service/-component-locator/-companion/components.html","searchKeys":["components","var components: ArrayList<ComponentDescriptor<Component>>","com.serious.service.ComponentLocator.Companion.components"]},{"name":"var description: String","description":"com.serious.service.BaseDescriptor.description","location":"service-core/com.serious.service/-base-descriptor/description.html","searchKeys":["description","var description: String","com.serious.service.BaseDescriptor.description"]},{"name":"var descriptors: MutableMap<Class<out Service>, BaseDescriptor<*>>","description":"com.serious.service.BaseDescriptor.Companion.descriptors","location":"service-core/com.serious.service/-base-descriptor/-companion/descriptors.html","searchKeys":["descriptors","var descriptors: MutableMap<Class<out Service>, BaseDescriptor<*>>","com.serious.service.BaseDescriptor.Companion.descriptors"]},{"name":"var descriptors: MutableMap<String, ComponentDescriptor<*>>","description":"com.serious.service.ComponentDescriptor.Companion.descriptors","location":"service-core/com.serious.service/-component-descriptor/-companion/descriptors.html","searchKeys":["descriptors","var descriptors: MutableMap<String, ComponentDescriptor<*>>","com.serious.service.ComponentDescriptor.Companion.descriptors"]},{"name":"var domain: String","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.domain","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/domain.html","searchKeys":["domain","var domain: String","com.serious.codegenerator.typescript.TypescriptOptions.Builder.domain"]},{"name":"var emptyArgs: Array<Any>","description":"com.serious.service.ChannelInvocationHandler.Companion.emptyArgs","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/empty-args.html","searchKeys":["emptyArgs","var emptyArgs: Array<Any>","com.serious.service.ChannelInvocationHandler.Companion.emptyArgs"]},{"name":"var emptyArgs: Array<Any>","description":"com.serious.service.ServiceManager.Companion.emptyArgs","location":"service-core/com.serious.service/-service-manager/-companion/empty-args.html","searchKeys":["emptyArgs","var emptyArgs: Array<Any>","com.serious.service.ServiceManager.Companion.emptyArgs"]},{"name":"var filePerModel: Boolean","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.filePerModel","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/file-per-model.html","searchKeys":["filePerModel","var filePerModel: Boolean","com.serious.codegenerator.typescript.TypescriptOptions.Builder.filePerModel"]},{"name":"var filePerService: Boolean","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.filePerService","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/file-per-service.html","searchKeys":["filePerService","var filePerService: Boolean","com.serious.codegenerator.typescript.TypescriptOptions.Builder.filePerService"]},{"name":"var handlers: Array<ExceptionManager.Handler>","description":"com.serious.exception.ExceptionManager.handlers","location":"service-core/com.serious.exception/-exception-manager/handlers.html","searchKeys":["handlers","var handlers: Array<ExceptionManager.Handler>","com.serious.exception.ExceptionManager.handlers"]},{"name":"var header: String","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.header","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/header.html","searchKeys":["header","var header: String","com.serious.codegenerator.typescript.TypescriptOptions.Builder.header"]},{"name":"var health: String?","description":"com.serious.service.ComponentDescriptor.health","location":"service-core/com.serious.service/-component-descriptor/health.html","searchKeys":["health","var health: String?","com.serious.service.ComponentDescriptor.health"]},{"name":"var implementingBeans: MutableMap<BaseDescriptor<out Service>, BeanDefinition>","description":"com.serious.service.BaseDescriptor.Companion.implementingBeans","location":"service-core/com.serious.service/-base-descriptor/-companion/implementing-beans.html","searchKeys":["implementingBeans","var implementingBeans: MutableMap<BaseDescriptor<out Service>, BeanDefinition>","com.serious.service.BaseDescriptor.Companion.implementingBeans"]},{"name":"var indentation: Int","description":"com.serious.codegenerator.AbstractCodeGenerator.Writer.indentation","location":"service-core/com.serious.codegenerator/-abstract-code-generator/-writer/indentation.html","searchKeys":["indentation","var indentation: Int","com.serious.codegenerator.AbstractCodeGenerator.Writer.indentation"]},{"name":"var inet: InetUtils","description":"com.serious.service.AbstractComponent.Companion.inet","location":"service-core/com.serious.service/-abstract-component/-companion/inet.html","searchKeys":["inet","var inet: InetUtils","com.serious.service.AbstractComponent.Companion.inet"]},{"name":"var instance: ServiceManager?","description":"com.serious.service.ServiceManager.Companion.instance","location":"service-core/com.serious.service/-service-manager/-companion/instance.html","searchKeys":["instance","var instance: ServiceManager?","com.serious.service.ServiceManager.Companion.instance"]},{"name":"var label: String","description":"com.serious.service.BaseDescriptor.label","location":"service-core/com.serious.service/-base-descriptor/label.html","searchKeys":["label","var label: String","com.serious.service.BaseDescriptor.label"]},{"name":"var language: LanguageSupport?","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.language","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/language.html","searchKeys":["language","var language: LanguageSupport?","com.serious.codegenerator.typescript.TypescriptOptions.Builder.language"]},{"name":"var local: Service?","description":"com.serious.service.BaseDescriptor.local","location":"service-core/com.serious.service/-base-descriptor/local.html","searchKeys":["local","var local: Service?","com.serious.service.BaseDescriptor.local"]},{"name":"var log: Logger","description":"com.serious.service.ChannelInvocationHandler.Companion.log","location":"service-core/com.serious.service/-channel-invocation-handler/-companion/log.html","searchKeys":["log","var log: Logger","com.serious.service.ChannelInvocationHandler.Companion.log"]},{"name":"var log: Logger","description":"com.serious.service.ServiceManager.Companion.log","location":"service-core/com.serious.service/-service-manager/-companion/log.html","searchKeys":["log","var log: Logger","com.serious.service.ServiceManager.Companion.log"]},{"name":"var logger: Logger","description":"com.serious.service.BaseDescriptor.Companion.logger","location":"service-core/com.serious.service/-base-descriptor/-companion/logger.html","searchKeys":["logger","var logger: Logger","com.serious.service.BaseDescriptor.Companion.logger"]},{"name":"var logger: Logger","description":"com.serious.service.SpringChannelFactory.Companion.logger","location":"service-core/com.serious.service/-spring-channel-factory/-companion/logger.html","searchKeys":["logger","var logger: Logger","com.serious.service.SpringChannelFactory.Companion.logger"]},{"name":"var mappings: MutableList<PackageMapping>","description":"com.serious.codegenerator.typescript.TypescriptOptions.Builder.mappings","location":"service-core/com.serious.codegenerator.typescript/-typescript-options/-builder/mappings.html","searchKeys":["mappings","var mappings: MutableList<PackageMapping>","com.serious.codegenerator.typescript.TypescriptOptions.Builder.mappings"]},{"name":"var model: ComponentModel?","description":"com.serious.service.ComponentDescriptor.model","location":"service-core/com.serious.service/-component-descriptor/model.html","searchKeys":["model","var model: ComponentModel?","com.serious.service.ComponentDescriptor.model"]},{"name":"var name: String","description":"com.serious.service.BaseDescriptor.name","location":"service-core/com.serious.service/-base-descriptor/name.html","searchKeys":["name","var name: String","com.serious.service.BaseDescriptor.name"]},{"name":"var name: String","description":"com.serious.service.administration.model.ChannelDTO.name","location":"service-core/com.serious.service.administration.model/-channel-d-t-o/name.html","searchKeys":["name","var name: String","com.serious.service.administration.model.ChannelDTO.name"]},{"name":"var nextApplicableMethod: MethodDispatcher.RegisteredMethod?","description":"com.serious.util.MethodDispatcher.RegisteredMethod.nextApplicableMethod","location":"service-core/com.serious.util/-method-dispatcher/-registered-method/next-applicable-method.html","searchKeys":["nextApplicableMethod","var nextApplicableMethod: MethodDispatcher.RegisteredMethod?","com.serious.util.MethodDispatcher.RegisteredMethod.nextApplicableMethod"]},{"name":"var port: String?","description":"com.serious.service.AbstractComponent.Companion.port","location":"service-core/com.serious.service/-abstract-component/-companion/port.html","searchKeys":["port","var port: String?","com.serious.service.AbstractComponent.Companion.port"]},{"name":"var proxies: MutableMap<String, Service>","description":"com.serious.service.ServiceManager.proxies","location":"service-core/com.serious.service/-service-manager/proxies.html","searchKeys":["proxies","var proxies: MutableMap<String, Service>","com.serious.service.ServiceManager.proxies"]},{"name":"var serviceInstanceRegistry: ServiceInstanceRegistry","description":"com.serious.service.ServiceManager.serviceInstanceRegistry","location":"service-core/com.serious.service/-service-manager/service-instance-registry.html","searchKeys":["serviceInstanceRegistry","var serviceInstanceRegistry: ServiceInstanceRegistry","com.serious.service.ServiceManager.serviceInstanceRegistry"]},{"name":"var serviceInstances: List<ServiceInstance>","description":"com.serious.service.ServiceAddress.serviceInstances","location":"service-core/com.serious.service/-service-address/service-instances.html","searchKeys":["serviceInstances","var serviceInstances: List<ServiceInstance>","com.serious.service.ServiceAddress.serviceInstances"]},{"name":"var serviceInterface: Class<out T>","description":"com.serious.service.BaseDescriptor.serviceInterface","location":"service-core/com.serious.service/-base-descriptor/service-interface.html","searchKeys":["serviceInterface","var serviceInterface: Class<out T>","com.serious.service.BaseDescriptor.serviceInterface"]},{"name":"var serviceManager: ServiceManager?","description":"com.serious.service.ComponentDescriptor.serviceManager","location":"service-core/com.serious.service/-component-descriptor/service-manager.html","searchKeys":["serviceManager","var serviceManager: ServiceManager?","com.serious.service.ComponentDescriptor.serviceManager"]},{"name":"var services: MutableList<ServiceDescriptor<*>>","description":"com.serious.service.ComponentDescriptor.services","location":"service-core/com.serious.service/-component-descriptor/services.html","searchKeys":["services","var services: MutableList<ServiceDescriptor<*>>","com.serious.service.ComponentDescriptor.services"]},{"name":"var size: Int","description":"com.serious.lang.Keywords.size","location":"service-core/com.serious.lang/-keywords/size.html","searchKeys":["size","var size: Int","com.serious.lang.Keywords.size"]},{"name":"var uri: List<URI>","description":"com.serious.service.administration.model.ChannelDTO.uri","location":"service-core/com.serious.service.administration.model/-channel-d-t-o/uri.html","searchKeys":["uri","var uri: List<URI>","com.serious.service.administration.model.ChannelDTO.uri"]}]
